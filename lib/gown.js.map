{"version":3,"sources":["webpack:///webpack/bootstrap 23789fe065d3eb09183a","webpack:///./src/controls/ToggleButton.js","webpack:///./src/shapes/Shape.js","webpack:///./src/core/Control.js","webpack:///./~/eventemitter3/index.js","webpack:///./src/controls/Button.js","webpack:///./src/controls/InputControl.js","webpack:///./src/controls/Scrollable.js","webpack:///./src/core/Skinable.js","webpack:///./src/utils/roundToPrecision.js","webpack:///./src/controls/Scroller.js","webpack:///./src/layout/Layout.js","webpack:///./src/layout/LayoutAlignment.js","webpack:///./src/layout/TiledLayout.js","webpack:///./src/layout/utils/itemDimensions.js","webpack:///./src/controls/LayoutGroup.js","webpack:///./src/controls/List.js","webpack:///./src/controls/ScrollBar.js","webpack:///./src/controls/ScrollThumb.js","webpack:///./src/controls/TextInput.js","webpack:///./src/controls/renderers/DefaultListItemRenderer.js","webpack:///./src/data/ListCollection.js","webpack:///./src/skin/Theme.js","webpack:///./src/skin/ThemeFont.js","webpack:///./src/utils/InputWrapper.js","webpack:///./src/utils/ScaleContainer.js","webpack:///./src/utils/SliderData.js","webpack:///./src/utils/Tween.js","webpack:///./src/utils/mixin.js","webpack:///./src/utils/position.js","webpack:///./src/utils/resizeScaling.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/controls/Application.js","webpack:///./src/controls/AutoComplete.js","webpack:///./src/controls/Check.js","webpack:///./src/controls/PickerList.js","webpack:///./src/controls/Radio.js","webpack:///./src/controls/ScrollContainer.js","webpack:///./src/controls/Slider.js","webpack:///./src/controls/TextArea.js","webpack:///./src/controls/ToggleGroup.js","webpack:///./src/core/index.js","webpack:///./src/interaction/KeyboardManager.js","webpack:///./src/interaction/ResizeManager.js","webpack:///./src/layout/HorizontalLayout.js","webpack:///./src/layout/TiledColumnsLayout.js","webpack:///./src/layout/TiledRowsLayout.js","webpack:///./src/layout/VerticalLayout.js","webpack:///./src/shapes/Arrow.js","webpack:///./src/shapes/Diamond.js","webpack:///./src/shapes/Ellipse.js","webpack:///./src/shapes/Line.js","webpack:///./src/shapes/Rect.js","webpack:///./src/skin/ThemeParser.js","webpack:///./src/utils/index.js","webpack:///./src/index.js","webpack:///./src/utils/roundDownToNearest.js","webpack:///./src/utils/roundToNearest.js","webpack:///./src/utils/roundUpToNearest.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AChuCAAuC;AACvC;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;;;;;;AClND;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,gDAAgD;AAChD,oCAAoC;AACpC,sCAAsC;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AC9PA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;ACxFA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0DAA0D,OAAO;AACjE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC,SAAS;AAClD;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA,eAAe,YAAY;AAC3B;;AAEA;AACA,2DAA2D;AAC3D,+DAA+D;AAC/D,mEAAmE;AACnE,uEAAuE;AACvE;AACA,0DAA0D,SAAS;AACnE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB,WAAW,MAAM;AACjB,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB,WAAW,MAAM;AACjB,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,aAAa,aAAa;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,2DAA2D,YAAY;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,aAAa;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtTA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,+DAA+D;AAC/D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK,QAAQ;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;AC5ZD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kCAAkC;AAClC,8BAA8B;AAC9B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,4CAA4C;AAC5C,wCAAwC;AACxC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+CAA+C;AAC/C,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C;AAC7C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D,kFAAkF;AAClF,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;AC/zBD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0EAA0E;AAC1E,4EAA4E;AAC5E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC;AACzC,yCAAyC;AACzC,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wDAAwD;AACxD,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iDAAiD;AACjD,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;AC/mBD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,0DAA0D;AAC1D,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;;;;;;ACfA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,4EAA4E;AAC5E;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,OAAO;AACjC,qBAAqB,OAAO;AAC5B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1uCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,6CAA6C;AAC7C,0BAA0B;AAC1B;AACA;AACA;AACA;;;;;;;ACnOA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF;AACnF,yDAAyD;AACzD,6EAA6E;AAC7E;AACA;AACA;AACA;AACA,eAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF;AACnF,qDAAqD;AACrD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,eAAe;AAC9B;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC;AACvC,4EAA4E;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iDAAiD;AACjD,oDAAoD;AACpD,sDAAsD;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;;;;;;AC1QD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iDAAiD;AACjD,oDAAoD;AACpD,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc,kBAAkB;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;;;;;;ACxZD;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;;;;;;AClBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD,qEAAqE;AACrE,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,OAAO;AAClB,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+DAA+D;AAC/D,gDAAgD;AAChD,gDAAgD;AAChD,uCAAuC;AACvC,yCAAyC;AACzC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gDAAgD;AAChD,gDAAgD;AAChD,uCAAuC;AACvC,yCAAyC;AACzC;AACA;AACA,wCAAwC,KAAK;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0BAA0B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0BAA0B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;ACxOD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC;AAChC,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+BAA+B;AACtD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,+BAA+B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,mBAAmB,+BAA+B;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;;;;;;;AC7ZA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+FAA+F;AAC/F,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;;;;;;ACnJD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE,8CAA8C;AAC9C,0EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oDAAoD;AACpD,oDAAoD;AACpD,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxNA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,sEAAsE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;ACzHA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;;;;;;ACzJD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,gDAAgD;AAChD,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B;AAC9B,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B;AAC7B,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC;AACzC,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kCAAkC;AAClC,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;;;;;;AC1OA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iEAAiE;AACjE,qFAAqF;AACrF,iFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+CAA+C;AAC/C,yEAAyE;AACzE;AACA,0EAA0E;AAC1E;AACA,0EAA0E;AAC1E,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+CAA+C;AAC/C,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oDAAoD;AACpD,uDAAuD;AACvD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnNA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;;;;;;AC7KD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO,uBAAuB;AACzC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;AC7OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA,4DAA4D;AAC5D;AACA,0EAA0E;AAC1E;AACA,0EAA0E;AAC1E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B;AAC5B,4BAA4B;AAC5B,uBAAuB;AACvB,wBAAwB;AACxB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D,yCAAyC;AACzC,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1WA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,uCAAuC;AACvC,sDAAsD;AACtD,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yDAAyD;AACzD,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD;AACrD,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAmC;AACnC,uCAAuC;AACvC,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,kDAAkD,YAAY;AAC9D,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1MA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,+BAA+B;AAC/B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;;AAElC;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/HA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;ACpBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA,6CAA6C,OAAO;AACpD,uDAAuD,OAAO;AAC9D,sBAAsB,OAAO;AAC7B,uBAAuB,OAAO;AAC9B,wBAAwB,OAAO;AAC/B,gDAAgD,uCAAuC;AACvF,wCAAwC,eAAe;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC,QAAQ;AAC3C,+BAA+B,QAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC;;;;;;;ACjVD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,2CAA2C;AAC3C,4EAA4E;AAC5E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4CAA4C;AAC5C,8CAA8C;AAC9C,gDAAgD;AAChD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,EAAE;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;ACzWD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9BA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C;AAC1C,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzRA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,oEAAoE;AACpE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;AC/CD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AClBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,wCAAwC;AACxC,yDAAyD;AACzD,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sCAAsC;AACtC,kCAAkC;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kCAAkC,oBAAoB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;AChOD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;ACtLD;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACbA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD,qBAAqB;AACrB,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oDAAoD;AACpD,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wDAAwD;AACxD,0EAA0E;AAC1E,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AC/PA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD,qBAAqB;AACrB,+GAA+G;AAC/G,+GAA+G;AAC/G;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wDAAwD;AACxD,0EAA0E;AAC1E,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,8HAA8H;AAC9H;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AC3QA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACzBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;;;;;;AC5CD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;AC5CD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACzBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,0CAA0C;AAC1C,6CAA6C;AAC7C,+CAA+C;AAC/C,oCAAoC;AACpC,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,kDAAkD;AAClD,4CAA4C;AAC5C,8CAA8C;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,kDAAkD;AAClD,4CAA4C;AAC5C,8CAA8C;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,yCAAyC;AACzC,mCAAmC;AACnC,qCAAqC;AACrC,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACzFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD,sDAAsD;AACtD,gDAAgD;AAChD,kDAAkD;AAClD,kDAAkD;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;;;;;;AC5DD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,4DAA4D;AAC5D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,0CAA0C;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6CAA6C;AAC7C,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kCAAkC;AAClC,+BAA+B;AAC/B,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yEAAyE;AACzE,yDAAyD;AACzD,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnOA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;AChFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,2DAA2D;AAC3D,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,2DAA2D;AAC3D,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,2DAA2D;AAC3D,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"gown.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 55);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 23789fe065d3eb09183a","var Button = require('./Button');\r\n\r\n/**\r\n * Basic button that has a selected state which indicates if the button\r\n * is pressed or not.\r\n *\r\n * @class ToggleButton\r\n * @extends GOWN.Button\r\n * @memberof GOWN\r\n * @constructor\r\n */\r\nfunction ToggleButton(theme, skinName) {\r\n    skinName = skinName || ToggleButton.SKIN_NAME;\r\n\r\n    /**\r\n     * The valid toggle button states\r\n     *\r\n     * @private\r\n     * @type String[]\r\n     * @default ToggleButton.stateNames\r\n     */\r\n    this._validStates = ToggleButton.stateNames;\r\n\r\n    Button.call(this, theme, skinName);\r\n\r\n    /**\r\n     * The pressed state of the Button\r\n     *\r\n     * @private\r\n     * @type Boolean\r\n     * @default false\r\n     */\r\n    this._selected = false;\r\n}\r\n\r\nToggleButton.prototype = Object.create( Button.prototype );\r\nToggleButton.prototype.constructor = ToggleButton;\r\nmodule.exports = ToggleButton;\r\n\r\n/**\r\n * Dispatched when the button is selected or deselected either\r\n * programmatically or as a result of user interaction.The value of the\r\n * <code>selected</code> property indicates whether the button is selected.\r\n * or not.\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nToggleButton.CHANGE = 'change';\r\n\r\n/**\r\n * Default toggle button skin name\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nToggleButton.SKIN_NAME = 'toggle_button';\r\n\r\n/**\r\n * Selected up state: mouse button is released or finger is removed from the screen + the toggle button is selected\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nToggleButton.SELECTED_UP = 'selected_up';\r\n\r\n/**\r\n * Selected down state: mouse button is pressed or finger touches the screen + the toggle button is selected\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nToggleButton.SELECTED_DOWN = 'selected_down';\r\n\r\n/**\r\n * Selected hover state: mouse pointer hovers over the button + the toggle button is selected\r\n * (ignored on mobile)\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nToggleButton.SELECTED_HOVER = 'selected_hover';\r\n\r\n/**\r\n * Names of possible states for a toggle button\r\n *\r\n * @static\r\n * @final\r\n * @type String[]\r\n * @private\r\n */\r\nToggleButton.stateNames = Button.stateNames.concat([\r\n    ToggleButton.SELECTED_UP,\r\n    ToggleButton.SELECTED_DOWN,\r\n    ToggleButton.SELECTED_HOVER]);\r\n\r\n/**\r\n * @private\r\n */\r\nvar originalCurrentState = Object.getOwnPropertyDescriptor(Button.prototype, 'currentState');\r\n\r\n/**\r\n * The current state\r\n *\r\n * @name GOWN.ToggleButton#currentState\r\n * @type String\r\n */\r\nObject.defineProperty(ToggleButton.prototype, 'currentState',{\r\n    get: function() {\r\n        return this._currentState;\r\n    },\r\n    set: function(value) {\r\n        if (this._selected) {\r\n            value = 'selected_' + value;\r\n        }\r\n        originalCurrentState.set.call(this, value);\r\n    }\r\n});\r\n\r\n/**\r\n * Set the selection state\r\n *\r\n * @param selected value of selection {bool}\r\n * @param [emit] set to true if you want to emit the change signal\r\n *        (used to prevent infinite loop in ToggleGroup) {bool}\r\n * @private\r\n */\r\nToggleButton.prototype.setSelected = function(selected, emit) {\r\n    var state = this._currentState;\r\n    this.invalidState = this._selected !== selected || this.invalidState;\r\n    if (state.indexOf('selected_') === 0) {\r\n        state = state.substr(9, state.length);\r\n    }\r\n    if (this._selected !== selected) {\r\n        this._selected = selected;\r\n        if (emit) {\r\n            this.emit(ToggleButton.CHANGE, this, selected);\r\n        }\r\n    }\r\n    this._pressed = false; //to prevent toggling on touch/mouse up\r\n    this.currentState = state;\r\n};\r\n\r\n/**\r\n * Indicate if the button is selected (pressed)\r\n *\r\n * @name GOWN.ToggleButton#selected\r\n * @type Boolean\r\n * @default false\r\n */\r\nObject.defineProperty(ToggleButton.prototype, 'selected', {\r\n    set: function(selected) {\r\n        this.setSelected(selected, true);\r\n    },\r\n    get: function() {\r\n        return this._selected;\r\n    }\r\n});\r\n\r\n/**\r\n * Toggle the state\r\n */\r\nToggleButton.prototype.toggle = function() {\r\n    this.selected = !this._selected;\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nToggleButton.prototype.buttonHandleEvent = Button.prototype.handleEvent;\r\n\r\n/**\r\n * handle the touch/tap event\r\n *\r\n * @param type the type of the press/touch. {Object}\r\n * @protected\r\n **/\r\nToggleButton.prototype.handleEvent = function(type) {\r\n    if (!this._enabled) {\r\n        return;\r\n    }\r\n    this.buttonHandleEvent(type);\r\n    if (type === Button.UP) {\r\n        this.toggle();\r\n    }\r\n};\r\n\r\n/**\r\n * The fallback skin if the other skin does not exist (e.g. if a mobile theme\r\n * that does not provide a \"hover\" state is used on a desktop system)\r\n *\r\n * @name GOWN.ToggleButton#skinFallback\r\n * @type String\r\n */\r\nObject.defineProperty(ToggleButton.prototype, 'skinFallback', {\r\n    get: function() {\r\n        var selected = '';\r\n        if (this._currentState && this._currentState.indexOf('selected_') === 0) {\r\n            selected = 'selected_';\r\n        }\r\n        return selected + this._skinFallback;\r\n    },\r\n    set: function(value) {\r\n        this._skinFallback = value;\r\n    }\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/ToggleButton.js\n// module id = 0\n// module chunks = 0","/**\r\n * Shape base class\r\n *\r\n * @class Shape\r\n * @extends PIXI.Graphics\r\n * @memberof GOWN.shapes\r\n * @constructor\r\n * @param color Color of the shape {Number}\r\n * @param [alpha=1.0] Alpha value of the shape {Number}\r\n * @param width Width of the shape {Number}\r\n * @param height Height of the shape {Number}\r\n */\r\nfunction Shape(color, alpha, width, height) {\r\n    PIXI.Graphics.call(this);\r\n\r\n    /**\r\n     * Color of the shape\r\n     *\r\n     * @private\r\n     * @type Number\r\n     */\r\n    this._color = color;\r\n\r\n    /**\r\n     * Alpha value of the shape\r\n     *\r\n     * @private\r\n     * @type Number\r\n     * @default 1.0\r\n     */\r\n    this._alpha = alpha || 1.0;\r\n\r\n    /**\r\n     * Width of the shape\r\n     *\r\n     * @private\r\n     * @type Number\r\n     */\r\n    this._width = width;\r\n\r\n    /**\r\n     * Height of the shape\r\n     *\r\n     * @private\r\n     * @type Number\r\n     */\r\n    this._height = height;\r\n\r\n    /**\r\n     * Alpha value of the border\r\n     *\r\n     * @private\r\n     * @type Number\r\n     * @default 1.0\r\n     */\r\n    this._borderAlpha = 1.0;\r\n\r\n    /**\r\n     * Invalidate shape so that it will be redrawn next time\r\n     *\r\n     * @private\r\n     * @type bool\r\n     * @default true\r\n     */\r\n    this.invalid = true;\r\n}\r\n\r\nShape.prototype = Object.create( PIXI.Graphics.prototype );\r\nShape.prototype.constructor = Shape;\r\nmodule.exports = Shape;\r\n\r\n/**\r\n * The width of the shape, setting this will redraw the component.\r\n *\r\n * @name GOWN.shapes.Shape#width\r\n * @type Number\r\n */\r\nObject.defineProperty(Shape.prototype, 'width', {\r\n    get: function() {\r\n        return this._width;\r\n    },\r\n    set: function(width) {\r\n        this._width = width;\r\n        this.invalid = true;\r\n    }\r\n});\r\n\r\n/**\r\n * The height of the shape, setting this will redraw the component.\r\n *\r\n * @name GOWN.shapes.Shape#height\r\n * @type Number\r\n */\r\nObject.defineProperty(Shape.prototype, 'height', {\r\n    get: function() {\r\n        return this._height;\r\n    },\r\n    set: function(height) {\r\n        this._height = height;\r\n        this.invalid = true;\r\n    }\r\n});\r\n\r\n/**\r\n * The fill color of the shape, setting this will redraw the component.\r\n *\r\n * Setting the color to a negative value or 'null', the shape will not be filled\r\n * (comes in handy when you only want to draw the border).\r\n *\r\n * @name GOWN.shapes.Shape#color\r\n * @type Number\r\n */\r\nObject.defineProperty(Shape.prototype, 'color', {\r\n    get: function() {\r\n        return this._color;\r\n    },\r\n    set: function(color) {\r\n        this._color = color;\r\n        this.invalid = true;\r\n    }\r\n});\r\n\r\n/**\r\n * The alpha of the shape, setting this will redraw the component.\r\n *\r\n * @name GOWN.shapes.Shape#alpha\r\n * @type Number\r\n * @default 1.0\r\n */\r\nObject.defineProperty(Shape.prototype, 'alpha', {\r\n    get: function() {\r\n        return this._alpha;\r\n    },\r\n    set: function(alpha) {\r\n        this._alpha = alpha;\r\n        this.invalid = true;\r\n    }\r\n});\r\n\r\n/**\r\n * Apply the color to the shape (called during redraw)\r\n *\r\n * @private\r\n */\r\nShape.prototype.applyColor = function() {\r\n    if (this.color > 0 && typeof this.color !== null) {\r\n        this.beginFill(this.color, this.alpha);\r\n    }\r\n};\r\n\r\n/**\r\n * Apply the border around shape (called during redraw)\r\n *\r\n * @private\r\n */\r\nShape.prototype.drawBorder = function() {\r\n    if (this.border) {\r\n        this.lineStyle(this.border, this.borderColor, this.borderAlpha);\r\n    }\r\n};\r\n\r\n/**\r\n * Change the border color of shape\r\n *\r\n * @property borderColor\r\n * @type Number\r\n */\r\nObject.defineProperty(Shape.prototype, 'borderColor', {\r\n    get: function() {\r\n        return this._borderColor;\r\n    },\r\n    set: function(borderColor) {\r\n        this._borderColor = borderColor;\r\n        this.invalid = true;\r\n    }\r\n});\r\n\r\n/**\r\n * Change the border alpha of shape (between 0.0 - 1.0)\r\n *\r\n * @property borderAlpha\r\n * @type Number\r\n * @default 1.0\r\n */\r\nObject.defineProperty(Shape.prototype, 'borderAlpha', {\r\n    get: function() {\r\n        return this._borderAlpha;\r\n    },\r\n    set: function(borderAlpha) {\r\n        this._borderAlpha = borderAlpha;\r\n        this.invalid = true;\r\n    }\r\n});\r\n\r\n/**\r\n * Change the border size\r\n *\r\n * @property border\r\n * @type Number\r\n */\r\nObject.defineProperty(Shape.prototype, 'border', {\r\n    get: function() {\r\n        return this._border;\r\n    },\r\n    set: function(border) {\r\n        this._border = border;\r\n        this.invalid = true;\r\n    }\r\n});\r\n\r\n/**\r\n * Draw the shape during redraw. Defaults to a simple rect.\r\n *\r\n * @private\r\n */\r\nShape.prototype._drawShape = function() {\r\n    // default shape is a rect\r\n    this.drawRect(\r\n        Math.min(this._width, 0),\r\n        Math.min(this._height, 0),\r\n        Math.abs(this._width),\r\n        Math.abs(this._height));\r\n};\r\n\r\n/**\r\n * PIXI method to update the object transform for rendering\r\n * Used to call redraw() before rendering\r\n *\r\n * @private\r\n */\r\nShape.prototype.updateTransform = function() {\r\n    this.redraw();\r\n\r\n    PIXI.Graphics.prototype.updateTransform.call(this);\r\n};\r\n\r\n\r\n/**\r\n * Update before draw call.\r\n * Redraw control for current state from theme\r\n *\r\n * @private\r\n */\r\nShape.prototype.redraw = function() {\r\n    if(!this.invalid) {\r\n        return;\r\n    }\r\n\r\n    this.clear();\r\n    this.applyColor();\r\n    this.drawBorder();\r\n    this._drawShape();\r\n\r\n    this.invalid = false;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/shapes/Shape.js\n// module id = 1\n// module chunks = 0","var resizeScaling = require('../utils/resizeScaling');\r\nvar mixin = require('../utils/mixin');\r\n\r\n/**\r\n * Base for all UI controls.\r\n *\r\n * Based on pixi-DisplayContainer that supports adding children, so all\r\n * controls are container.\r\n * @class Control\r\n * @extends PIXI.Container\r\n * @memberof GOWN\r\n * @constructor\r\n */\r\nfunction Control() {\r\n    PIXI.Container.call(this);\r\n    this.enabled = this.enabled !== false;\r\n    // assume all controls are interactive\r\n    this.interactive = true;\r\n\r\n    this.initResizeScaling();\r\n}\r\n\r\nControl.prototype = Object.create( PIXI.Container.prototype );\r\nControl.prototype.constructor = Control;\r\nmodule.exports = Control;\r\n\r\n/**\r\n * Change the theme (every control can have a theme, even if it does not\r\n * inherit Skinable, e.g. if there is only some color in the skin that will\r\n * be taken or if it has some skinable components as children)\r\n *\r\n * @param theme the new theme {GOWN.Theme}\r\n */\r\nControl.prototype.setTheme = function(theme) {\r\n    if (theme === this.theme && theme) {\r\n        return;\r\n    }\r\n\r\n    this.theme = theme;\r\n    this.invalidSkin = true;\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nControl.prototype.updateTransformContainer = PIXI.Container.prototype.updateTransform;\r\n\r\n/**\r\n * PIXI method to update the object transform for rendering\r\n * Used to call redraw() before rendering\r\n *\r\n * @private\r\n */\r\nControl.prototype.updateTransform = function() {\r\n    if (!this.parent) {\r\n        return;\r\n    }\r\n    if (this.redraw) {\r\n        this.redraw();\r\n    }\r\n    this.updateTransformContainer();\r\n};\r\n\r\n/**\r\n * Get the local mouse position from PIXI.InteractionData\r\n *\r\n * @returns {PIXI.Point}\r\n */\r\nControl.prototype.mousePos = function(e) {\r\n    return e.data.getLocalPosition(this);\r\n};\r\n\r\n/**\r\n * Enables/Disables the control.\r\n * (not implemented yet)\r\n *\r\n * @name GOWN.Control#enabled\r\n * @type Boolean\r\n */\r\nObject.defineProperty(Control.prototype, 'enabled', {\r\n    get: function() {\r\n        return this._enabled;\r\n    },\r\n    set: function(value) {\r\n        this._enabled = value;\r\n    }\r\n});\r\n\r\nmixin(Control.prototype, resizeScaling);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/core/Control.js\n// module id = 2\n// module chunks = 0","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @api private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {Mixed} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @api private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @api public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @api public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Boolean} exists Only check if there are listeners.\n * @returns {Array|Boolean}\n * @api public\n */\nEventEmitter.prototype.listeners = function listeners(event, exists) {\n  var evt = prefix ? prefix + event : event\n    , available = this._events[evt];\n\n  if (exists) return !!available;\n  if (!available) return [];\n  if (available.fn) return [available.fn];\n\n  for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {\n    ee[i] = available[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @api public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn The listener function.\n * @param {Mixed} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  var listener = new EE(fn, context || this)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n  else if (!this._events[evt].fn) this._events[evt].push(listener);\n  else this._events[evt] = [this._events[evt], listener];\n\n  return this;\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn The listener function.\n * @param {Mixed} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  var listener = new EE(fn, context || this, true)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n  else if (!this._events[evt].fn) this._events[evt].push(listener);\n  else this._events[evt] = [this._events[evt], listener];\n\n  return this;\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {Mixed} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    if (--this._eventsCount === 0) this._events = new Events();\n    else delete this._events[evt];\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n         listeners.fn === fn\n      && (!once || listeners.once)\n      && (!context || listeners.context === context)\n    ) {\n      if (--this._eventsCount === 0) this._events = new Events();\n      else delete this._events[evt];\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n           listeners[i].fn !== fn\n        || (once && !listeners[i].once)\n        || (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else if (--this._eventsCount === 0) this._events = new Events();\n    else delete this._events[evt];\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {String|Symbol} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) {\n      if (--this._eventsCount === 0) this._events = new Events();\n      else delete this._events[evt];\n    }\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// This function doesn't apply anymore.\n//\nEventEmitter.prototype.setMaxListeners = function setMaxListeners() {\n  return this;\n};\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/eventemitter3/index.js\n// module id = 3\n// module chunks = 0","var Skinable = require('../core/Skinable');\r\n\r\n/**\r\n * The basic Button with 3 states (up, down and hover) and a label that is\r\n * centered on it\r\n *\r\n * @class Button\r\n * @extends GOWN.Skinable\r\n * @memberof GOWN\r\n * @constructor\r\n * @param [theme] theme for the button {GOWN.Theme}\r\n * @param [skinName=Button.SKIN_NAME] name of the button skin {String}\r\n */\r\nfunction Button(theme, skinName) {\r\n    Skinable.call(this, theme);\r\n\r\n    /**\r\n     * The valid button states\r\n     *\r\n     * @private\r\n     * @type String[]\r\n     * @default Button.stateNames\r\n     */\r\n    this._validStates = this._validStates || Button.stateNames;\r\n\r\n    /**\r\n     * The skin name\r\n     *\r\n     * @type String\r\n     * @default Button.SKIN_NAME\r\n     */\r\n    this.skinName = skinName || Button.SKIN_NAME;\r\n\r\n    Button.prototype.handleEvent.call(this, Button.UP);\r\n\r\n    /**\r\n     * Invalidate label when the label text changed\r\n     * so that it will be redrawn next time\r\n     *\r\n     * @private\r\n     * @type bool\r\n     * @default true\r\n     */\r\n    this.updateLabel = true;\r\n\r\n    this.on('touchstart', this.onDown, this);\r\n    this.on('mousedown', this.onDown, this);\r\n\r\n    this.on('mouseover', this.onHover, this);\r\n    this.on('touchmove', this.onTouchMove, this);\r\n}\r\n\r\nButton.prototype = Object.create( Skinable.prototype );\r\nButton.prototype.constructor = Button;\r\nmodule.exports = Button;\r\n\r\n/**\r\n * Default button skin name\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nButton.SKIN_NAME = 'button';\r\n\r\n/**\r\n * Up state: mouse button is released or finger is removed from the screen\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nButton.UP = 'up';\r\n\r\n/**\r\n * Down state: mouse button is pressed or finger touches the screen\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nButton.DOWN = 'down';\r\n\r\n/**\r\n * Hover state: mouse pointer hovers over the button\r\n * (ignored on mobile)\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nButton.HOVER = 'hover';\r\n\r\n/**\r\n * Out state: mouse pointer leaves the button\r\n * (ignored on mobile)\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nButton.OUT = 'out';\r\n\r\n/**\r\n * Names of possible states for a button\r\n *\r\n * @static\r\n * @final\r\n * @type String[]\r\n * @private\r\n */\r\nButton.stateNames = [\r\n    Button.DOWN, Button.HOVER, Button.UP\r\n];\r\n\r\n/**\r\n * Dispatched when the button is triggered.\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nButton.TRIGGERED = 'triggered';\r\n\r\n/**\r\n * Initiate all skins first\r\n * (to prevent flickering)\r\n *\r\n * @protected\r\n */\r\nButton.prototype.preloadSkins = function() {\r\n    if (!this._validStates) {\r\n        return;\r\n    }\r\n    for (var i = 0; i < this._validStates.length; i++) {\r\n        var name = this._validStates[i];\r\n        this.fromSkin(name, this.skinLoaded);\r\n    }\r\n};\r\n\r\n/**\r\n * Skin has been loaded (see preloadSkins) and stored into the skinCache.\r\n * add to container, hide and resize\r\n *\r\n * @param skin the loaded skin\r\n * @protected\r\n */\r\nButton.prototype.skinLoaded = function(skin) {\r\n    this.addChildAt(skin, 0);\r\n    skin.alpha = 0.0;\r\n    if (this.width) {\r\n        skin.width = this.width;\r\n    } else if (skin.minWidth) {\r\n        this.width = skin.width = skin.minWidth;\r\n    }\r\n    if (this.height) {\r\n        skin.height = this.height;\r\n    } else if (skin.minHeight) {\r\n        this.height = skin.height = skin.minHeight;\r\n    }\r\n};\r\n\r\n/**\r\n * onDown callback\r\n *\r\n * @protected\r\n */\r\nButton.prototype.onDown = function() {\r\n    this.handleEvent(Button.DOWN);\r\n    this.on('touchend', this.onUp, this);\r\n    this.on('mouseupoutside', this.onUp, this);\r\n    this.on('mouseup', this.onUp, this);\r\n\r\n    this.on('touchendoutside', this.onOut, this);\r\n    this.on('mouseout', this.onOut, this);\r\n};\r\n\r\n/**\r\n * onUp callback\r\n *\r\n * @protected\r\n */\r\nButton.prototype.onUp = function() {\r\n    this.handleEvent(Button.UP);\r\n    this.off('touchend', this.onUp, this);\r\n    this.off('mouseupoutside', this.onUp, this);\r\n    this.off('mouseup', this.onUp, this);\r\n};\r\n\r\n/**\r\n * onHover callback\r\n *\r\n * @protected\r\n */\r\nButton.prototype.onHover = function() {\r\n    this.handleEvent(Button.HOVER);\r\n    this.on('touchendoutside', this.onOut, this);\r\n    this.on('mouseout', this.onOut, this);\r\n};\r\n\r\n/**\r\n * onOut callback\r\n *\r\n * @protected\r\n */\r\nButton.prototype.onOut = function() {\r\n    this.handleEvent(Button.OUT);\r\n    this.off('touchendoutside', this.onOut, this);\r\n    this.off('mouseout', this.onOut, this);\r\n};\r\n\r\n/**\r\n * onTouchMove callback\r\n *\r\n * @protected\r\n */\r\nButton.prototype.onTouchMove = function(eventData) {\r\n    // please note that if the user takes his finger from the screen when\r\n    // he is over the button, the button skin for \"hovered\" will be used.\r\n    // In a mobile UI you might not want to have any hovered skins/use the\r\n    // same skin for \"hover\" and \"up\".\r\n    if (eventData.data.target === this) {\r\n        this.handleEvent(Button.HOVER);\r\n    }\r\n};\r\n\r\n/**\r\n * Update width/height of the button\r\n *\r\n * @protected\r\n */\r\nButton.prototype.updateDimensions = function() {\r\n    var width = this.worldWidth;\r\n    var height = this.worldHeight;\r\n    if (this.hitArea) {\r\n        this.hitArea.width = width;\r\n        this.hitArea.height = height;\r\n    } else {\r\n        this.hitArea = new PIXI.Rectangle(0, 0, width, height);\r\n    }\r\n    for (var i = 0; i < this._validStates.length; i++) {\r\n        var name = this._validStates[i];\r\n        var skin = this.skinCache[name];\r\n        if (skin) {\r\n            skin.width = width;\r\n            skin.height = height;\r\n        }\r\n    }\r\n\r\n    if(this.labelText) {\r\n        var scaleY = height / this._height;\r\n        var style = this._textStyle || this.theme.textStyle;\r\n        style.fontSize = style.fontSize * scaleY;\r\n        this.labelText.style = style; // trigger setter\r\n        this.updateLabelDimensions();\r\n    }\r\n};\r\n\r\n/**\r\n * Handle one of the mouse/touch events\r\n *\r\n * @param type one of the valid states\r\n * @protected\r\n */\r\nButton.prototype.handleEvent = function(type) {\r\n    if (!this._enabled) {\r\n        return;\r\n    }\r\n    if (type === Button.DOWN) {\r\n        this.currentState = Button.DOWN;\r\n        // click / touch DOWN so the button is pressed and the pointer has to\r\n        // be over the Button\r\n        this._pressed = true;\r\n    } else if (type === Button.UP) {\r\n        this._pressed = false;\r\n\r\n        if (this._over) {\r\n            // the user taps or clicks the button\r\n            this.emit(Button.TRIGGERED, this);\r\n            if (this.theme.hoverSkin) {\r\n                this.currentState = Button.HOVER;\r\n            }\r\n        } else {\r\n            // user releases the mouse / touch outside of the button boundaries\r\n            this.currentState = Button.UP;\r\n        }\r\n    } else if (type === Button.HOVER) {\r\n        this._over = true;\r\n        if (this._pressed) {\r\n            this.currentState = Button.DOWN;\r\n        } else if (this.theme.hoverSkin) {\r\n            this.currentState = Button.HOVER;\r\n        }\r\n    } else  { // type === rollout and default\r\n        if (this._over) {\r\n            this._over = false;\r\n        }\r\n        this.currentState = Button.UP;\r\n    }\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\n// performance increase to avoid using call.. (10x faster)\r\nButton.prototype.redrawSkinable = Skinable.prototype.redraw;\r\n\r\n/**\r\n * Update before draw call (position label)\r\n *\r\n * @protected\r\n */\r\nButton.prototype.redraw = function() {\r\n    if (this.updateLabel) {\r\n        this.createLabel();\r\n    }\r\n    this.redrawSkinable();\r\n};\r\n\r\n/**\r\n * Create/update a label for this button\r\n *\r\n * @private\r\n */\r\nButton.prototype.createLabel = function() {\r\n    if(this.labelText) {\r\n        this.labelText.text = this._label;\r\n        this.labelText.style = this._textStyle || this.theme.textStyle.clone();\r\n    } else {\r\n        this.labelText = new PIXI.Text(\r\n            this._label,\r\n            this._textStyle || this.theme.textStyle.clone());\r\n        this.addChild(this.labelText);\r\n    }\r\n    this.updateLabelDimensions();\r\n    this.updateLabel = false;\r\n};\r\n\r\n/**\r\n * Create/update the position of the label\r\n *\r\n * @private\r\n */\r\nButton.prototype.updateLabelDimensions = function () {\r\n    if (this.labelText && this.labelText.text &&\r\n        (this.worldWidth - this.labelText.width) >= 0 &&\r\n        (this.worldHeight - this.labelText.height) >= 0) {\r\n        this.labelText.x = Math.floor((this.worldWidth - this.labelText.width) / 2);\r\n        this.labelText.y = Math.floor((this.worldHeight - this.labelText.height) / 2);\r\n    }\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nButton.prototype.skinableSetTheme = Skinable.prototype.setTheme;\r\n\r\n/**\r\n * Change the theme\r\n *\r\n * @param theme the new theme {GOWN.Theme}\r\n */\r\nButton.prototype.setTheme = function(theme) {\r\n    // this theme has other font or color settings - update the label\r\n    if (this.labelText) {\r\n        this.updateLabel = (this.updateLabel ||\r\n            this.labelText.font !== this.theme.labelFont ||\r\n            this.labelText.color !== this.theme.labelColor );\r\n    }\r\n    this.skinableSetTheme(theme);\r\n};\r\n\r\n/**\r\n * The current state\r\n *\r\n * @name GOWN.Button#currentState\r\n * @type String\r\n */\r\nObject.defineProperty(Button.prototype, 'currentState',{\r\n    get: function() {\r\n        return this._currentState;\r\n    },\r\n    set: function(value) {\r\n        if (this._currentState === value) {\r\n            return;\r\n        }\r\n        if (this._validStates.indexOf(value) < 0) {\r\n            throw new Error('Invalid state: ' + value + '.');\r\n        }\r\n        this._currentState = value;\r\n        // invalidate state so the next draw call will redraw the control\r\n        this.invalidState = true;\r\n    }\r\n});\r\n\r\n/**\r\n * Create/Update the label of the button.\r\n *\r\n * @name GOWN.Button#label\r\n * @type String\r\n */\r\nObject.defineProperty(Button.prototype, 'label', {\r\n    get: function() {\r\n        return this._label;\r\n    },\r\n    set: function(label) {\r\n        if(this._label === label) {\r\n            return;\r\n        }\r\n        this._label = label;\r\n        this.updateLabel = true;\r\n    }\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/Button.js\n// module id = 4\n// module chunks = 0","var Skinable = require('../core/Skinable'),\r\n    InputWrapper = require('../utils/InputWrapper');\r\n\r\n/**\r\n * InputControl used for TextInput, TextArea and everything else that\r\n * is capable of entering text\r\n *\r\n * roughly based on PIXI.Input InputObject by Sebastian Nette,\r\n * see https://github.com/SebastianNette/PIXI.Input\r\n *\r\n * @class InputControl\r\n * @extends GOWN.Skinable\r\n * @memberof GOWN\r\n * @constructor\r\n * @param [theme] theme for the input control {GOWN.Theme}\r\n */\r\nfunction InputControl(theme) {\r\n    Skinable.call(this, theme);\r\n\r\n    /**\r\n     * TODO\r\n     *\r\n     * @type bool\r\n     * @default true\r\n     */\r\n    this.receiveKeys = true;\r\n\r\n    /**\r\n     * Prevent other interaction (touch/move) on this component\r\n     *\r\n     * @type bool\r\n     * @default false\r\n     */\r\n    this.autoPreventInteraction = false;\r\n\r\n    /**\r\n     * Current position of the cursor in the text\r\n     *\r\n     * @type Number\r\n     * @default 0\r\n     * @private\r\n     */\r\n    this.cursorPos = 0;\r\n\r\n    /**\r\n     * Character position of selected area in the text (start and end)\r\n     *\r\n     * @type Number[]\r\n     * @default [0, 0]\r\n     * @private\r\n     */\r\n    this.selection = [0, 0];\r\n\r\n    /**\r\n     * Character position that marks the beginning of the current selection\r\n     *\r\n     * @type Number\r\n     * @default 0\r\n     * @private\r\n     */\r\n    this.selectionStart = 0;\r\n\r\n    /**\r\n     * Text offset\r\n     *\r\n     * @type PIXI.Point\r\n     * @default new PIXI.Point(5, 4)\r\n     * @private\r\n     */\r\n    this.textOffset = new PIXI.Point(5, 4);\r\n\r\n    this.text = this.text || '';\r\n\r\n    // create DOM Input (if we need one)\r\n    InputWrapper.createInput();\r\n\r\n    /**\r\n     * Determine if the input has the focus\r\n     *\r\n     * @type bool\r\n     * @default false\r\n     * @private\r\n     */\r\n    this._hasFocus = false;\r\n\r\n    /**\r\n     * Indicates if the mouse button is being pressed\r\n     *\r\n     * @type bool\r\n     * @default false\r\n     * @private\r\n     */\r\n    this._mouseDown = false;\r\n\r\n    /**\r\n     * The current state\r\n     *\r\n     * @type String\r\n     * @default InputControl.UP\r\n     * @private\r\n     */\r\n    this._currentState = InputControl.UP;\r\n\r\n    /**\r\n     * Timer used to indicate if the cursor is shown\r\n     *\r\n     * @type Number\r\n     * @default 0\r\n     * @private\r\n     */\r\n    this._cursorTimer = 0;\r\n\r\n    /**\r\n     * Indicates if the cursor position has changed\r\n     *\r\n     * @type bool\r\n     * @default true\r\n     * @private\r\n     */\r\n    this._cursorNeedsUpdate = true;\r\n\r\n    /**\r\n     * Interval for the cursor (in milliseconds)\r\n     *\r\n     * @type Number\r\n     * @default 500\r\n     */\r\n    this.blinkInterval = 500;\r\n\r\n    /**\r\n     * Caret/selection sprite\r\n     *\r\n     * @type PIXI.Text\r\n     * @default new PIXI.Text('|', this.cursorStyle)\r\n     * @private\r\n     */\r\n    this.cursor = new PIXI.Text('|', this.cursorStyle);\r\n    if (this.pixiText) {\r\n        this.cursor.y = this.pixiText.y;\r\n    }\r\n    this.addChild(this.cursor);\r\n\r\n    /**\r\n     * Text selection background\r\n     *\r\n     * @type PIXI.Graphics\r\n     */\r\n    this.selectionBg = new PIXI.Graphics();\r\n    this.addChildAt(this.selectionBg, 0);\r\n\r\n    // TODO: remove events on destroy\r\n    // setup events\r\n    this.on('touchstart', this.onDown, this);\r\n    this.on('mousedown', this.onDown, this);\r\n\r\n    // this.on('keydown', this.onKeyDown, this);\r\n    // this.on('keyup', this.onKeyUp, this);\r\n}\r\n\r\nInputControl.prototype = Object.create( Skinable.prototype );\r\nInputControl.prototype.constructor = InputControl;\r\nmodule.exports = InputControl;\r\n\r\n/**\r\n * Up state: mouse button is released or finger is removed from the screen\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nInputControl.UP = 'up';\r\n\r\n/**\r\n * Down state: mouse button is pressed or finger touches the screen\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nInputControl.DOWN = 'down';\r\n\r\n/**\r\n * Hover state: mouse pointer hovers over the button\r\n * (ignored on mobile)\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nInputControl.HOVER = 'hover';\r\n\r\n/**\r\n * Hover state: mouse pointer hovers over the button\r\n * (ignored on mobile)\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nInputControl.OUT = 'out';\r\n\r\n/**\r\n * Names of possible states for an input control\r\n *\r\n * @static\r\n * @final\r\n * @type String[]\r\n * @private\r\n */\r\nInputControl.stateNames = [\r\n    InputControl.DOWN, InputControl.HOVER, InputControl.UP\r\n];\r\n\r\n/**\r\n * Currently selected input control (used for tab index)\r\n *\r\n * @static\r\n * @type GOWN.InputControl\r\n */\r\nInputControl.currentInput = null;\r\n\r\n/**\r\n * Input changed callback\r\n *\r\n * @protected\r\n */\r\nInputControl.prototype.onInputChanged = function () {\r\n    if (!this.hasFocus) {\r\n        return;\r\n    }\r\n\r\n    var text = InputWrapper.getText();\r\n\r\n    //overrides the current text with the user input from the InputWrapper\r\n    if(text !== this.text) {\r\n        this.text = text;\r\n    }\r\n\r\n    var sel = InputWrapper.getSelection();\r\n    if (this.updateSelection(sel[0], sel[1])) {\r\n        this.cursorPos = sel[0];\r\n    }\r\n    this.setCursorPos();\r\n};\r\n\r\n/**\r\n * Move the cursor left\r\n */\r\nInputControl.prototype.moveCursorLeft = function() {\r\n    this.cursorPos = Math.max(this.cursorPos-1, 0);\r\n    this._cursorNeedsUpdate = true;\r\n};\r\n\r\n/**\r\n * Move the cursor right\r\n */\r\nInputControl.prototype.moveCursorRight = function() {\r\n    this.cursorPos = Math.min(this.cursorPos+1, this.text.length);\r\n    this._cursorNeedsUpdate = true;\r\n};\r\n\r\n/**\r\n * Insert a char at the current cursor position\r\n *\r\n * @param char The char that gets inserted {String}\r\n */\r\nInputControl.prototype.insertChar = function(char) {\r\n    if (this.maxChars > 0 && this.pixiText.text >= this.maxChars) {\r\n        this.pixiText.text = this.pixiText.text.substring(0, this.maxChars);\r\n        return;\r\n    }\r\n    this.text = [this.value.slice(0, this.cursorPos), char, this.value.slice(this.cursorPos)].join('');\r\n    this.moveCursorRight();\r\n    this.emit('change', this);\r\n};\r\n\r\n/**\r\n * Delete the selected text\r\n */\r\nInputControl.prototype.deleteSelection = function() {\r\n    var start = this.selection[0];\r\n    var end = this.selection[1];\r\n    if (start < end) {\r\n        this.cursorPos = start;\r\n        return this.deleteText(start, end);\r\n    } else if (start > end) {\r\n        this.cursorPos = end;\r\n        return this.deleteText(end, start);\r\n    }\r\n    throw new Error('can not delete text! (start & end are the same)');\r\n};\r\n\r\n/**\r\n * Delete text from a start position to an end position\r\n *\r\n * @param fromPos start position {Number}\r\n * @param toPos end position {Number}\r\n * @returns {String}\r\n */\r\nInputControl.prototype.deleteText = function(fromPos, toPos) {\r\n    this.text = [this.text.slice(0, fromPos), this.text.slice(toPos)].join('');\r\n    InputWrapper.setText(this.value);\r\n    // InputWrapper.setCursorPos(this.cursorPos);\r\n    this.emit('change', this);\r\n    return this.text;\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nInputControl.prototype.skinableSetTheme = Skinable.prototype.setTheme;\r\n\r\n/**\r\n * Change the theme\r\n *\r\n * @param theme the new theme {GOWN.Theme}\r\n */\r\nInputControl.prototype.setTheme = function(theme) {\r\n    if (theme === this.theme || !theme) {\r\n        return;\r\n    }\r\n    this.skinableSetTheme(theme);\r\n    // copy text so we can force wordwrap\r\n    this.style = theme.textStyle;\r\n};\r\n\r\n/**\r\n * Set the input control text.\r\n *\r\n * @param text The text to set {String}\r\n */\r\nInputControl.prototype.setText = function(text) {\r\n    this._displayText = text || '';\r\n    if (!this.pixiText) {\r\n        this.pixiText = new PIXI.Text(text, this.textStyle);\r\n        this.pixiText.position = this.textOffset;\r\n        this.addChild(this.pixiText);\r\n    } else {\r\n        this.pixiText.text = text;\r\n    }\r\n};\r\n\r\n/**\r\n * Set the selected text\r\n *\r\n * @param start Start position in the text {Number}\r\n * @param end End position in the text {Number}\r\n * @returns {boolean}\r\n */\r\nInputControl.prototype.updateSelection = function (start, end) {\r\n    if (this.selection[0] !== start || this.selection[1] !== end) {\r\n        this.selection[0] = start;\r\n        this.selection[1] = end;\r\n        this._selectionNeedsUpdate = true;\r\n        InputWrapper.setSelection(this.selection[0], this.selection[1]);\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\n/**\r\n * Get the width of a text\r\n *\r\n * @param text The text to get the width from {String}\r\n * @returns {Number}\r\n */\r\nInputControl.prototype.textWidth = function(text) {\r\n    // TODO: support BitmapText for PIXI v3+\r\n    var ctx = this.pixiText.context;\r\n    return ctx.measureText(text || '').width;\r\n};\r\n\r\n/**\r\n * Focus on this input and set it as current\r\n */\r\nInputControl.prototype.focus = function () {\r\n    // is already current input\r\n    if (GOWN.InputControl.currentInput === this) {\r\n        return;\r\n    }\r\n\r\n    // drop focus\r\n    if (GOWN.InputControl.currentInput) {\r\n        GOWN.InputControl.currentInput.blur();\r\n    }\r\n\r\n    // set focus\r\n    GOWN.InputControl.currentInput = this;\r\n    this.hasFocus = true;\r\n\r\n    // check custom focus event\r\n    this.onfocus();\r\n\r\n    this.emit('focusIn', this);\r\n\r\n    InputWrapper.focus();\r\n\r\n    /*\r\n     //TODO: disable/ is read only\r\n     if(this.readonly) {\r\n        return;\r\n     }\r\n     */\r\n};\r\n\r\n/**\r\n * Blurs the input when the mouse is released outside\r\n *\r\n * @protected\r\n */\r\nInputControl.prototype.onMouseUpOutside = function() {\r\n    if (this.hasFocus && !this._mouseDown) {\r\n        this.blur();\r\n    }\r\n};\r\n\r\n/**\r\n * Callback to execute code on focus\r\n *\r\n * @protected\r\n */\r\nInputControl.prototype.onfocus = function () {\r\n};\r\n\r\n/**\r\n * Blur the text input (remove focus)\r\n */\r\nInputControl.prototype.blur = function() {\r\n    if (GOWN.InputControl.currentInput === this) {\r\n        GOWN.InputControl.currentInput = null;\r\n        this.hasFocus = false;\r\n\r\n        // blur hidden input\r\n        InputWrapper.blur();\r\n\r\n        this.onblur();\r\n    }\r\n};\r\n\r\n/**\r\n * Set the cursor position on the text\r\n */\r\nInputControl.prototype.setCursorPos = function () {\r\n    this.textToPixelPos(this.cursorPos, this.cursor.position);\r\n    this.cursor.position.x += this.pixiText.x;\r\n    this.cursor.position.y += this.pixiText.y;\r\n};\r\n\r\n/**\r\n * Height of the line in pixel\r\n * (assume that every character of pixi text has the same line height)\r\n *\r\n * @returns {Number}\r\n */\r\nInputControl.prototype.lineHeight = function() {\r\n    var style = this.pixiText._style;\r\n    var lineHeight = style.lineHeight || style.fontSize + style.strokeThickness;\r\n    return lineHeight;\r\n};\r\n\r\n/**\r\n * Draw the cursor\r\n *\r\n * @private\r\n */\r\nInputControl.prototype.drawCursor = function () {\r\n    // TODO: use Tween instead!\r\n    if (this.hasFocus || this._mouseDown) {\r\n        var time = Date.now();\r\n\r\n        // blink interval for cursor\r\n        if ((time - this._cursorTimer) >= this.blinkInterval) {\r\n            this._cursorTimer = time;\r\n            this.cursor.visible = !this.cursor.visible;\r\n        }\r\n\r\n        // update cursor position\r\n        if (this.cursor.visible && this._cursorNeedsUpdate) {\r\n            this.setCursorPos();\r\n            this._cursorNeedsUpdate = false;\r\n        }\r\n    } else {\r\n        this.cursor.visible = false;\r\n    }\r\n};\r\n\r\n/**\r\n * onMove callback\r\n *\r\n * @protected\r\n */\r\nInputControl.prototype.onMove = function (e) {\r\n    if (this.autoPreventInteraction) {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    var mouse = e.data.getLocalPosition(this.pixiText);\r\n    if (!this.hasFocus || !this._mouseDown) { // || !this.containsPoint(mouse)) {\r\n        return false;\r\n    }\r\n\r\n    var curPos = this.pixelToTextPos(mouse),\r\n        start = this.selectionStart,\r\n        end = curPos;\r\n\r\n    if (this.updateSelection(start, end)) {\r\n        this.cursorPos = curPos;\r\n        this._cursorNeedsUpdate = true;\r\n    }\r\n    return true;\r\n};\r\n\r\n/**\r\n * onDown callback\r\n *\r\n * @protected\r\n */\r\nInputControl.prototype.onDown = function (e) {\r\n    if (this.autoPreventInteraction) {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    var mouse = e.data.getLocalPosition(this.pixiText);\r\n    var originalEvent = e.data.originalEvent;\r\n    if (originalEvent.which === 2 || originalEvent.which === 3) {\r\n        originalEvent.preventDefault();\r\n        return false;\r\n    }\r\n\r\n    // focus input\r\n    this.focus();\r\n\r\n    this._mouseDown = true;\r\n\r\n    // start the selection drag if inside the input\r\n    this.selectionStart = this.pixelToTextPos(mouse);\r\n    this.updateSelection(this.selectionStart, this.selectionStart);\r\n    this.cursorPos = this.selectionStart;\r\n    this._cursorNeedsUpdate = true;\r\n\r\n    this.on('touchend', this.onUp, this);\r\n    this.on('mouseupoutside', this.onUp, this);\r\n    this.on('mouseup', this.onUp, this);\r\n\r\n    this.on('mousemove', this.onMove, this);\r\n    this.on('touchmove', this.onMove, this);\r\n\r\n    // update the hidden input\r\n    InputWrapper.setMaxLength(this.maxChars);\r\n    InputWrapper.setText(this.value);\r\n    InputWrapper.setCursorPos(this.cursorPos);\r\n\r\n    return true;\r\n};\r\n\r\n/**\r\n * onUp callback\r\n *\r\n * @protected\r\n */\r\nInputControl.prototype.onUp = function (e) {\r\n    if (this.autoPreventInteraction) {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    var originalEvent = e.data.originalEvent;\r\n    if (originalEvent.which === 2 || originalEvent.which === 3) {\r\n        originalEvent.preventDefault();\r\n        return false;\r\n    }\r\n\r\n    this._mouseDown = false;\r\n\r\n    this.off('touchend', this.onUp, this);\r\n    this.off('mouseupoutside', this.onUp, this);\r\n    this.off('mouseup', this.onUp, this);\r\n\r\n    this.off('mousemove', this.onMove, this);\r\n    this.off('touchmove', this.onMove, this);\r\n\r\n    this.focus();\r\n\r\n    // update the hidden input cursor position and selection\r\n    InputWrapper.setCursorPos(this.cursorPos);\r\n    InputWrapper.setSelection(this.selectionStart, this.cursorPos);\r\n\r\n    this.selectionStart = -1;\r\n\r\n    return true;\r\n};\r\n\r\n/**\r\n * From position in the text to pixel position\r\n * (for cursor/selection positioning)\r\n *\r\n * @param textPos Current character position in the text {Number}\r\n * @param [position] point that will be set with the pixel position and returned {PIXI.Point}\r\n * @returns {PIXI.Point} Pixel position\r\n */\r\nInputControl.prototype.textToPixelPos = function(textPos, position) {\r\n    var lines = this.getLines();\r\n    var x = 0;\r\n    for (var y = 0; y < lines.length; y++) {\r\n        var lineLength = lines[y].length;\r\n        if (lineLength < textPos) {\r\n            textPos -= lineLength + 1;\r\n        } else {\r\n            var text = lines[y];\r\n            x = this.textWidth(text.substring(0, textPos));\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (!position) {\r\n        position = new PIXI.Point(x, y * this.lineHeight());\r\n    } else {\r\n        position.x = x;\r\n        position.y = y * this.lineHeight();\r\n    }\r\n    return position;\r\n};\r\n\r\n/**\r\n * From pixel position on the text to character position inside the text\r\n * (used when clicked on the text)\r\n *\r\n * @param pixelPos Pixel position of the mouse on the text\r\n * @returns {Number} Position in the text\r\n */\r\nInputControl.prototype.pixelToTextPos = function(pixelPos) {\r\n    var textPos = 0;\r\n    var lines = this.getLines();\r\n    // calculate current line we are in\r\n    var currentLine = Math.min(\r\n        Math.max(\r\n            parseInt(pixelPos.y / this.lineHeight()),\r\n            0),\r\n        lines.length - 1);\r\n    // sum all characters of previous lines\r\n    for (var i = 0; i < currentLine; i++) {\r\n        textPos += lines[i].length + 1;\r\n    }\r\n\r\n    var displayText = lines[currentLine];\r\n    var totalWidth = 0;\r\n    if (pixelPos.x < this.textWidth(displayText)) {\r\n        // loop through each character to identify the position\r\n        for (i = 0; i < displayText.length; i++) {\r\n            totalWidth += this.textWidth(displayText[i]);\r\n            if (totalWidth >= pixelPos.x) {\r\n                textPos += i;\r\n                break;\r\n            }\r\n        }\r\n    } else {\r\n        textPos += displayText.length;\r\n    }\r\n    return textPos;\r\n};\r\n\r\n/**\r\n * Callback that will be executed once the text input is blurred\r\n *\r\n * @protected\r\n */\r\nInputControl.prototype.onblur = function() {\r\n    this.updateSelection(0, 0);\r\n    this.emit('focusOut', this);\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\n// performance increase to avoid using call.. (10x faster)\r\nInputControl.prototype.redrawSkinable = Skinable.prototype.redraw;\r\n\r\n/**\r\n * Update before draw call (draw cursor and selection)\r\n *\r\n * @protected\r\n */\r\nInputControl.prototype.redraw = function () {\r\n    if (this.drawCursor) {\r\n        this.drawCursor();\r\n    }\r\n    if (this._selectionNeedsUpdate) {\r\n        this.updateSelectionBg();\r\n    }\r\n    this.redrawSkinable();\r\n};\r\n\r\n/**\r\n * Set the text that is shown inside the input field.\r\n * Calls onTextChange callback if text changes.\r\n *\r\n * @name GOWN.InputControl#text\r\n * @type String\r\n * @default ''\r\n */\r\nObject.defineProperty(InputControl.prototype, 'text', {\r\n    get: function () {\r\n        if (this.pixiText) {\r\n            return this.pixiText.text;\r\n        }\r\n        return this._origText;\r\n    },\r\n    set: function (text) {\r\n        text += ''; // add '' to assure text is parsed as string\r\n\r\n        if (this.maxChars > 0 && text.length > this.maxChars) {\r\n            //reset hidden input to previous state\r\n            InputWrapper.setText(this._origText);\r\n            InputWrapper.setSelection(this.selection[0], this.selection[1]);\r\n            return;\r\n        }\r\n\r\n        if (this._origText === text) {\r\n            // return if text has not changed\r\n            return;\r\n        }\r\n        this._origText = text;\r\n        this.setText(text);\r\n\r\n        // reposition cursor\r\n        this._cursorNeedsUpdate = true;\r\n    }\r\n});\r\n\r\n/**\r\n * The maximum number of characters that may be entered. If 0,\r\n * any number of characters may be entered.\r\n * (same as maxLength for DOM inputs)\r\n *\r\n * @name GOWN.InputControl#maxChars\r\n * @type String\r\n * @default 0\r\n */\r\nObject.defineProperty(InputControl.prototype, 'maxChars', {\r\n    get: function () {\r\n        return this._maxChars;\r\n    },\r\n    set: function (value) {\r\n        if (this._maxChars === value) {\r\n            return;\r\n        }\r\n        if (this.pixiText.text > value) {\r\n            this.pixiText.text = this.pixiText.text.substring(0, value);\r\n            if (this.cursorPos > value) {\r\n                this.cursorPos = value;\r\n                this._cursorNeedsUpdate = true;\r\n            }\r\n            this.updateSelection(\r\n                Math.max(this.selection[0], value),\r\n                Math.max(this.selection[1], value)\r\n            );\r\n        }\r\n        this._maxChars = value;\r\n        InputWrapper.setMaxLength(value);\r\n\r\n    }\r\n});\r\n\r\nObject.defineProperty(InputControl.prototype, 'value', {\r\n    get: function() {\r\n        return this._origText;\r\n    }\r\n});\r\n\r\n/**\r\n * Determine if the input has the focus\r\n *\r\n * @name GOWN.InputControl#hasFocus\r\n * @type bool\r\n * @default false\r\n */\r\nObject.defineProperty(InputControl.prototype, 'hasFocus', {\r\n    get: function() {\r\n        return this._hasFocus;\r\n    },\r\n    set: function(focus) {\r\n        this._hasFocus = focus;\r\n    }\r\n});\r\n\r\n/**\r\n * Set the text style (size, font etc.) for text and cursor\r\n *\r\n * @name GOWN.InputControl#style\r\n * @type PIXI.TextStyle\r\n */\r\nObject.defineProperty(InputControl.prototype, 'style', {\r\n    get: function() {\r\n        return this.textStyle;\r\n    },\r\n    set: function(style) {\r\n        this.cursorStyle = style;\r\n        if (this.cursor) {\r\n            this.cursor.style = style;\r\n        }\r\n        this.textStyle = style;\r\n        if (this.pixiText) {\r\n            this.pixiText.style = style;\r\n            this._cursorNeedsUpdate = true;\r\n        }\r\n        this._cursorNeedsUpdate = true;\r\n    }\r\n});\r\n\r\n/**\r\n * The current state\r\n * TODO: move to skinable?\r\n *\r\n * @name GOWN.InputControl#currentState\r\n * @type String\r\n * @default InputControl.UP\r\n */\r\nObject.defineProperty(InputControl.prototype, 'currentState',{\r\n    get: function() {\r\n        return this._currentState;\r\n    },\r\n    set: function(value) {\r\n        if (this._currentState === value) {\r\n            return;\r\n        }\r\n        if (this._validStates.indexOf(value) < 0) {\r\n            throw new Error('Invalid state: ' + value + '.');\r\n        }\r\n        this._currentState = value;\r\n        // invalidate state so the next draw call will redraw the control\r\n        this.invalidState = true;\r\n    }\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/InputControl.js\n// module id = 5\n// module chunks = 0","var Skinable = require('../core/Skinable'),\r\n    ScrollThumb = require('./ScrollThumb'),\r\n    SliderData = require('../utils/SliderData');\r\n\r\n/**\r\n * A scrollabe control provides a thumb that can be be moved along a fixed track.\r\n * This is the common ground for ScrollBar and Slider\r\n *\r\n * @class Scrollable\r\n * @extends GOWN.Skinable\r\n * @memberof GOWN\r\n * @constructor\r\n * @param [theme] theme for the radio button {GOWN.Theme}\r\n */\r\n// TODO: remove setting value (value manipulation is for Slider only)\r\nfunction Scrollable(theme) {\r\n    /**\r\n     * The scrollable mode\r\n     *\r\n     * @type String\r\n     * @default Scrollable.DESKTOP_MODE\r\n     */\r\n    this.mode = this.mode || Scrollable.DESKTOP_MODE;\r\n\r\n    Skinable.call(this, theme);\r\n\r\n    /**\r\n     * The scrollable direction\r\n     *\r\n     * @type String\r\n     * @default Scrollable.HORIZONTAL\r\n     */\r\n    this.direction = this.direction || Scrollable.HORIZONTAL;\r\n\r\n    /**\r\n     * Invalidate track so that it will be redrawn next time\r\n     *\r\n     * @private\r\n     * @type bool\r\n     * @default true\r\n     */\r\n    this.invalidTrack = true;\r\n\r\n    /**\r\n     * Inverse the progress bar\r\n     *\r\n     * @private\r\n     * @type bool\r\n     * @default false\r\n     */\r\n    this._inverse = false;\r\n\r\n    /**\r\n     * Point where the mouse hit the scrollable\r\n     *\r\n     * @private\r\n     * @type Number[]\r\n     * @default null\r\n     */\r\n    this._start = null;\r\n\r\n    /**\r\n     * The minimum\r\n     *\r\n     * @private\r\n     * @type Number\r\n     * @default 0\r\n     */\r\n    this._minimum = this._minimum || 0;\r\n\r\n    /**\r\n     * The maximum\r\n     *\r\n     * @private\r\n     * @type Number\r\n     * @default 100\r\n     */\r\n    this._maximum = this._maximum || 100;\r\n\r\n    /**\r\n     * Step size (not implemented yet)\r\n     *\r\n     * @private\r\n     * @type Number\r\n     * @default 1\r\n     */\r\n    this.step = this.step || 1; //TODO: implement me!\r\n\r\n    /**\r\n     * Pagination jump (not implemented yet)\r\n     *\r\n     * @private\r\n     * @type Number\r\n     * @default 10\r\n     */\r\n    this.page = this.page || 10; //TODO: implement me!\r\n\r\n    /**\r\n     * Value\r\n     *\r\n     * @private\r\n     * @type Number\r\n     * @default 0\r\n     */\r\n    this._value = this.minimum;\r\n\r\n    /**\r\n     * Number of pixels you scroll at a time (if the event delta is 1 / -1)\r\n     *\r\n     * @type Number\r\n     * @default 10\r\n     */\r\n    this.scrolldelta = 10;\r\n\r\n    this.on('touchstart', this.handleDown, this);\r\n    this.on('mousedown', this.handleDown, this);\r\n\r\n    this.on('touchend', this.handleUp, this);\r\n    this.on('touchendoutside', this.handleUp, this);\r\n    this.on('mouseupoutside', this.handleUp, this);\r\n    this.on('mouseup', this.handleUp, this);\r\n\r\n    /**\r\n     * Invalidate thumb factory so that it will be redrawn next time\r\n     *\r\n     * @private\r\n     * @type bool\r\n     * @default true\r\n     */\r\n    this.thumbFactoryInvalid = true;\r\n}\r\n\r\nScrollable.prototype = Object.create( Skinable.prototype );\r\nScrollable.prototype.constructor = Scrollable;\r\nmodule.exports = Scrollable;\r\n\r\n/**\r\n * In desktop mode mouse wheel support is added (default)\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nScrollable.DESKTOP_MODE = 'desktop';\r\n\r\n/**\r\n * In mobile mode mouse wheel support is disabled\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nScrollable.MOBILE_MODE = 'mobile';\r\n\r\n/**\r\n * Show horizontal scrollbar/slider\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nScrollable.HORIZONTAL = 'horizontal';\r\n\r\n/**\r\n * Show vertical scrollbar/slider\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nScrollable.VERTICAL = 'vertical';\r\n\r\n/**\r\n * Create the thumb\r\n *\r\n * @private\r\n */\r\nScrollable.prototype.createThumb = function() {\r\n    this._thumbFactory = this._thumbFactory || this.defaultThumbFactory;\r\n    this.thumb = this._thumbFactory();\r\n    this.addChild(this.thumb);\r\n    this.positionThumb(this.value);\r\n};\r\n\r\n/**\r\n * A function that is expected to return a new GOWN.ScrollThumb\r\n *\r\n * @returns {ScrollThumb}\r\n * @private\r\n */\r\nScrollable.prototype.defaultThumbFactory = function() {\r\n    return new ScrollThumb(this, this.theme);\r\n};\r\n\r\n/**\r\n * Scroll to a specific position (not implemented yet)\r\n */\r\nScrollable.prototype.scrollToPosition = function() {\r\n};\r\n\r\n/**\r\n * Handle mouse down/touch start.\r\n * Move scroll thumb.\r\n *\r\n * @param mouseData mouse data provided by PIXI\r\n * @protected\r\n */\r\nScrollable.prototype.handleDown = function(mouseData) {\r\n    var local = mouseData.data.getLocalPosition(this);\r\n    var center = {\r\n        x: local.x - this.thumb.width / 2,\r\n        y: local.y - this.thumb.height / 2\r\n    };\r\n    if (mouseData.target === this &&\r\n        this.moveThumb(center.x, center.y)) {\r\n        this._start = [local.x, local.y];\r\n        this.thumbMoved(center.x, center.y);\r\n    }\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nScrollable.prototype.decrement = function() {\r\n  this.value -= this._step;\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nScrollable.prototype.increment = function() {\r\n  this.value += this._step;\r\n};\r\n\r\n/**\r\n * Handle mouse up/touch end\r\n *\r\n * @protected\r\n */\r\nScrollable.prototype.handleUp = function() {\r\n    this._start = null;\r\n};\r\n\r\n/**\r\n * Handle mouse move. Moves the thumb.\r\n *\r\n * @param mouseData mouse data provided by PIXI\r\n * @protected\r\n */\r\nScrollable.prototype.handleMove = function(mouseData) {\r\n    if (this._start) {\r\n        var local = mouseData.data.getLocalPosition(this);\r\n        var x = this.thumb.x + local.x - this._start[0];\r\n        var y = this.thumb.y + local.y - this._start[1];\r\n        if (this.moveThumb(x, y)) {\r\n            // do not override localX/localY in start\r\n            // if we do not move the thumb\r\n            this.thumbMoved(x, y);\r\n            this._start[0] = local.x;\r\n            this._start[1] = local.y;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Handle mouse wheel. Moves thumb on track.\r\n *\r\n * @param event mouse wheel event from browser\r\n * @protected\r\n */\r\nScrollable.prototype.handleWheel = function (event) {\r\n    var x = this.thumb.x - event.delta * this.scrolldelta;\r\n    var y = this.thumb.y - event.delta * this.scrolldelta;\r\n    if (this.moveThumb(x, y)) {\r\n        this.thumbMoved(x, y);\r\n    }\r\n};\r\n\r\n/**\r\n * Thumb has new x/y position\r\n *\r\n * @param x x-position that has been scrolled to (ignored when vertical) {Number}\r\n * @param y y-position that has been scrolled to (ignored when horizontal) {Number}\r\n */\r\nScrollable.prototype.thumbMoved = function(x, y) {\r\n    var pos = this.direction === Scrollable.HORIZONTAL ? x : y;\r\n    this.value = this.pixelToValue(pos);\r\n};\r\n\r\n/**\r\n * Show the progress skin from the start/end of the scroll track to the current\r\n * position of the thumb.\r\n *\r\n * @private\r\n */\r\nScrollable.prototype._updateProgressSkin = function() {\r\n    if (!this.progressSkin) {\r\n        return;\r\n    }\r\n    if(this.direction === Scrollable.HORIZONTAL) {\r\n        var progressPosX = this.thumb.x + this.thumb.width / 2;\r\n        if (this.inverse) {\r\n            this.progressSkin.x = progressPosX;\r\n            this.progressSkin.width = this.width - progressPosX;\r\n            this.progressSkin.height = this.skin.height;\r\n        } else {\r\n            this.progressSkin.x = 0;\r\n            this.progressSkin.width = progressPosX;\r\n            this.progressSkin.height = this.skin.height;\r\n        }\r\n    } else {\r\n        var progressPosY = this.thumb.y + this.thumb.height / 2;\r\n        if (this.inverse) {\r\n            this.progressSkin.y = progressPosY;\r\n            this.progressSkin.height = this.height - progressPosY;\r\n            this.progressSkin.width = this.skin.width;\r\n        } else {\r\n            this.progressSkin.y = 0;\r\n            this.progressSkin.height =progressPosY;\r\n            this.progressSkin.width = this.skin.width;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Returns the max. width in pixel\r\n * (normally this.width - thumb width)\r\n *\r\n * @returns {Number}\r\n */\r\nScrollable.prototype.maxWidth = function() {\r\n    return this.width - this.thumb.width;\r\n};\r\n\r\n/**\r\n * Returns the max. height in pixel\r\n * (normally this.height - thumb height)\r\n *\r\n * @returns {Number}\r\n */\r\nScrollable.prototype.maxHeight = function() {\r\n    return this.height - this.thumb.height;\r\n};\r\n\r\n/**\r\n * Move the thumb on the scroll bar within its bounds\r\n *\r\n * @param x New x position of the thumb {Number}\r\n * @param y New y position of the thumb {Number}\r\n * @returns {boolean} Returns true if the position of the thumb has been\r\n * moved\r\n */\r\nScrollable.prototype.moveThumb = function(x, y) {\r\n    if (this.thumb.move(x, y)) {\r\n        this._updateProgressSkin();\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\n/**\r\n * Show scroll track\r\n *\r\n * @param skin The track skin {PIXI.DisplayObject}\r\n * @private\r\n */\r\nScrollable.prototype.showTrack = function(skin) {\r\n    if (this.skin !== skin) {\r\n        if(this.skin) {\r\n            this.removeChild(this.skin);\r\n        }\r\n\r\n        this.addChildAt(skin, 0);\r\n        this.skin = skin;\r\n        if (this.progressSkin) {\r\n            this._updateProgressSkin();\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Show progress on track (from the start/end of the track to the\r\n * current position of the thumb)\r\n *\r\n * @param skin The progress skin {PIXI.DisplayObject}\r\n * @private\r\n */\r\nScrollable.prototype.showProgress = function(skin) {\r\n    if (this.progressSkin !== skin) {\r\n        if(this.progressSkin) {\r\n            this.removeChild(this.progressSkin);\r\n        }\r\n        skin.width = skin.height = 0;\r\n        this.addChildAt(skin, 0);\r\n        this.progressSkin = skin;\r\n        if (this.skin) {\r\n            this._updateProgressSkin();\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Update before draw call. Redraw track and progressbar and create thumb.\r\n *\r\n * @protected\r\n */\r\nScrollable.prototype.redraw = function() {\r\n    if (this.thumbFactoryInvalid) {\r\n        this.createThumb();\r\n        this.thumbFactoryInvalid = false;\r\n    }\r\n    if (this.invalidTrack) {\r\n        this.fromSkin(this.direction+'_progress', this.showProgress);\r\n        this.fromSkin(this.direction+'_track', this.showTrack);\r\n        if (this.skin) {\r\n            if (this.direction === Scrollable.HORIZONTAL) {\r\n                this.skin.width = this.width;\r\n            } else {\r\n                this.skin.height = this.height;\r\n            }\r\n            this.invalidTrack = false;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Calculate value of slider based on the current pixel position of the thumb\r\n *\r\n * @param position current pixel position of the thumb {Number}\r\n * @returns {Number} Value between minimum and maximum\r\n */\r\nScrollable.prototype.pixelToValue = function(position) {\r\n    var max = 0;\r\n    if (this.direction === Scrollable.HORIZONTAL) {\r\n        max = this.maxWidth();\r\n    } else {\r\n        max = this.maxHeight();\r\n    }\r\n    if (this._inverse) {\r\n        position = max - position;\r\n    }\r\n    return position / max * (this.maximum - this.minimum) + this.minimum;\r\n};\r\n\r\n/**\r\n * Calculate current pixel position of thumb based on given value\r\n *\r\n * @param value The value of the thumb position {Number}\r\n * @returns {Number} Position of the scroll thumb in pixel\r\n */\r\nScrollable.prototype.valueToPixel = function(value) {\r\n    var max = 0;\r\n    if (this.direction === Scrollable.HORIZONTAL) {\r\n        max = this.maxWidth();\r\n    } else {\r\n        max = this.maxHeight();\r\n    }\r\n    var position = (value - this.minimum) / (this.maximum - this.minimum) * max;\r\n    if (this._inverse) {\r\n        position = max - position;\r\n    }\r\n    return position;\r\n};\r\n\r\n/**\r\n * Position the thumb to a given value\r\n *\r\n * @param value The value to which the thumb gets moved {Number}\r\n */\r\nScrollable.prototype.positionThumb = function(value) {\r\n    if (this.thumb) {\r\n        var pos = this.valueToPixel(value);\r\n        if (this.direction === Scrollable.HORIZONTAL) {\r\n            this.moveThumb(pos, 0);\r\n        } else {\r\n            this.moveThumb(0, pos);\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * The width of the Scrollable, setting this will redraw the track and thumb.\r\n *\r\n * @name GOWN.Scrollable#width\r\n * @type Number\r\n */\r\nObject.defineProperty(Scrollable.prototype, 'width', {\r\n    get: function() {\r\n        return this._width;\r\n    },\r\n    set: function(width) {\r\n        this._width = width;\r\n        this.invalidTrack = true;\r\n        if (this.thumb) {\r\n            this.thumb.invalidTrack = true;\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Inverse the progress bar\r\n *\r\n * @name GOWN.Scrollable#inverse\r\n * @type Boolean\r\n */\r\nObject.defineProperty(Scrollable.prototype, 'inverse', {\r\n    get: function() {\r\n        return this._inverse;\r\n    },\r\n    set: function(inverse) {\r\n        if (inverse !== this._inverse) {\r\n            this._inverse = inverse;\r\n\r\n            if (this.direction === Scrollable.HORIZONTAL) {\r\n                this.moveThumb(this.width - this.thumb.x, 0);\r\n            } else {\r\n                this.moveThumb(0, this.height - this.thumb.y);\r\n            }\r\n\r\n            this.invalidTrack = true;\r\n            if (this.thumb) {\r\n                this.thumb.invalidTrack = true;\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * The height of the Scrollable, setting this will redraw the track and thumb.\r\n *\r\n * @name GOWN.Scrollable#height\r\n * @type Number\r\n */\r\nObject.defineProperty(Scrollable.prototype, 'height', {\r\n    get: function() {\r\n        return this._height;\r\n    },\r\n    set: function(height) {\r\n        this._height = height;\r\n        this.invalidTrack = true;\r\n        if (this.thumb) {\r\n            this.thumb.invalidTrack = true;\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Set value (between minimum and maximum)\r\n *\r\n * @name GOWN.Scrollable#value\r\n * @type Number\r\n * @default 0\r\n */\r\nObject.defineProperty(Scrollable.prototype, 'value', {\r\n    get: function() {\r\n        return this._value;\r\n    },\r\n    set: function(value) {\r\n        if (isNaN(value)) {\r\n            return;\r\n        }\r\n        value = Math.min(value, this.maximum);\r\n        value = Math.max(value, this.minimum);\r\n        if (this._value === value) {\r\n            return;\r\n        }\r\n\r\n        // inform system that value has been changed\r\n        var sliderData = new SliderData();\r\n        sliderData.value = value;\r\n        sliderData.target = this;\r\n        if (this.change) {\r\n            this.change(sliderData);\r\n        }\r\n        this.emit('change', sliderData, this);\r\n\r\n        // move thumb\r\n        this.positionThumb(value);\r\n\r\n        this._value = value;\r\n    }\r\n});\r\n\r\n/**\r\n * Set minimum and update value if necessary\r\n *\r\n * @name GOWN.Scrollable#minimum\r\n * @type Number\r\n * @default 0\r\n */\r\nObject.defineProperty(Scrollable.prototype, 'minimum', {\r\n    get: function() {\r\n        return this._minimum;\r\n    },\r\n    set: function(minimum) {\r\n        if(!isNaN(minimum) && this.minimum !== minimum && minimum < this.maximum) {\r\n            this._minimum = minimum;\r\n        }\r\n        if (this._value < this.minimum) {\r\n            this.value = this._value;\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Set maximum and update value if necessary\r\n *\r\n * @name GOWN.Scrollable#maximum\r\n * @type Number\r\n * @default 100\r\n */\r\nObject.defineProperty(Scrollable.prototype, 'maximum', {\r\n    get: function() {\r\n        return this._maximum;\r\n    },\r\n    set: function(maximum) {\r\n        if(!isNaN(maximum) && this.maximum !== maximum && maximum > this.minimum) {\r\n            this._maximum = maximum;\r\n        }\r\n        if (this._value > this.maximum) {\r\n            this.value = maximum;\r\n        }\r\n    }\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/Scrollable.js\n// module id = 6\n// module chunks = 0","var Control = require('./Control');\r\n\r\n/**\r\n * Control with a managed skin\r\n * (e.g. a button that has different skins for up/hover/down states)\r\n *\r\n * @class Skinable\r\n * @extends GOWN.Control\r\n * @memberof GOWN\r\n * @constructor\r\n * @param [theme=GOWN.theme] theme for the skinable {GOWN.Theme}\r\n */\r\nfunction Skinable(theme) {\r\n    Control.call(this);\r\n\r\n    /**\r\n     * The skin cache\r\n     *\r\n     * @private\r\n     * @type Object\r\n     * @default {}\r\n     */\r\n    this.skinCache = {};\r\n\r\n    this.setTheme(theme || GOWN.theme);\r\n\r\n    if (this.theme === undefined) {\r\n        throw new Error('you need to define a theme first');\r\n    }\r\n\r\n    /**\r\n     * Invalidate state so the control will be redrawn next time\r\n     *\r\n     * @private\r\n     * @type bool\r\n     * @default true\r\n     */\r\n    this.invalidState = true; // draw for the first time\r\n\r\n    /**\r\n     * Overwrite skin values before next draw call.\r\n     *\r\n     * @private\r\n     * @type bool\r\n     * @default true\r\n     */\r\n    this.invalidSkinData = true;\r\n\r\n    /**\r\n     * Will destroy the skin cache when the skinable gets destroyed\r\n     *\r\n     * @type bool\r\n     * @default true\r\n     */\r\n    this.allowDestroyCache = true;\r\n\r\n    /**\r\n     * The fallback skin if the other skin does not exist (e.g. if a mobile theme\r\n     * that does not provide a \"hover\" state is used on a desktop system)\r\n     * (normally the default \"up\"-state skin)\r\n     *\r\n     * @type String\r\n     * @default 'up'\r\n     * @private\r\n     */\r\n    this._skinFallback = 'up';\r\n}\r\n\r\nSkinable.prototype = Object.create( Control.prototype );\r\nSkinable.prototype.constructor = Skinable;\r\nmodule.exports = Skinable;\r\n\r\n/**\r\n * @private\r\n */\r\nSkinable.prototype.controlSetTheme = Control.prototype.setTheme;\r\n\r\n/**\r\n * Change the theme\r\n *\r\n * @param theme the new theme {GOWN.Theme}\r\n */\r\nSkinable.prototype.setTheme = function(theme) {\r\n    if (theme === this.theme || !theme) {\r\n        return;\r\n    }\r\n\r\n    this.controlSetTheme(theme);\r\n    this.preloadSkins();\r\n    // force states to redraw\r\n    this.invalidState = true;\r\n};\r\n\r\n/**\r\n * Overwrite data from theme for this specific component.\r\n * (usable if you want to change e.g. background color based on selected items)\r\n *\r\n * @param data updated skin data\r\n */\r\nSkinable.prototype.updateTheme = function(data) {\r\n    this.skinData = data;\r\n    this.invalidSkinData = true;\r\n};\r\n\r\n/**\r\n * Remove old skin and add new one\r\n *\r\n * @param skin {DisplayObject}\r\n */\r\nSkinable.prototype.changeSkin = function(skin) {\r\n    if (this._currentSkin !== skin) {\r\n        this._lastSkin = this._currentSkin;\r\n        this.addChildAt(skin, 0);\r\n        skin.alpha = 1.0;\r\n        this._currentSkin = skin;\r\n\r\n    }\r\n    this.invalidState = false;\r\n};\r\n\r\n/**\r\n * Initiate all skins first\r\n */\r\nSkinable.prototype.preloadSkins = function() {\r\n};\r\n\r\n/**\r\n * Get image from skin (will execute a callback with the loaded skin\r\n * when it is loaded or call it directly when it already is loaded)\r\n *\r\n * @param name name of the state {String}\r\n * @param callback callback that is executed if the skin is loaded {function}\r\n */\r\nSkinable.prototype.fromSkin = function(name, callback) {\r\n    var skin;\r\n    if (this.skinCache[name]) {\r\n        skin = this.skinCache[name];\r\n    } else {\r\n        skin = this.theme.getSkin(this.skinName, name);\r\n        this.skinCache[name] = skin;\r\n    }\r\n    if (skin) {\r\n        callback.call(this, skin);\r\n    } else if (this.skinFallback && this.skinFallback !== name) {\r\n        skin = this.fromSkin(this.skinFallback, callback);\r\n    }\r\n    return skin;\r\n};\r\n\r\n/**\r\n * Empty skin cache and load skins again\r\n *\r\n * @private\r\n */\r\nSkinable.prototype.reloadSkin = function() {\r\n    for (var name in this.skinCache) {\r\n        var skin = this.skinCache[name];\r\n        if (skin && skin.destroy && this.allowDestroyCache) {\r\n            skin.destroy();\r\n        }\r\n    }\r\n    for (name in this.skinCache) {\r\n        delete this.skinCache[name];\r\n    }\r\n    this.skinCache = {};\r\n    if (this.preloadSkins) {\r\n        this.preloadSkins();\r\n    }\r\n    this.invalidState = true;\r\n};\r\n\r\n/**\r\n * Change the skin name.\r\n * You normally set the skin name as constant in your control, but if you\r\n * want you can set another skin name to change skins for single components\r\n * at runtime.\r\n *\r\n * @name GOWN.Skinable#skinName\r\n * @type String\r\n */\r\nObject.defineProperty(Skinable.prototype, 'skinName', {\r\n    get: function() {\r\n        return this._skinName;\r\n    },\r\n    set: function(value) {\r\n        if ( this._skinName === value ) {\r\n            return;\r\n        }\r\n        this._skinName = value;\r\n        this.reloadSkin();\r\n        this.invalidState = true;\r\n    }\r\n});\r\n\r\n/**\r\n * The fallback skin if the other skin does not exist (e.g. if a mobile theme\r\n * that does not provide a \"hover\" state is used on a desktop system)\r\n * (normally the default \"up\"-state skin)\r\n *\r\n * @name GOWN.Skinable#skinFallback\r\n * @type String\r\n * @default 'up'\r\n */\r\nObject.defineProperty(Skinable.prototype, 'skinFallback', {\r\n    get: function() {\r\n        return this._skinFallback;\r\n    },\r\n    set: function(value) {\r\n        this._skinFallback = value;\r\n    }\r\n});\r\n\r\n/**\r\n * @private\r\n */\r\nSkinable.prototype.containerDestroy = PIXI.Container.prototype.destroy;\r\n\r\n/**\r\n * Destroy the Skinable and empty the skin cache\r\n */\r\nSkinable.prototype.destroy = function() {\r\n    for (var name in this.skinCache) {\r\n        var skin = this.skinCache[name];\r\n        if (skin && skin.destroy && this.allowDestroyCache) {\r\n            skin.destroy();\r\n        }\r\n    }\r\n    this._currentSkin = null;\r\n    this.containerDestroy();\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/core/Skinable.js\n// module id = 7\n// module chunks = 0","/**\r\n * Rounds a number to a certain level of precision. Useful for limiting the number of\r\n * decimal places on a fractional number.\r\n *\r\n * @see Math#round\r\n *\r\n * @function GOWN.utils.roundToPrecision\r\n * @param number The input number to round {Number}\r\n * @param precision The number of decimal digits to keep {Number}\r\n * @return {Number} The rounded number, or the original input if no rounding is needed\r\n */\r\nmodule.exports = function(number, precision) {\r\n    precision = precision || 0;\r\n    var decimalPlaces = Math.pow(10, precision);\r\n\treturn Math.round(decimalPlaces * number) / decimalPlaces;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/roundToPrecision.js\n// module id = 8\n// module chunks = 0","var Control = require('../core/Control'),\r\n    Tween = require('../utils/Tween'),\r\n    Scrollable = require('./Scrollable'),\r\n    ScrollBar = require('./ScrollBar');\r\n// LayoutAlignment = require('../../external/pixi-layout/src/layout/LayoutAlignment');\r\n\r\n/**\r\n * Allows horizontal and vertical scrolling of a view port.\r\n * Not meant to be used as a standalone container or component.\r\n * Generally meant to be the super class of another component that needs to\r\n * support scrolling.\r\n * To put components in a generic scrollable container (with optional layout),\r\n * see ScrollContainer. To scroll long passages of text, see ScrollText.\r\n *\r\n * @class Scroller\r\n * @extends GOWN.Control\r\n * @memberof GOWN\r\n * @constructor\r\n */\r\nfunction Scroller(theme) {\r\n    Control.call(this);\r\n    this.setTheme(theme);\r\n    this.interactive = true;\r\n\r\n    /**\r\n     * use mask to clip content\r\n     */\r\n    this._clipContent = true;\r\n\r\n    /**\r\n     * offsets for the mask of the viewport\r\n     * (see this._viewport.mask)\r\n     */\r\n    this._viewPortOffset = {left: 0, right: 0, top: 0, bottom: 0};\r\n\r\n    /**\r\n     * scroll policy for vertical and horizontal ScrollBar\r\n     * (translates to x/y position of the viewport and scroll positions)\r\n     */\r\n    this._verticalScrollPolicy = Scroller.SCROLL_POLICY_AUTO;\r\n    this._horizontalScrollPolicy = Scroller.SCROLL_POLICY_AUTO;\r\n\r\n    /**\r\n     * the default interaction mode is drag-and-drop OR use the scrollbars\r\n     */\r\n    this._interactionMode = Scroller.INTERACTION_TOUCH_AND_SCROLL_BARS;\r\n\r\n    /**\r\n     * start touch/mouse position\r\n     * (changed on touchstart/mousedown)\r\n     */\r\n    this._startTouch = new PIXI.Point(0, 0);\r\n\r\n    /**\r\n     * calculated horizontal and vertical scroll positions\r\n     */\r\n    this._scrollPosition = new PIXI.Point(0, 0);\r\n\r\n    /**\r\n     * scroll positions at the start of an interaction\r\n     * (changed on touchstart/mousedown)\r\n     */\r\n    this._startScrollPosition = new PIXI.Point(0, 0);\r\n\r\n    // mouse/ouch has to be moved at least this many pixel to be a valid drag.\r\n    this.minimumDragDistance = 3;\r\n\r\n    /**\r\n     * add events\r\n     */\r\n    this.refreshInteractionModeEvents();\r\n\r\n    /**\r\n     * scrollInvalid will force viewport to set its x/y position\r\n     * according to horizontal/vertical Scroll Position next redraw\r\n     */\r\n    this.scrollInvalid = false;\r\n\r\n    this.scrollBarInvalid = false;\r\n\r\n    this.mask = undefined;\r\n    this.enabled = true;\r\n    this.horizontalScrollBarStyleName = Scroller.DEFAULT_CHILD_STYLE_NAME_HORIZONTAL_SCROLL_BAR;\r\n    this.verticalScrollBarStyleName = Scroller.DEFAULT_CHILD_STYLE_NAME_VERTICAL_SCROLL_BAR;\r\n    this._hasHorizontalScrollBar = false;\r\n    this._hasVerticalScrollBar = false;\r\n    this._touchPointID = -1;\r\n    this._isDraggingHorizontally = false;\r\n    this._isDraggingVertically = false;\r\n    this._measureViewPort = true;\r\n    this._snapToPages = false;\r\n    this._horizontalScrollBarFactory = this._verticalScrollBarFactory = this.defaultScrollBarFactory;\r\n    this._horizontalScrollPosition = 0;\r\n    this._minHorizontalScrollPosition = 0;\r\n    this._maxHorizontalScrollPosition = 0;\r\n    this._horizontalPageIndex = 0;\r\n    this._minHorizontalPageIndex = 0;\r\n    this.actualVerticalScrollStep = 1;\r\n    this.explicitVerticalScrollStep = NaN;\r\n    this._verticalScrollPosition = 0;\r\n    this._minVerticalScrollPosition = 0;\r\n    this._maxVerticalScrollPosition = 0;\r\n    this._verticalPageIndex = 0;\r\n    this._minVerticalPageIndex = 0;\r\n    this.actualPageWidth = 0;\r\n    this.explicitPageWidth = NaN;\r\n    this.actualPageHeight = 0;\r\n    this.explicitPageHeight = NaN;\r\n    this._paddingTop = 0;\r\n    this._elasticSnapDuration = 0.5;\r\n    this._isScrolling = false;\r\n    this._isScrollingStopped = false;\r\n    this.pendingHorizontalScrollPosition = NaN;\r\n    this.pendingVerticalScrollPosition = NaN;\r\n    this.hasPendingHorizontalPageIndex = false;\r\n    this.hasPendingVerticalPageIndex = false;\r\n    this._pageThrowDuration = 0.5;\r\n}\r\n\r\nScroller.prototype = Object.create(Control.prototype);\r\nScroller.prototype.constructor = Scroller;\r\nmodule.exports = Scroller;\r\n\r\n/**\r\n * The scroller may scroll if the view port is larger than the\r\n * scroller's bounds. Only than the scroll bar will be visible.\r\n */\r\nScroller.SCROLL_POLICY_AUTO = 'auto';\r\n\r\n/**\r\n * The scroller will always scroll, the scroll bar will always be visible.\r\n */\r\nScroller.SCROLL_POLICY_ON = 'on';\r\n\r\n/**\r\n * The scroller does not scroll at all, the scroll bar will never be visible.\r\n */\r\nScroller.SCROLL_POLICY_OFF = 'off';\r\n\r\n/**\r\n * The user may touch anywhere on the scroller and drag to scroll. The\r\n * scroll bars will be visual indicator of position, but they will not\r\n * be interactive.\r\n */\r\nScroller.INTERACTION_TOUCH = 'touch';\r\n\r\n/**\r\n * Allow touch and use the Scrollbars\r\n */\r\nScroller.INTERACTION_TOUCH_AND_SCROLL_BARS = 'touchAndScrollBars';\r\n\r\n/**\r\n * The user may only interact with the scroll bars to scroll.\r\n */\r\nScroller.INTERACTION_MOUSE = Scroller.INTERACTION_SCROLL_BARS = 'scrollBars';\r\n\r\nScroller.HELPER_POINT = new PIXI.Point(0, 0);\r\nScroller.INVALIDATION_FLAG_SCROLL_BAR_RENDERER = 'scrollBarRenderer';\r\nScroller.INVALIDATION_FLAG_PENDING_SCROLL = 'pendingScroll';\r\nScroller.INVALIDATION_FLAG_PENDING_REVEAL_SCROLL_BARS = 'pendingRevealScrollBars';\r\nScroller.SCROLL_BAR_DISPLAY_MODE_FLOAT = 'float';\r\nScroller.SCROLL_BAR_DISPLAY_MODE_FIXED = 'fixed';\r\nScroller.SCROLL_BAR_DISPLAY_MODE_FIXED_FLOAT = 'fixedFloat';\r\nScroller.SCROLL_BAR_DISPLAY_MODE_NONE = 'none';\r\nScroller.VERTICAL_SCROLL_BAR_POSITION_RIGHT = 'right';\r\nScroller.VERTICAL_SCROLL_BAR_POSITION_LEFT = 'left';\r\nScroller.INTERACTION_MODE_TOUCH = 'touch';\r\nScroller.INTERACTION_MODE_MOUSE = 'mouse';\r\nScroller.INTERACTION_MODE_TOUCH_AND_SCROLL_BARS = 'touchAndScrollBars';\r\nScroller.MOUSE_WHEEL_SCROLL_DIRECTION_VERTICAL = 'vertical';\r\nScroller.MOUSE_WHEEL_SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\r\nScroller.INVALIDATION_FLAG_CLIPPING = 'clipping';\r\nScroller.MINIMUM_VELOCITY = 0.02;\r\nScroller.CURRENT_VELOCITY_WEIGHT = 2.33;\r\nScroller.VELOCITY_WEIGHTS = [1, 1.33, 1.66, 2];\r\nScroller.MAXIMUM_SAVED_VELOCITY_COUNT = 4;\r\nScroller.DECELERATION_RATE_NORMAL = 0.998;\r\nScroller.DECELERATION_RATE_FAST = 0.99;\r\n// Scroller.DEFAULT_CHILD_STYLE_NAME_HORIZONTAL_SCROLL_BAR = 'scroller-horizontal-scroll-bar';\r\n// Scroller.DEFAULT_CHILD_STYLE_NAME_VERTICAL_SCROLL_BAR = 'scroller-vertical-scroll-bar';\r\nScroller.FUZZY_PAGE_SIZE_PADDING = 0.000001;\r\nScroller.PAGE_INDEX_EPSILON = 0.01;\r\n\r\n/**\r\n * change horizontal scroll position.\r\n * (will update x position of viewport next redraw)\r\n */\r\nObject.defineProperty(Scroller.prototype, 'horizontalScrollPosition', {\r\n    get: function () {\r\n        return this._scrollPosition.x;\r\n    },\r\n    set: function (value) {\r\n        if (this._scrollPosition.x === value) {\r\n            return;\r\n        }\r\n        this._scrollPosition.x = value;\r\n        this.scrollInvalid = true;\r\n    }\r\n});\r\n\r\n/**\r\n * change vertical scroll position.\r\n * (will update y position of viewport next redraw)\r\n */\r\nObject.defineProperty(Scroller.prototype, 'verticalScrollPosition', {\r\n    get: function () {\r\n        return this._scrollPosition.y;\r\n    },\r\n    set: function (value) {\r\n        if (this._scrollPosition.y === value) {\r\n            return;\r\n        }\r\n        this._scrollPosition.y = value;\r\n        this.scrollInvalid = true;\r\n    }\r\n});\r\n\r\n/**\r\n * us a mask to clip content\r\n */\r\nObject.defineProperty(Scroller.prototype, 'interactionMode', {\r\n    get: function () {\r\n        return this._interactionMode;\r\n    },\r\n    set: function (value) {\r\n        if (this._interactionMode === value) {\r\n            return;\r\n        }\r\n        this._interactionMode = value;\r\n        this.refreshInteractionModeEvents();\r\n    }\r\n});\r\n\r\n/**\r\n * us a mask to clip the content.\r\n */\r\nObject.defineProperty(Scroller.prototype, 'clipContent', {\r\n    get: function () {\r\n        return this._clipContent;\r\n    },\r\n    set: function (value) {\r\n        if (this._clipContent === value) {\r\n            return;\r\n        }\r\n        this._clipContent = value;\r\n        this.clippingInvalid = true;\r\n    }\r\n});\r\n\r\n/**\r\n * set the viewport. This is the content you'd like to scroll.\r\n */\r\nObject.defineProperty(Scroller.prototype, 'viewPort', {\r\n    get: function () {\r\n        return this._viewPort;\r\n    },\r\n    set: function (value) {\r\n        if (this._viewPort === value) {\r\n            return;\r\n        }\r\n        this._viewPort = value;\r\n        if (this._viewPort) {\r\n            this.addChildAt(this._viewPort, 0);\r\n        }\r\n        // position according to horizontal/vertical ScrollPosition\r\n        this.scrollInvalid = true;\r\n        this.clippingInvalid = true;\r\n        this.sizeInvalid = true;\r\n    }\r\n});\r\n\r\n/**\r\n * change scrollbar factory\r\n */\r\nObject.defineProperty(Scroller.prototype, 'horizontalScrollBarFactory', {\r\n    get: function () {\r\n        return this._horizontalScrollBarFactory;\r\n    },\r\n    set: function (value) {\r\n        if (this._horizontalScrollBarFactory === value) {\r\n            return;\r\n        }\r\n        this._horizontalScrollBarFactory = value;\r\n        this.scrollBarInvalid = true;\r\n    }\r\n});\r\n\r\n/**\r\n * change scrollbar factory\r\n */\r\nObject.defineProperty(Scroller.prototype, 'verticalScrollBarFactory', {\r\n    get: function () {\r\n        return this._verticalScrollBarFactory;\r\n    },\r\n    set: function (value) {\r\n        if (this._verticalScrollBarFactory === value) {\r\n            return;\r\n        }\r\n        this._verticalScrollBarFactory = value;\r\n        this.scrollBarInvalid = true;\r\n    }\r\n});\r\n\r\nObject.defineProperty(Scroller.prototype, 'measureViewPort', {\r\n    get: function () {\r\n        return this._measureViewPort;\r\n    },\r\n    set: function (value) {\r\n        if (this._measureViewPort === value) {\r\n            return;\r\n        }\r\n        this._measureViewPort = value;\r\n        this.sizeInvalid = true;\r\n    }\r\n});\r\n\r\nObject.defineProperty(Scroller.prototype, 'snapToPages', {\r\n    get: function () {\r\n        return this._snapToPages;\r\n    },\r\n    set: function (value) {\r\n        if (this._snapToPages === value) {\r\n            return;\r\n        }\r\n        this._snapToPages = value;\r\n        this.sizeInvalid = true;\r\n    }\r\n});\r\n\r\nObject.defineProperty(Scroller.prototype, 'horizontalScrollStep', {\r\n    get: function () {\r\n        return this._horizontalScrollStep;\r\n    },\r\n    set: function (value) {\r\n        if (this._horizontalScrollStep === value) {\r\n            return;\r\n        }\r\n        this._horizontalScrollStep = value;\r\n        this.scrollInvalid = true;\r\n    }\r\n});\r\n\r\nObject.defineProperty(Scroller.prototype, 'horizontalPageIndex', {\r\n    get: function () {\r\n        if (this.hasPendingHorizontalPageIndex) {\r\n            return this.pendingHorizontalPageIndex;\r\n        }\r\n        return this._horizontalPageIndex;\r\n    }\r\n});\r\n\r\nObject.defineProperty(Scroller.prototype, 'horizontalScrollPolicy', {\r\n    get: function () {\r\n        return this._horizontalScrollPolicy;\r\n    },\r\n    set: function (value) {\r\n        if (this._horizontalScrollPolicy === value) {\r\n            return;\r\n        }\r\n        this._horizontalScrollPolicy = value;\r\n        this.scrollInvalid = true;\r\n        this.scrollBarInvalid = true;\r\n    }\r\n});\r\n\r\nObject.defineProperty(Scroller.prototype, 'verticalScrollStep', {\r\n    get: function () {\r\n        return this.actualVerticalScrollStep;\r\n    },\r\n    set: function (value) {\r\n        if (this.explicitVerticalScrollStep === value) {\r\n            return;\r\n        }\r\n        this.explicitVerticalScrollStep = value;\r\n        this.scrollInvalid = true;\r\n    }\r\n});\r\n\r\nObject.defineProperty(Scroller.prototype, 'verticalPageIndex', {\r\n    get: function () {\r\n        if (this.hasPendingVerticalPageIndex) {\r\n            return this.pendingVerticalPageIndex;\r\n        }\r\n        return this._verticalPageIndex;\r\n    }\r\n});\r\n\r\nObject.defineProperty(Scroller.prototype, 'verticalScrollPolicy', {\r\n    get: function () {\r\n        if (this.hasPendingVerticalPageIndex) {\r\n            return this.pendingVerticalPageIndex;\r\n        }\r\n        return this._verticalPageIndex;\r\n    },\r\n    set: function (value) {\r\n        if (this._verticalScrollPolicy === value) {\r\n            return;\r\n        }\r\n        this._verticalScrollPolicy = value;\r\n        this.scrollInvalid = true;\r\n        this.scrollBarInvalid = true;\r\n    }\r\n});\r\n\r\nObject.defineProperty(Scroller.prototype, 'pageWidth', {\r\n    get: function () {\r\n        return this.actualPageWidth;\r\n    },\r\n    set: function (value) {\r\n        if (this.explicitPageWidth === value) {\r\n            return;\r\n        }\r\n        var valueIsNaN = isNaN(value);\r\n        if (valueIsNaN && this.explicitPageWidth !== this.explicitPageWidth) {\r\n            return;\r\n        }\r\n        this.explicitPageWidth = value;\r\n        if (valueIsNaN) {\r\n            //we need to calculate this value during validation\r\n            this.actualPageWidth = 0;\r\n        } else {\r\n            this.actualPageWidth = this.explicitPageWidth;\r\n        }\r\n    }\r\n});\r\n\r\nObject.defineProperty(Scroller.prototype, 'pageHeight', {\r\n    get: function () {\r\n        return this.actualPageHeight;\r\n    },\r\n    set: function (value) {\r\n        if (this.explicitPageHeight === value) {\r\n            return;\r\n        }\r\n        var valueIsNaN = isNaN(value);\r\n        if (valueIsNaN && this.explicitPageHeight !== this.explicitPageHeight) {\r\n            return;\r\n        }\r\n        this.explicitPageHeight = value;\r\n        if (valueIsNaN) {\r\n            //we need to calculate this value during validation\r\n            this.actualPageHeight = 0;\r\n        } else {\r\n            this.actualPageHeight = this.explicitPageHeight;\r\n        }\r\n    }\r\n});\r\n\r\nObject.defineProperty(Scroller.prototype, 'padding', {\r\n    get: function () {\r\n        return this._paddingTop;\r\n    },\r\n    set: function (value) {\r\n        this.paddingTop = value;\r\n        this.paddingRight = value;\r\n        this.paddingBottom = value;\r\n        this.paddingLeft = value;\r\n    }\r\n});\r\n\r\nObject.defineProperty(Scroller.prototype, 'pageThrowDuration', {\r\n    get: function () {\r\n        return this._pageThrowDuration;\r\n    },\r\n    set: function (value) {\r\n        this._pageThrowDuration = value;\r\n    }\r\n});\r\n\r\nScroller.prototype.scrollToPageIndex = function (horizontalPageIndex, verticalPageIndex, animationDuration) {\r\n    if (isNaN(animationDuration)) {\r\n        animationDuration = this._pageThrowDuration;\r\n    }\r\n    //cancel any pending scroll to a specific scroll position. we can\r\n    //have only one type of pending scroll at a time.\r\n    this.pendingHorizontalScrollPosition = NaN;\r\n    this.pendingVerticalScrollPosition = NaN;\r\n    this.hasPendingHorizontalPageIndex = this._horizontalPageIndex !== horizontalPageIndex;\r\n    this.hasPendingVerticalPageIndex = this._verticalPageIndex !== verticalPageIndex;\r\n    if (!this.hasPendingHorizontalPageIndex && !this.hasPendingVerticalPageIndex) {\r\n        return;\r\n    }\r\n    this.pendingHorizontalPageIndex = horizontalPageIndex;\r\n    this.pendingVerticalPageIndex = verticalPageIndex;\r\n    this.pendingScrollDuration = animationDuration;\r\n};\r\n\r\nScroller.prototype.refreshInteractionModeEvents = function () {\r\n    if (!this.startEventsAdded &&\r\n        (this._interactionMode === Scroller.INTERACTION_TOUCH ||\r\n        this._interactionMode === Scroller.INTERACTION_TOUCH_AND_SCROLL_BARS)) {\r\n        this.on('touchstart', this.onDown, this);\r\n        this.on('mousedown', this.onDown, this);\r\n        this.startEventsAdded = true;\r\n    } else if (this.startEventsAdded &&\r\n        this._interactionMode === Scroller.INTERACTION_SCROLL_BARS) {\r\n        this.off('touchstart', this.onDown, this);\r\n        this.off('mousedown', this.onDown, this);\r\n\r\n        if (this.touchMoveEventsAdded) {\r\n            this.off('touchend', this.onUp, this);\r\n            this.off('mouseupoutside', this.onUp, this);\r\n            this.off('mouseup', this.onUp, this);\r\n            this.off('touchendoutside', this.onUp, this);\r\n\r\n            // TODO: global move (add events to root element from pixi renderer?)\r\n            this.off('touchmove', this.onMove, this);\r\n            this.off('mousemove', this.onMove, this);\r\n        }\r\n        this.touchMoveEventsAdded = this.startEventsAdded = false;\r\n    }\r\n    // TODO: interactive scrollbars\r\n};\r\n\r\nScroller.prototype.onDown = function (event) {\r\n    this._startTouch = event.data.getLocalPosition(this);\r\n    this._isScrollingStopped = false;\r\n\r\n    if (!this.touchMoveEventsAdded) {\r\n        this.on('touchend', this.onUp, this);\r\n        this.on('mouseupoutside', this.onUp, this);\r\n        this.on('mouseup', this.onUp, this);\r\n        this.on('touchendoutside', this.onUp, this);\r\n\r\n        this.on('touchmove', this.onMove, this);\r\n        this.on('mousemove', this.onMove, this);\r\n        this.touchMoveEventsAdded = true;\r\n    }\r\n\r\n    this._startScrollPosition.x = this._scrollPosition.x;\r\n    this._startScrollPosition.y = this._scrollPosition.y;\r\n};\r\n\r\nScroller.prototype.onUp = function () {\r\n    this._isScrollingStopped = true;\r\n};\r\n\r\nScroller.prototype.onMove = function (event) {\r\n    var pos = event.data.getLocalPosition(this);\r\n    this.checkForDrag(pos);\r\n};\r\n\r\nScroller.prototype.checkForDrag = function (currentTouch) {\r\n    if (this._isScrollingStopped) {\r\n        return;\r\n    }\r\n    var horizontalMoved = Math.abs(currentTouch.x - this._startTouch.x);\r\n    var verticalMoved = Math.abs(currentTouch.y - this._startTouch.y);\r\n\r\n    if ((this._horizontalScrollPolicy === Scroller.SCROLL_POLICY_ON ||\r\n        this._horizontalScrollPolicy === Scroller.SCROLL_POLICY_AUTO) &&\r\n        !this._isDraggingHorizontally && horizontalMoved >= this.minimumDragDistance) {\r\n        if (this.horizontalScrollBar) {\r\n            this.revealHorizontalScrollBar();\r\n        }\r\n        this._startTouch.x = currentTouch.x;\r\n        this._startScrollPosition.x = this._scrollPosition.x;\r\n        this._isDraggingHorizontally = true;\r\n        if (!this._isDraggingVertically) {\r\n            this.startScroll();\r\n        }\r\n\r\n    }\r\n    if ((this._verticalScrollPolicy === Scroller.SCROLL_POLICY_ON ||\r\n        this._verticalScrollPolicy === Scroller.SCROLL_POLICY_AUTO) &&\r\n        !this._isDraggingVertically && verticalMoved >= this.minimumDragDistance) {\r\n        if (this.verticalScrollBar) {\r\n            this.revealVerticalScrollBar();\r\n        }\r\n        this._startTouch.y = currentTouch.y;\r\n        this._startScrollPosition.y = this._scrollPosition.y;\r\n        this._isDraggingVertically = true;\r\n        if (!this._isDraggingHorizontally) {\r\n            this.startScroll();\r\n        }\r\n    }\r\n\r\n    if (this._isDraggingHorizontally && !this._horizontalAutoScrollTween) {\r\n        this.updateHorizontalScrollFromTouchPosition(currentTouch.x);\r\n    }\r\n    if (this._isDraggingVertically && !this._verticalAutoScrollTween) {\r\n        this.updateVerticalScrollFromTouchPosition(currentTouch.y);\r\n    }\r\n};\r\n\r\n// performance increase to avoid using call.. (10x faster)\r\nScroller.prototype.controlRedraw = Control.prototype.redraw;\r\n/**\r\n * update before draw call\r\n *\r\n\r\n */\r\nScroller.prototype.redraw = function () {\r\n    this.scrollBarInvalid = true;\r\n    if (this.scrollBarInvalid) {\r\n        this.createScrollBars();\r\n    }\r\n    if (this.clippingInvalid) {\r\n        this.refreshMask();\r\n    }\r\n\r\n    if (this._viewPort && this._viewPort.updateRenderable) {\r\n        this._viewPort.updateRenderable(\r\n            -this._viewPort.x, -this._viewPort.y,\r\n            this.width, this.height);\r\n    }\r\n    this.controlRedraw();\r\n};\r\n\r\nScroller.prototype.updateHorizontalScrollFromTouchPosition = function (touchX, isScrollBar) {\r\n    var offset;\r\n    if (isScrollBar) {\r\n        offset = this._startTouch.x - touchX;\r\n    } else {\r\n        offset = touchX - this._startTouch.x;\r\n    }\r\n    var position = this._startScrollPosition.x + offset;\r\n    if (this.viewPort.width > this.width) {\r\n        position = Math.min(position, 0);\r\n        if (this.viewPort.width && this.viewPort.x < 0) {\r\n            position = Math.max(position, -(this.viewPort.width - this.width));\r\n        }\r\n        this.viewPort.x = Math.floor(position);\r\n    }\r\n    this.horizontalScrollPosition = position;\r\n};\r\n\r\nScroller.prototype.updateVerticalScrollFromTouchPosition = function (touchY, isScrollBar) {\r\n    var offset;\r\n    if (isScrollBar) {\r\n        offset = this._startTouch.y - touchY;\r\n    } else {\r\n        offset = touchY - this._startTouch.y;\r\n    }\r\n    var position = this._startScrollPosition.y + offset;\r\n    if (this.viewPort.height > this.height) {\r\n        position = Math.min(position, 0);\r\n        if (this.viewPort.height && this.viewPort.y < 0) {\r\n            position = Math.max(position, -(this.viewPort.height - this.height));\r\n        }\r\n        this.viewPort.y = Math.floor(position);\r\n    }\r\n    this.verticalScrollPosition = position;\r\n};\r\n\r\nScroller.prototype.startScroll = function () {\r\n    if (this._isScrolling) {\r\n        return;\r\n    }\r\n    this._isScrolling = true;\r\n};\r\n\r\n// 3333\r\nScroller.prototype.stopScrolling = function () {\r\n    if (this._horizontalAutoScrollTween) {\r\n        this._horizontalAutoScrollTween.remove();\r\n        this._horizontalAutoScrollTween = null;\r\n    }\r\n    if (this._verticalAutoScrollTween) {\r\n        this._verticalAutoScrollTween.remove();\r\n        this._verticalAutoScrollTween = null;\r\n    }\r\n    this._isScrollingStopped = true;\r\n    this.hideHorizontalScrollBar();\r\n    this.hideVerticalScrollBar();\r\n};\r\n\r\nScroller.prototype.scrollToPosition = function (horizontalScrollPosition, verticalScrollPosition, animationDuration) {\r\n    if (isNaN(animationDuration)) {\r\n        if (this._useFixedThrowDuration) {\r\n            animationDuration = this._fixedThrowDuration;\r\n        } else {\r\n            Scroller.HELPER_POINT.setTo(horizontalScrollPosition - this._horizontalScrollPosition, verticalScrollPosition - this._verticalScrollPosition);\r\n            animationDuration = this.calculateDynamicThrowDuration(Scroller.HELPER_POINT.length * this._logDecelerationRate + Scroller.MINIMUM_VELOCITY);\r\n        }\r\n    }\r\n    //cancel any pending scroll to a different page. we can have only\r\n    //one type of pending scroll at a time.\r\n    this.hasPendingHorizontalPageIndex = false;\r\n    this.hasPendingVerticalPageIndex = false;\r\n    if (this.pendingHorizontalScrollPosition === horizontalScrollPosition &&\r\n        this.pendingVerticalScrollPosition === verticalScrollPosition &&\r\n        this.pendingScrollDuration === animationDuration) {\r\n        return;\r\n    }\r\n    this.pendingHorizontalScrollPosition = horizontalScrollPosition;\r\n    this.pendingVerticalScrollPosition = verticalScrollPosition;\r\n    this.pendingScrollDuration = animationDuration;\r\n};\r\n\r\nScroller.prototype.handlePendingScroll = function () {\r\n    if (!isNaN(this.pendingHorizontalScrollPosition) || !isNaN(this.pendingVerticalScrollPosition)) {\r\n        this.throwTo(this.pendingHorizontalScrollPosition, this.pendingVerticalScrollPosition, this.pendingScrollDuration);\r\n        this.pendingHorizontalScrollPosition = NaN;\r\n        this.pendingVerticalScrollPosition = NaN;\r\n    }\r\n    if (this.hasPendingHorizontalPageIndex && this.hasPendingVerticalPageIndex) {\r\n        //both\r\n        this.throwToPage(this.pendingHorizontalPageIndex, this.pendingVerticalPageIndex, this.pendingScrollDuration);\r\n    }\r\n    else if (this.hasPendingHorizontalPageIndex) {\r\n        //horizontal only\r\n        this.throwToPage(this.pendingHorizontalPageIndex, this._verticalPageIndex, this.pendingScrollDuration);\r\n    }\r\n    else if (this.hasPendingVerticalPageIndex) {\r\n        //vertical only\r\n        this.throwToPage(this._horizontalPageIndex, this.pendingVerticalPageIndex, this.pendingScrollDuration);\r\n    }\r\n    this.hasPendingHorizontalPageIndex = false;\r\n    this.hasPendingVerticalPageIndex = false;\r\n};\r\n\r\nScroller.prototype.completeScroll = function () {\r\n    if (!this._isScrolling || this._verticalAutoScrollTween || this._horizontalAutoScrollTween ||\r\n        this._isDraggingHorizontally || this._isDraggingVertically) {\r\n        return;\r\n    }\r\n    this._isScrolling = false;\r\n    this.hideHorizontalScrollBar();\r\n    this.hideVerticalScrollBar();\r\n};\r\n\r\nScroller.prototype.refreshEnabled = function () {\r\n    if (this._viewPort) {\r\n        this._viewPort.enabled = this.enabled;\r\n    }\r\n    if (this.horizontalScrollBar) {\r\n        this.horizontalScrollBar.enabled = this.enabled;\r\n    }\r\n    if (this.verticalScrollBar) {\r\n        this.verticalScrollBar.enabled = this.enabled;\r\n    }\r\n};\r\n\r\nScroller.prototype.refreshScrollValues = function () {\r\n    this.refreshScrollSteps();\r\n\r\n    var oldMaxHSP = this._maxHorizontalScrollPosition;\r\n    var oldMaxVSP = this._maxVerticalScrollPosition;\r\n    this.refreshMinAndMaxScrollPositions();\r\n    var maximumPositionsChanged = this._maxHorizontalScrollPosition !== oldMaxHSP || this._maxVerticalScrollPosition !== oldMaxVSP;\r\n    if (maximumPositionsChanged && this._touchPointID < 0) {\r\n        this.clampScrollPositions();\r\n    }\r\n\r\n    this.refreshPageCount();\r\n    this.refreshPageIndices();\r\n};\r\n\r\nScroller.prototype.refreshPageCount = function () {\r\n    if (this._snapToPages) {\r\n        var horizontalScrollRange = this._maxHorizontalScrollPosition - this._minHorizontalScrollPosition;\r\n        var roundedDownRange;\r\n        if (horizontalScrollRange === Number.POSITIVE_INFINITY) {\r\n            //trying to put positive infinity into an int results in 0\r\n            //so we need a special case to provide a large int value.\r\n            if (this._minHorizontalScrollPosition === Number.NEGATIVE_INFINITY) {\r\n                this._minHorizontalPageIndex = Number.MIN_SAFE_INTEGER;\r\n            } else {\r\n                this._minHorizontalPageIndex = 0;\r\n            }\r\n        } else {\r\n            this._minHorizontalPageIndex = 0;\r\n            //floating point errors could result in the max page index\r\n            //being 1 larger than it should be.\r\n            roundedDownRange =\r\n                Math.floor(horizontalScrollRange / this.actualPageWidth) * this.actualPageWidth;\r\n            if ((horizontalScrollRange - roundedDownRange) < Scroller.FUZZY_PAGE_SIZE_PADDING) {\r\n                horizontalScrollRange = roundedDownRange;\r\n            }\r\n        }\r\n\r\n        var verticalScrollRange = this._maxVerticalScrollPosition - this._minVerticalScrollPosition;\r\n        if (verticalScrollRange === Number.POSITIVE_INFINITY) {\r\n            //trying to put positive infinity into an int results in 0\r\n            //so we need a special case to provide a large int value.\r\n            if (this._minVerticalScrollPosition === Number.NEGATIVE_INFINITY) {\r\n                this._minVerticalPageIndex = Number.MIN_SAFE_INTEGER;\r\n            } else {\r\n                this._minVerticalPageIndex = 0;\r\n            }\r\n        } else {\r\n            this._minVerticalPageIndex = 0;\r\n            //floating point errors could result in the max page index\r\n            //being 1 larger than it should be.\r\n            roundedDownRange =\r\n                Math.floor(verticalScrollRange / this.actualPageHeight) * this.actualPageHeight;\r\n            if ((verticalScrollRange - roundedDownRange) < Scroller.FUZZY_PAGE_SIZE_PADDING) {\r\n                verticalScrollRange = roundedDownRange;\r\n            }\r\n        }\r\n    } else {\r\n        this._minVerticalPageIndex = 0;\r\n    }\r\n};\r\n\r\nScroller.prototype.clampScrollPositions = function () {\r\n    if (!this._horizontalAutoScrollTween) {\r\n        var targetHorizontalScrollPosition = this._horizontalScrollPosition;\r\n        if (targetHorizontalScrollPosition < this._minHorizontalScrollPosition) {\r\n            targetHorizontalScrollPosition = this._minHorizontalScrollPosition;\r\n        }\r\n        else if (targetHorizontalScrollPosition > this._maxHorizontalScrollPosition) {\r\n            targetHorizontalScrollPosition = this._maxHorizontalScrollPosition;\r\n        }\r\n        this.horizontalScrollPosition = targetHorizontalScrollPosition;\r\n    }\r\n};\r\n\r\nScroller.prototype.refreshScrollSteps = function () {\r\n    if (this.explicitHorizontalScrollStep !== this.explicitHorizontalScrollStep) //isNaN\r\n    {\r\n        if (this._viewPort) {\r\n            this.actualHorizontalScrollStep = this._viewPort.horizontalScrollStep;\r\n        }\r\n        else {\r\n            this.actualHorizontalScrollStep = 1;\r\n        }\r\n    }\r\n    else {\r\n        this.actualHorizontalScrollStep = this.explicitHorizontalScrollStep;\r\n    }\r\n    if (this.explicitVerticalScrollStep !== this.explicitVerticalScrollStep) //isNaN\r\n    {\r\n        if (this._viewPort) {\r\n            this.actualVerticalScrollStep = this._viewPort.verticalScrollStep;\r\n        }\r\n        else {\r\n            this.actualVerticalScrollStep = 1;\r\n        }\r\n    }\r\n    else {\r\n        this.actualVerticalScrollStep = this.explicitVerticalScrollStep;\r\n    }\r\n};\r\n\r\nScroller.prototype.refreshMinAndMaxScrollPositions = function () {\r\n    var visibleViewPortWidth = this.actualWidth - (this._viewPortOffset.left + this._viewPortOffset.right);\r\n    var visibleViewPortHeight = this.actualHeight - (this._viewPortOffset.top + this._viewPortOffset.bottom);\r\n    if (this.explicitPageWidth !== this.explicitPageWidth) { //isNaN\r\n        this.actualPageWidth = visibleViewPortWidth;\r\n    }\r\n    if (this.explicitPageHeight !== this.explicitPageHeight) { //isNaN\r\n        this.actualPageHeight = visibleViewPortHeight;\r\n    }\r\n    if (this._viewPort) {\r\n        this._minHorizontalScrollPosition = this._viewPort.content.x;\r\n        if (this._viewPort.width === Number.POSITIVE_INFINITY) {\r\n            //we don't want to risk the possibility of negative infinity\r\n            //being added to positive infinity. the result is NaN.\r\n            this._maxHorizontalScrollPosition = Number.POSITIVE_INFINITY;\r\n        } else {\r\n            this._maxHorizontalScrollPosition = this._minHorizontalScrollPosition + this._viewPort.width - visibleViewPortWidth;\r\n        }\r\n        if (this._maxHorizontalScrollPosition < this._minHorizontalScrollPosition) {\r\n            this._maxHorizontalScrollPosition = this._minHorizontalScrollPosition;\r\n        }\r\n        this._minVerticalScrollPosition = this._viewPort.content.y;\r\n        if (this._viewPort.height === Number.POSITIVE_INFINITY) {\r\n            //we don't want to risk the possibility of negative infinity\r\n            //being added to positive infinity. the result is NaN.\r\n            this._maxVerticalScrollPosition = Number.POSITIVE_INFINITY;\r\n        } else {\r\n            this._maxVerticalScrollPosition = this._minVerticalScrollPosition + this._viewPort.height - visibleViewPortHeight;\r\n        }\r\n        if (this._maxVerticalScrollPosition < this._minVerticalScrollPosition) {\r\n            this._maxVerticalScrollPosition = this._minVerticalScrollPosition;\r\n        }\r\n    } else {\r\n        this._minHorizontalScrollPosition = 0;\r\n        this._minVerticalScrollPosition = 0;\r\n        this._maxHorizontalScrollPosition = 0;\r\n        this._maxVerticalScrollPosition = 0;\r\n    }\r\n};\r\n\r\nScroller.prototype.showOrHideChildren = function () {\r\n    var childCount = this.numRawChildrenInternal;\r\n    if (this._touchBlocker !== null && this._touchBlocker.parent !== null) {\r\n        //keep scroll bars below the touch blocker, if it exists\r\n        childCount--;\r\n    }\r\n    if (this.verticalScrollBar) {\r\n        this.verticalScrollBar.visible = this._hasVerticalScrollBar;\r\n        this.verticalScrollBar.touchable =\r\n            this._hasVerticalScrollBar && this._interactionMode !== Scroller.INTERACTION_TOUCH_AND_SCROLL_BARS;\r\n        // this.setRawChildIndexInternal(DisplayObject(this.verticalScrollBar), childCount - 1);\r\n    }\r\n    if (this.horizontalScrollBar) {\r\n        this.horizontalScrollBar.visible = this._hasHorizontalScrollBar;\r\n        this.horizontalScrollBar.touchable =\r\n            this._hasHorizontalScrollBar && this._interactionMode !== Scroller.INTERACTION_TOUCH_AND_SCROLL_BARS;\r\n        //     if(this.verticalScrollBar) {\r\n        //         this.setRawChildIndexInternal(DisplayObject(this.horizontalScrollBar), childCount - 2);\r\n        //     } else {\r\n        //         this.setRawChildIndexInternal(DisplayObject(this.horizontalScrollBar), childCount - 1);\r\n        //     }\r\n    }\r\n\r\n};\r\n\r\nScroller.prototype.calculateViewPortOffsetsForFixedVerticalScrollBar = function (forceScrollBars, useActualBounds) {\r\n    forceScrollBars = forceScrollBars || false;\r\n    useActualBounds = useActualBounds || false;\r\n    if (this.verticalScrollBar && (this._measureViewPort || useActualBounds)) {\r\n        var scrollerHeight = useActualBounds ? this.actualHeight : this._explicitHeight;\r\n        var totalHeight = this._viewPort.height + this._viewPortOffset.top + this._viewPortOffset.bottom;\r\n        this._hasVerticalScrollBar =\r\n            forceScrollBars || this._verticalScrollPolicy === Scroller.SCROLL_POLICY_ON ||\r\n            ((totalHeight > scrollerHeight || totalHeight > this._explicitMaxHeight) &&\r\n            this._verticalScrollPolicy !== Scroller.SCROLL_POLICY_OFF);\r\n    } else {\r\n        this._hasVerticalScrollBar = false;\r\n    }\r\n};\r\n\r\nScroller.prototype.calculateViewPortOffsets = function (forceScrollBars, useActualBounds) {\r\n    forceScrollBars = forceScrollBars || false;\r\n    useActualBounds = useActualBounds || false;\r\n    //in fixed mode, if we determine that scrolling is required, we\r\n    //remember the offsets for later. if scrolling is not needed, then\r\n    //we will ignore the offsets from here forward\r\n    this._viewPortOffset.top = this._paddingTop;\r\n    this._viewPortOffset.rigth = this._paddingRight;\r\n    this._viewPortOffset.bottom = this._paddingBottom;\r\n    this._viewPortOffset.left = this._paddingLeft;\r\n    //we need to double check the horizontal scroll bar if the scroll\r\n    //bars are fixed because adding a vertical scroll bar may require a\r\n    //horizontal one too.\r\n};\r\n\r\nScroller.prototype.throwToPage = function (targetHorizontalPageIndex, targetVerticalPageIndex, duration) {\r\n    duration = duration || 0.5;\r\n    var targetHorizontalScrollPosition = this._horizontalScrollPosition;\r\n    if (targetHorizontalPageIndex >= this._minHorizontalPageIndex) {\r\n        targetHorizontalScrollPosition = this.actualPageWidth * targetHorizontalPageIndex;\r\n    }\r\n    if (targetHorizontalScrollPosition < this._minHorizontalScrollPosition) {\r\n        targetHorizontalScrollPosition = this._minHorizontalScrollPosition;\r\n    }\r\n    if (targetHorizontalScrollPosition > this._maxHorizontalScrollPosition) {\r\n        targetHorizontalScrollPosition = this._maxHorizontalScrollPosition;\r\n    }\r\n    var targetVerticalScrollPosition = this._verticalScrollPosition;\r\n    if (targetVerticalPageIndex >= this._minVerticalPageIndex) {\r\n        targetVerticalScrollPosition = this.actualPageHeight * targetVerticalPageIndex;\r\n    }\r\n    if (targetVerticalScrollPosition < this._minVerticalScrollPosition) {\r\n        targetVerticalScrollPosition = this._minVerticalScrollPosition;\r\n    }\r\n    if (targetVerticalScrollPosition > this._maxVerticalScrollPosition) {\r\n        targetVerticalScrollPosition = this._maxVerticalScrollPosition;\r\n    }\r\n    if (duration > 0) {\r\n        this.throwTo(targetHorizontalScrollPosition, targetVerticalScrollPosition, duration);\r\n    } else {\r\n        this.horizontalScrollPosition = targetHorizontalScrollPosition;\r\n        this.verticalScrollPosition = targetVerticalScrollPosition;\r\n    }\r\n    if (targetHorizontalPageIndex >= this._minHorizontalPageIndex) {\r\n        this._horizontalPageIndex = targetHorizontalPageIndex;\r\n    }\r\n    if (targetVerticalPageIndex >= this._minVerticalPageIndex) {\r\n        this._verticalPageIndex = targetVerticalPageIndex;\r\n    }\r\n};\r\n\r\nScroller.prototype.horizontalScrollBarHideTweenOnComplete = function () {\r\n    this._horizontalScrollBarHideTween = null;\r\n};\r\n\r\nScroller.prototype.verticalScrollBarHideTweenOnComplete = function () {\r\n    this._verticalScrollBarHideTween = null;\r\n};\r\n\r\nScroller.prototype.scrollerEnterFrameHandler = function () {\r\n    this.saveVelocity();\r\n};\r\n\r\n/**\r\n * update the rectangle that defines the clipping area\r\n */\r\nScroller.prototype.refreshMask = function () {\r\n    if (!this._clipContent) {\r\n        if (this._viewPort) {\r\n            this._viewPort.mask = null;\r\n        }\r\n        return;\r\n    }\r\n    var clipWidth = this.width - this._viewPortOffset.left - this._viewPortOffset.right;\r\n    if (clipWidth < 0 || isNaN(clipWidth)) {\r\n        clipWidth = 0;\r\n    }\r\n    var clipHeight = this.height - this._viewPortOffset.top - this._viewPortOffset.bottom;\r\n    if (clipHeight < 0 || isNaN(clipHeight)) {\r\n        clipHeight = 0;\r\n    }\r\n    if (!this.mask) {\r\n        this.mask = new PIXI.Graphics();\r\n    }\r\n    var global = this.toGlobal(new PIXI.Point(0, 0));\r\n    this.mask.clear()\r\n        .beginFill('#fff', 1)\r\n        .drawRect(\r\n            global.x,\r\n            global.y,\r\n            clipWidth,\r\n            clipHeight)\r\n        .endFill();\r\n    this.clippingInvalid = false;\r\n};\r\n\r\n/**\r\n * Creates and adds the <code>horizontalScrollBar</code> and\r\n * <code>verticalScrollBar</code> sub-components and removes the old\r\n * instances, if they exist.\r\n *\r\n * <p>Meant for internal use, and subclasses may override this function\r\n * with a custom implementation.</p>\r\n *\r\n * @see #horizontalScrollBar\r\n * @see #verticalScrollBar\r\n * @see #horizontalScrollBarFactory\r\n * @see #verticalScrollBarFactory\r\n */\r\nScroller.prototype.createScrollBars = function () {\r\n    if(this.horizontalScrollBar) {\r\n        this.removeChild(this.horizontalScrollBar);\r\n        this.horizontalScrollBar = null;\r\n    }\r\n    if(this.verticalScrollBar) {\r\n        this.removeChild(this.verticalScrollBar);\r\n        this.verticalScrollBar = null;\r\n    }\r\n    this.horizontalScrollBar = this._horizontalScrollBarFactory(Scrollable.HORIZONTAL);\r\n    this.verticalScrollBar = this._verticalScrollBarFactory(Scrollable.VERTICAL);\r\n};\r\n\r\nScroller.prototype.defaultScrollBarFactory = function (direction) {\r\n    // TODO: SimpleScrollBar (like feathers?)\r\n    var sb = new ScrollBar(direction, this.theme);\r\n    if (direction === Scrollable.HORIZONTAL) {\r\n        sb.skinName = this.horizontalScrollBarStyleName;\r\n    } else {\r\n        sb.skinName = this.verticalScrollBarStyleName;\r\n    }\r\n    return sb;\r\n};\r\n\r\nScroller.prototype.revealHorizontalScrollBar = function () {\r\n    if (this.horizontalScrollBar) {\r\n        this.addChild(this.horizontalScrollBar);\r\n    }\r\n};\r\n\r\nScroller.prototype.revealVerticalScrollBar = function () {\r\n    if (this.verticalScrollBar) {\r\n        this.addChild(this.verticalScrollBar);\r\n    }\r\n};\r\n\r\nScroller.prototype.hideHorizontalScrollBar = function () {\r\n    if (this.horizontalScrollBar) {\r\n        this.removeChild(this.horizontalScrollBar);\r\n    }\r\n};\r\n\r\nScroller.prototype.hideVerticalScrollBar = function () {\r\n    if (this.verticalScrollBar) {\r\n        this.removeChild(this.verticalScrollBar);\r\n    }\r\n};\r\n\r\nScroller.prototype.throwHorizontally = function (pixelsPerMS) {\r\n    var absPixelsPerMS = Math.abs(pixelsPerMS);\r\n    if (absPixelsPerMS <= Scroller.MINIMUM_VELOCITY) {\r\n        this.finishScrollingHorizontally();\r\n        return;\r\n    }\r\n\r\n    var duration = this._fixedThrowDuration;\r\n    if (!this._useFixedThrowDuration) {\r\n        duration = this.calculateDynamicThrowDuration(pixelsPerMS);\r\n    }\r\n    this.throwTo(this._horizontalScrollPosition + this.calculateThrowDistance(pixelsPerMS), NaN, duration);\r\n};\r\n\r\nScroller.prototype.throwVertically = function (pixelsPerMS) {\r\n    var absPixelsPerMS = Math.abs(pixelsPerMS);\r\n    if (absPixelsPerMS <= Scroller.MINIMUM_VELOCITY) {\r\n        this.finishScrollingVertically();\r\n        return;\r\n    }\r\n\r\n    var duration = this._fixedThrowDuration;\r\n    if (!this._useFixedThrowDuration) {\r\n        duration = this.calculateDynamicThrowDuration(pixelsPerMS);\r\n    }\r\n    this.throwTo(NaN, this._verticalScrollPosition + this.calculateThrowDistance(pixelsPerMS), duration);\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nScroller.prototype.calculateDynamicThrowDuration = function (pixelsPerMS) {\r\n    return (Math.log(Scroller.MINIMUM_VELOCITY / Math.abs(pixelsPerMS)) / this._logDecelerationRate) / 1000;\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nScroller.prototype.calculateThrowDistance = function (pixelsPerMS) {\r\n    return (pixelsPerMS - Scroller.MINIMUM_VELOCITY) / this._logDecelerationRate;\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nScroller.prototype.finishScrollingHorizontally = function () {\r\n    var targetHorizontalScrollPosition = NaN;\r\n    if (this._horizontalScrollPosition < this._minHorizontalScrollPosition) {\r\n        targetHorizontalScrollPosition = this._minHorizontalScrollPosition;\r\n    } else if (this._horizontalScrollPosition > this._maxHorizontalScrollPosition) {\r\n        targetHorizontalScrollPosition = this._maxHorizontalScrollPosition;\r\n    }\r\n\r\n    this._isDraggingHorizontally = false;\r\n    if (targetHorizontalScrollPosition !== targetHorizontalScrollPosition) { //isNaN\r\n        this.completeScroll();\r\n    } else if (Math.abs(targetHorizontalScrollPosition - this._horizontalScrollPosition) < 1) {\r\n        //this distance is too small to animate. just finish now.\r\n        this.horizontalScrollPosition = targetHorizontalScrollPosition;\r\n        this.completeScroll();\r\n    } else {\r\n        this.throwTo(targetHorizontalScrollPosition, NaN, this._elasticSnapDuration);\r\n    }\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nScroller.prototype.finishScrollingVertically = function () {\r\n    var targetVerticalScrollPosition = NaN;\r\n    if (this._verticalScrollPosition < this._minVerticalScrollPosition) {\r\n        targetVerticalScrollPosition = this._minVerticalScrollPosition;\r\n    } else if (this._verticalScrollPosition > this._maxVerticalScrollPosition) {\r\n        targetVerticalScrollPosition = this._maxVerticalScrollPosition;\r\n    }\r\n\r\n    this._isDraggingVertically = false;\r\n    if (targetVerticalScrollPosition !== targetVerticalScrollPosition) //isNaN\r\n    {\r\n        this.completeScroll();\r\n    }\r\n    else if (Math.abs(targetVerticalScrollPosition - this._verticalScrollPosition) < 1) {\r\n        //this distance is too small to animate. just finish now.\r\n        this.verticalScrollPosition = targetVerticalScrollPosition;\r\n        this.completeScroll();\r\n    }\r\n    else {\r\n        this.throwTo(NaN, targetVerticalScrollPosition, this._elasticSnapDuration);\r\n    }\r\n};\r\n\r\n/**\r\n * manage tween to throw to horizontal or vertical position\r\n * call finishScrolling when tween reaches the end position\r\n *\r\n * @param targetPosition {number} target position in pixel\r\n * @param direction {String} direction ('horizontal' or 'vertical')\r\n * @param duration {number} time needed to reach target position (in ms)\r\n */\r\nScroller.prototype._throwToTween = function (targetPosition, direction, duration) {\r\n    if (!this.tweens) {\r\n        this.tweens = {};\r\n    }\r\n    // remove old tween\r\n    var tween;\r\n    if (this.tweens.hasOwnProperty(direction)) {\r\n        tween = this.tweens[direction];\r\n        tween.remove();\r\n        delete this.tweens[direction];\r\n    }\r\n\r\n    tween = new Tween(this._viewport, duration);\r\n    this.tween[direction] = tween;\r\n    var to = {};\r\n    to[direction + 'ScrollPosition'] = targetPosition;\r\n    this.tween.to(to);\r\n\r\n    return targetPosition;\r\n};\r\n\r\n/**\r\n * throw the scroller to the specified position\r\n * @param targetHorizontalScrollPosition as PIXI.Point\r\n * @param targetVerticalScrollPosition as PIXI.Point\r\n * @param duration\r\n */\r\n//TODO: see https://github.com/BowlerHatLLC/feathers/blob/master/source/feathers/controls/Scroller.as#L4939\r\nScroller.prototype.throwTo = function (targetHorizontalScrollPosition, targetVerticalScrollPosition, duration) {\r\n    duration = duration || 500;\r\n\r\n    var verticalScrollPosition = this._throwToTween(targetHorizontalScrollPosition, 'horizontal');\r\n    var horizontalScrollPosition = this._throwToTween(targetVerticalScrollPosition, 'vertical');\r\n    var changedPosition = false;\r\n    if (verticalScrollPosition !== this.verticalScrollPosition) {\r\n        changedPosition = true;\r\n        this.revealVerticalScrollBar();\r\n        this.startScroll();\r\n        // pass\r\n        if (duration === 0) {\r\n            this.verticalScrollPosition = targetVerticalScrollPosition;\r\n        }\r\n        // else {}\r\n    } else {\r\n        this.finishScrollingVertically();\r\n    }\r\n    if (horizontalScrollPosition !== this.horizontalScrollPosition) {\r\n        changedPosition = true;\r\n        this.revealHorizontalScrollBar();\r\n        this.startScroll();\r\n        // pass\r\n        if (duration === 0) {\r\n            this.horizontalScrollPosition = targetHorizontalScrollPosition;\r\n        }\r\n        // else {}\r\n    } else {\r\n        this.finishScrollingHorizontally();\r\n    }\r\n\r\n\r\n    if (changedPosition && duration === 0) {\r\n        this.completeScroll();\r\n    }\r\n};\r\n\r\nScroller.prototype.direction = function () {\r\n    var scrollAuto =\r\n        this._verticalScrollPolicy === Scroller.SCROLL_POLICY_AUTO &&\r\n        this._horizontalScrollPolicy === Scroller.SCROLL_POLICY_AUTO;\r\n    var scroll = 'vertical';\r\n    var scrollVertical =\r\n        this._verticalScrollPolicy === Scroller.SCROLL_POLICY_AUTO ||\r\n        this._verticalScrollPolicy === Scroller.SCROLL_POLICY_ON;\r\n    var scrollHorizontal =\r\n        this._horizontalScrollPolicy === Scroller.SCROLL_POLICY_AUTO ||\r\n        this._horizontalScrollPolicy === Scroller.SCROLL_POLICY_ON;\r\n\r\n\r\n    // if the scroll direction is set to SCROLL_AUTO we check, if the\r\n    // layout of the content is set to horizontal or the content\r\n    // width is bigger than the current\r\n    if (!scrollVertical || scrollHorizontal ||\r\n        (scrollAuto && (this.layoutHorizontalAlign() || this.upright()) )) {\r\n        scroll = 'horizontal';\r\n    }\r\n    return scroll;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/Scroller.js\n// module id = 9\n// module chunks = 0","/**\r\n * Basic layout stub - see GOWN.LayoutAlignment\r\n *\r\n * @class Layout\r\n * @memberof GOWN.layout\r\n * @constructor\r\n */\r\nfunction Layout() {\r\n    this.gap = 0;\r\n    this.padding = 0;\r\n    this.layoutChildren = true;\r\n}\r\n\r\nmodule.exports = Layout;\r\n\r\n/**\r\n * If the total item height is smaller than the height of the bounds,\r\n * the items will be aligned to the top.\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nLayout.VERTICAL_ALIGN_TOP = 'top';\r\n\r\n/**\r\n * If the total item height is smaller than the height of the bounds,\r\n * the items will be aligned to the middle.\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nLayout.VERTICAL_ALIGN_MIDDLE = 'middle';\r\n\r\n/**\r\n * Alignment justified\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nLayout.ALIGN_JUSTIFY = 'justify';\r\n\r\n/**\r\n * If the total item height is smaller than the height of the bounds,\r\n * the items will be aligned to the bottom.\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nLayout.VERTICAL_ALIGN_BOTTOM = 'bottom';\r\n\r\n/**\r\n * If the total item width is smaller than the width of the bounds, the\r\n * items will be aligned to the left.\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nLayout.HORIZONTAL_ALIGN_LEFT = 'left';\r\n\r\n/**\r\n * If the total item width is smaller than the width of the bounds, the\r\n * items will be aligned to the center.\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nLayout.HORIZONTAL_ALIGN_CENTER = 'center';\r\n\r\n/**\r\n * If the total item width is smaller than the width of the bounds, the\r\n * items will be aligned to the right.\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nLayout.HORIZONTAL_ALIGN_RIGHT = 'right';\r\n\r\n/**\r\n * The space, in pixels, between items.\r\n *\r\n * @name GOWN.layout.Layout#gap\r\n * @type Number\r\n * @default 0\r\n */\r\nObject.defineProperty(Layout.prototype, 'gap', {\r\n    get: function() {\r\n        return this._gap;\r\n    },\r\n    set: function(value) {\r\n        if(this._gap === value) {\r\n            return;\r\n        }\r\n        this._gap = value;\r\n        this._needUpdate = true;\r\n    }\r\n});\r\n\r\n/**\r\n * Indicates if the layout needs to be rearranged.\r\n *\r\n * @name GOWN.layout.Layout#needUpdate\r\n * @readonly\r\n */\r\nObject.defineProperty(Layout.prototype, 'needUpdate', {\r\n    get: function() {\r\n        return this._needUpdate;\r\n    }\r\n});\r\n\r\n/**\r\n * Shortcut to set all paddings (left, right, top, bottom)\r\n *\r\n * @name GOWN.layout.Layout#padding\r\n * @type Number\r\n * @default 0\r\n */\r\nObject.defineProperty(Layout.prototype, 'padding', {\r\n    set: function(value) {\r\n        this._paddingLeft = value;\r\n        this._paddingRight = value;\r\n        this._paddingBottom = value;\r\n        this._paddingTop = value;\r\n        this._needUpdate = true;\r\n    },\r\n    get: function (){\r\n        // just return paddingTop, because we do not save the\r\n        // overall padding value (just like feathers)\r\n        return this._paddingTop;\r\n    }\r\n});\r\n\r\n/**\r\n * The minimum space, in pixels, above the items.\r\n *\r\n * @name GOWN.layout.Layout#paddingTop\r\n * @type Number\r\n * @default 0\r\n */\r\nObject.defineProperty(Layout.prototype, 'paddingTop', {\r\n    get:  function() {\r\n        return this._paddingTop;\r\n    },\r\n    set: function(value) {\r\n        if(this._paddingTop === value) {\r\n            return;\r\n        }\r\n        this._paddingTop = value;\r\n        this._needUpdate = true;\r\n    }\r\n});\r\n\r\n/**\r\n * The minimum space, in pixels, below the items.\r\n *\r\n * @name GOWN.layout.Layout#paddingBottom\r\n * @type Number\r\n * @default 0\r\n */\r\nObject.defineProperty(Layout.prototype, 'paddingBottom', {\r\n    get:  function() {\r\n        return this._paddingBottom;\r\n    },\r\n    set: function(value) {\r\n        if(this._paddingBottom === value) {\r\n            return;\r\n        }\r\n        this._paddingBottom = value;\r\n        this._needUpdate = true;\r\n    }\r\n});\r\n\r\n/**\r\n * The space, in pixels, that appears to the left, before the first\r\n * item.\r\n *\r\n * @name GOWN.layout.Layout#paddingLeft\r\n * @type Number\r\n * @default 0\r\n */\r\nObject.defineProperty(Layout.prototype, 'paddingLeft', {\r\n    get:  function() {\r\n        return this._paddingLeft;\r\n    },\r\n    set: function(value) {\r\n        if(this._paddingLeft === value) {\r\n            return;\r\n        }\r\n        this._paddingLeft = value;\r\n        this._needUpdate = true;\r\n    }\r\n});\r\n\r\n/**\r\n * The space, in pixels, that appears to the right, after the last item.\r\n *\r\n * @name GOWN.layout.Layout#paddingLeft\r\n * @type Number\r\n * @default 0\r\n */\r\nObject.defineProperty(Layout.prototype, 'paddingRight', {\r\n    get:  function() {\r\n        return this._paddingRight;\r\n    },\r\n    set: function(value) {\r\n        if(this._paddingRight === value) {\r\n            return;\r\n        }\r\n        this._paddingRight = value;\r\n        this._needUpdate = true;\r\n    }\r\n});\r\n\r\n/**\r\n * Position (and possibly resize) the supplied items.\r\n *\r\n * @param items items that will be layouted {Array}\r\n * @param viewPortBounds {ViewPortBounds}\r\n */\r\n/* jshint unused: false */\r\nLayout.prototype.layout = function (items, viewPortBounds) {\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/layout/Layout.js\n// module id = 10\n// module chunks = 0","var Layout = require('./Layout');\r\nvar itemDimensions = require('./utils/itemDimensions');\r\n\r\n/**\r\n * Basic layout\r\n *\r\n * @class LayoutAlignment\r\n * @extends GOWN.layout.Layout\r\n * @memberof GOWN.layout\r\n * @constructor\r\n */\r\nfunction LayoutAlignment() {\r\n    Layout.call(this);\r\n}\r\n\r\nLayoutAlignment.prototype = Object.create( Layout.prototype );\r\nLayoutAlignment.prototype.constructor = LayoutAlignment;\r\nmodule.exports = LayoutAlignment;\r\n\r\n/**\r\n * Vertical alignment\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nLayoutAlignment.VERTICAL_ALIGNMENT = 'vertical';\r\n\r\n/**\r\n * Horizontal alignment\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nLayoutAlignment.HORIZONTAL_ALIGNMENT = 'horizontal';\r\n\r\n/**\r\n * Apply percentage width/height to items.\r\n * This will use the explicit width/height and apply it to all items\r\n * according to its percentages.\r\n *\r\n * Percentages have higher priorities than fixed values.\r\n * So if you set a width higher than 0 but also percentWidth,\r\n * the width will be recalculated according to percentWidth.\r\n *\r\n * @param items The items which get new width and height according to the percent {Array}\r\n * @param explicit The space we have for the components {Number}\r\n * @param [alignment=LayoutAlignment.VERTICAL_ALIGNMENT] The alignment mode {String}\r\n */\r\nLayoutAlignment.prototype.applyFixedPercent = function(items, explicit, alignment) {\r\n    var itemCount = items.length;\r\n    var i, item, itemPercent;\r\n    for (i = 0; i < itemCount; i++) {\r\n        item = items[i];\r\n        // note: this is the opposide of what we normally want\r\n        itemPercent = 0;\r\n        if (alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT) {\r\n            itemPercent = item.percentWidth;\r\n        } else {\r\n            itemPercent = item.percentHeight;\r\n        }\r\n        if (itemPercent > 0) {\r\n            if (alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT) {\r\n                item.width = explicit * itemPercent / 100;\r\n            } else {\r\n                item.height = explicit * itemPercent / 100;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Apply percentage width/height to items.\r\n * This will stack items on top/aside of each other\r\n *\r\n * Percentages have higher priorities than fixed values.\r\n * So if you set a width higher than 0 but also percentWidth,\r\n * the width will be recalculated according to percentWidth.\r\n *\r\n * (this function will handle padding and gap, so the explicitWidth is\r\n * for the whole available width)\r\n *\r\n * @param items The items which get new width and height according to the percent {Array}\r\n * @param explicit space we have for the components {Number}\r\n */\r\nLayoutAlignment.prototype.applyPercent = function(items, explicit) {\r\n    var _hor = (this.alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT);\r\n\r\n    var itemCount = items.length;\r\n    var remaining = explicit;\r\n    var totalExplicit = 0;\r\n    var totalPercent = 0;\r\n\r\n    var i, itemPercent, item;\r\n    // sum up width/height required for all items\r\n    for (i = 0; i < itemCount; i++) {\r\n        item = items[i];\r\n        var itemSpace;\r\n\r\n        var dimensions = itemDimensions(item);\r\n\r\n        itemPercent = _hor ? item.percentWidth : item.percentHeight;\r\n        itemSpace = _hor ? dimensions[0] : dimensions[1];\r\n\r\n        if (!isNaN(itemPercent) && itemPercent !== undefined &&\r\n            itemPercent !== null) {\r\n            totalPercent += itemPercent;\r\n        } else if (!isNaN(itemSpace)) {\r\n            // no percentWidth/percentHeight set for this item\r\n            totalExplicit += itemSpace;\r\n        }\r\n    }\r\n\r\n    // add space for all gaps\r\n    totalExplicit += this._firstGap > 0 ? this._firstGap : this._gap;\r\n    totalExplicit += (this._gap * (itemCount - 3));\r\n    totalExplicit += this._lastGap > 0 ? this._lastGap : this._gap;\r\n\r\n    var padding = _hor ?\r\n        this._paddingLeft + this._paddingRight :\r\n        this._paddingTop + this._paddingBottom;\r\n    totalExplicit += padding;\r\n\r\n    // use whole available space - if we do not sum up to 100 we will\r\n    // stretch the items\r\n    if(totalPercent < 100) {\r\n        totalPercent = 100;\r\n    }\r\n\r\n    var percentToPixels = (remaining - totalExplicit) / totalPercent;\r\n    // claculate width/height for each item based on remaining width/height\r\n    this.applyFixedPercent(items, percentToPixels * 100, this.alignment);\r\n};\r\n\r\n/**\r\n * Get the current gap (includes first and last gap)\r\n *\r\n * @param i The current item position {Number}\r\n * @param items The list of items (to determine if we are at the last gap) {Array}\r\n * @private\r\n */\r\nLayoutAlignment.prototype._currentGap = function(i, items) {\r\n    if(!isNaN(this._firstGap) && i === 0)\r\n    {\r\n        return this._firstGap;\r\n    }\r\n    else if(!isNaN(this._lastGap) && i > 0 && i === items.length - 2)\r\n    {\r\n        return this._lastGap;\r\n    }\r\n    return this._gap;\r\n};\r\n\r\n/**\r\n * Calculate the layout for a container (and its children)\r\n *\r\n * @param container The container to calculate the layout for\r\n * @return Number[] The width and height\r\n */\r\nLayoutAlignment.prototype.layoutContainer = function(container) {\r\n    var dimensions = itemDimensions(container);\r\n    return this.layout(container.children, dimensions[0], dimensions[1]);\r\n};\r\n\r\n/**\r\n * Position (and possibly resize) the supplied items.\r\n *\r\n * @param items The items that will be layouted {Array}\r\n * @param maxWidth The maximum width for the items {Number}\r\n * @param maxHeight The maximum height for the items {Number}\r\n * @return Number[] The width and height\r\n */\r\nLayoutAlignment.prototype.layout = function(items, maxWidth, maxHeight) {\r\n    var _hor = (this.alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT);\r\n\r\n    // width/height the current layout takes\r\n    var width = 0;\r\n    var height = 0;\r\n    var paddingStart = _hor ? this._paddingLeft : this._paddingTop;\r\n\r\n    // recalculate width/height for items with percentages\r\n    this.applyPercent(items, _hor ? maxWidth : maxHeight);\r\n    this.applyFixedPercent(items, _hor ? maxHeight : maxWidth,\r\n        _hor ?\r\n            LayoutAlignment.VERTICAL_ALIGNMENT :\r\n            LayoutAlignment.HORIZONTAL_ALIGNMENT);\r\n\r\n    var position = paddingStart;\r\n    var itemSpace, itemWidth, itemHeight;\r\n    var dimensions;\r\n    // calculate item position (x/y coordinates)\r\n    for(var i = 0; i < items.length; i++)\r\n    {\r\n        var item = items[i];\r\n\r\n        dimensions = itemDimensions(item);\r\n        itemWidth = dimensions[0];\r\n        itemHeight = dimensions[1];\r\n\r\n        // move item to position calculated in previous loop\r\n        if (_hor) {\r\n            item.x = Math.floor(position);\r\n            // set height of highest item\r\n            height = Math.max(itemHeight, height);\r\n        } else {\r\n            item.y = Math.floor(position);\r\n            // set width of widest item\r\n            width = Math.max(itemWidth, width);\r\n        }\r\n        itemSpace = _hor ? itemWidth : itemHeight;\r\n        // calculate position for next item\r\n        position += itemSpace + this._currentGap(i, items);\r\n\r\n        // if the item has a layout and children, layout the children\r\n        if (this.layoutChildren && item.children &&\r\n            item.layout && item.layout.layout) {\r\n            item.layout.layout(item.children, itemWidth, itemHeight);\r\n        }\r\n    }\r\n    if (_hor) {\r\n        width = position;\r\n    } else {\r\n        height = position;\r\n    }\r\n    this._needUpdate = false;\r\n\r\n    return [width, height];\r\n};\r\n\r\n/**\r\n * The space between the first and second element\r\n *\r\n * @name GOWN.layout.LayoutAlignment#firstGap\r\n * @type Number\r\n */\r\nObject.defineProperty(LayoutAlignment.prototype, 'firstGap', {\r\n    set: function(value) {\r\n        if (value === this._firstGap) {\r\n            return;\r\n        }\r\n        this._firstGap = value;\r\n        this._needUpdate = true;\r\n    },\r\n    get: function() {\r\n        return this._firstGap;\r\n    }\r\n});\r\n\r\n/**\r\n * The space between the last and second-to-last element\r\n *\r\n * @name GOWN.layout.LayoutAlignment#lastGap\r\n * @type Number\r\n */\r\nObject.defineProperty(LayoutAlignment.prototype, 'lastGap', {\r\n    set: function(value) {\r\n        if (value === this._lastGap) {\r\n            return;\r\n        }\r\n        this._lastGap = value;\r\n        this._needUpdate = true;\r\n    },\r\n    get: function() {\r\n        return this._lastGap;\r\n    }\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/layout/LayoutAlignment.js\n// module id = 11\n// module chunks = 0","var Layout = require('./Layout');\r\nvar itemDimensions = require('./utils/itemDimensions');\r\n\r\n/**\r\n * A layout for tiled rows/columns\r\n *\r\n * @class TiledLayout\r\n * @extends GOWN.layout.Layout\r\n * @memberof GOWN.layout\r\n * @constructor\r\n */\r\nfunction TiledLayout() {\r\n    Layout.call(this);\r\n\r\n    /**\r\n     * Use square tiles\r\n     *\r\n     * @private\r\n     * @type bool\r\n     * @default false\r\n     */\r\n    this._useSquareTiles = false;\r\n\r\n    /**\r\n     * The size of the horizontal gap between tiles\r\n     *\r\n     * @private\r\n     * @type Number\r\n     * @default 0\r\n     */\r\n    this._horizontalGap = 0;\r\n\r\n    /**\r\n     * The size of the vertical gap between tiles\r\n     *\r\n     * @private\r\n     * @type Number\r\n     * @default 0\r\n     */\r\n    this._verticalGap = 0;\r\n\r\n    /**\r\n     * Horizontal alignment of the tiles\r\n     *\r\n     * @private\r\n     * @type String\r\n     * @default TiledLayout.TILE_HORIZONTAL_ALIGN_CENTER\r\n     */\r\n    this._tileHorizontalAlign = TiledLayout.TILE_HORIZONTAL_ALIGN_CENTER;\r\n\r\n    /**\r\n     * Vertical alignment of the tiles\r\n     *\r\n     * @private\r\n     * @type String\r\n     * @default TiledLayout.TILE_VERTICAL_ALIGN_MIDDLE\r\n     */\r\n    this._tileVerticalAlign = TiledLayout.TILE_VERTICAL_ALIGN_MIDDLE;\r\n\r\n    /**\r\n     * Paging mode\r\n     *\r\n     * @private\r\n     * @type String\r\n     * @default TiledLayout.TiledLayout.PAGING_NONE\r\n     */\r\n    this._paging = TiledLayout.PAGING_NONE;\r\n\r\n    /**\r\n     * Orientation mode\r\n     *\r\n     * @private\r\n     * @type String\r\n     * @default TiledLayout.ORIENTATION_ROWS\r\n     */\r\n    this._orientation = TiledLayout.ORIENTATION_ROWS;\r\n\r\n    /**\r\n     * Invalidate the layout so that it will be redrawn next time\r\n     *\r\n     * @private\r\n     * @type bool\r\n     * @default true\r\n     */\r\n    this._needUpdate = true;\r\n}\r\n\r\nTiledLayout.prototype = Object.create( Layout.prototype );\r\nTiledLayout.prototype.constructor = TiledLayout;\r\nmodule.exports = TiledLayout;\r\n\r\n/**\r\n * Orientation by rows\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nTiledLayout.ORIENTATION_ROWS = 'rows';\r\n\r\n/**\r\n * Orientation by columns\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nTiledLayout.ORIENTATION_COLUMNS = 'columns';\r\n\r\n/**\r\n * If an item height is smaller than the height of a tile, the item will\r\n * be aligned to the top edge of the tile.\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nTiledLayout.TILE_VERTICAL_ALIGN_TOP = 'top';\r\n\r\n/**\r\n * If an item height is smaller than the height of a tile, the item will\r\n * be aligned to the middle of the tile.\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nTiledLayout.TILE_VERTICAL_ALIGN_MIDDLE = 'middle';\r\n\r\n/**\r\n * If an item height is smaller than the height of a tile, the item will\r\n * be aligned to the bottom edge of the tile.\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nTiledLayout.TILE_VERTICAL_ALIGN_BOTTOM = 'bottom';\r\n\r\n/**\r\n * The item will be resized to fit the height of the tile.\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nTiledLayout.TILE_VERTICAL_ALIGN_JUSTIFY = 'justify';\r\n\r\n/**\r\n * If an item width is smaller than the width of a tile, the item will\r\n * be aligned to the left edge of the tile.\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nTiledLayout.TILE_HORIZONTAL_ALIGN_LEFT = 'left';\r\n\r\n/**\r\n * If an item width is smaller than the width of a tile, the item will\r\n * be aligned to the center of the tile.\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nTiledLayout.TILE_HORIZONTAL_ALIGN_CENTER = 'center';\r\n\r\n/**\r\n * If an item width is smaller than the width of a tile, the item will\r\n * be aligned to the right edge of the tile.\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nTiledLayout.TILE_HORIZONTAL_ALIGN_RIGHT = 'right';\r\n\r\n/**\r\n * The item will be resized to fit the width of the tile.\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nTiledLayout.TILE_HORIZONTAL_ALIGN_JUSTIFY = 'justify';\r\n\r\n/**\r\n * The items will be positioned in pages horizontally from left to right.\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nTiledLayout.PAGING_HORIZONTAL = 'horizontal';\r\n\r\n/**\r\n * The items will be positioned in pages vertically from top to bottom.\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nTiledLayout.PAGING_VERTICAL = 'vertical';\r\n\r\n/**\r\n * The items will not be positioned in pages.\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nTiledLayout.PAGING_NONE = 'none';\r\n\r\n/**\r\n * Calculate the layout for a container (and its children)\r\n *\r\n * @param container The container to calculate the layout for\r\n * @return Number[] The width and height\r\n */\r\nTiledLayout.prototype.layoutContainer = function(container) {\r\n    var dimensions = itemDimensions(container);\r\n    return this.layout(container.children, dimensions[0], dimensions[1]);\r\n};\r\n\r\n/**\r\n * Position (and possibly resize) the supplied items.\r\n *\r\n * @param items The items that will be layouted {Array}\r\n * @param maxWidth The maximum width for the items {Number}\r\n * @param maxHeight The maximum height for the items {Number}\r\n * @return Number[] The width and height\r\n */\r\nTiledLayout.prototype.layout = function (items, maxWidth, maxHeight) {\r\n    var _rows = this._orientation === TiledLayout.ORIENTATION_ROWS;\r\n    if(items.length === 0) {\r\n        return [0, 0];\r\n    }\r\n\r\n    maxWidth = maxWidth || NaN;\r\n    maxHeight = maxHeight || NaN;\r\n\r\n    // width/height the current layout takes\r\n    var width = 0;\r\n    var height = 0;\r\n\r\n    var i, item;\r\n    var tileWidth = 0;\r\n    var tileHeight = 0;\r\n\r\n    var dimensions;\r\n    // get size for tiles by saving the highest/widest tile.\r\n    for(i = 0; i < items.length; i++) {\r\n        item = items[i];\r\n        if(!item) {\r\n            continue;\r\n        }\r\n\r\n        dimensions = itemDimensions(item);\r\n        tileWidth = Math.max(tileWidth, dimensions[0]);\r\n        tileHeight = Math.max(tileHeight, dimensions[1]);\r\n    }\r\n\r\n    // make tiles square\r\n    if (this._useSquareTiles) {\r\n        if (tileWidth > tileHeight) {\r\n            tileHeight = tileWidth;\r\n        } else if (tileHeight > tileWidth) {\r\n            tileWidth = tileHeight;\r\n        }\r\n    }\r\n\r\n    // calculate tiles needed (and their width/height)\r\n    var availableWidth = NaN;\r\n    var availableHeight = NaN;\r\n\r\n    var horizontalTileCount = _rows ? items.length : 1;\r\n\r\n    if(!isNaN(maxWidth)) {\r\n        availableWidth = maxWidth;\r\n        horizontalTileCount = (maxWidth -\r\n            this._paddingLeft - this._paddingRight +\r\n            this._horizontalGap) / (tileWidth + this._horizontalGap);\r\n    }\r\n    horizontalTileCount = Math.floor(Math.max(horizontalTileCount, 1));\r\n\r\n    var verticalTileCount = _rows ? 1 : items.length;\r\n    if(!isNaN(maxHeight)) {\r\n        availableHeight = maxHeight;\r\n        verticalTileCount = (maxHeight -\r\n            this._paddingTop - this._paddingBottom +\r\n            this._verticalGap) / (tileHeight + this._verticalGap);\r\n    }\r\n    verticalTileCount = Math.floor(Math.max(verticalTileCount, 1));\r\n\r\n    var startX = this._paddingLeft;\r\n    var startY = this._paddingTop;\r\n\r\n    var perPage = horizontalTileCount * verticalTileCount;\r\n    var pageIndex = 0;\r\n    var nextPageStartIndex = perPage;\r\n    var pageStart = _rows ? startX : startY;\r\n    var positionX = startX;\r\n    var positionY = startY;\r\n    var itemIndex = 0;\r\n    for (i = 0; i < items.length; i++) {\r\n        item = items[i];\r\n        if (_rows) {\r\n            if(itemIndex !== 0 && itemIndex % horizontalTileCount === 0)\r\n            {\r\n                positionX = pageStart;\r\n                positionY += tileHeight + this._verticalGap;\r\n            }\r\n        } else { // columns\r\n            if(itemIndex !== 0 && i % verticalTileCount === 0)\r\n            {\r\n                positionX += tileWidth + this._horizontalGap;\r\n                positionY = pageStart;\r\n            }\r\n        }\r\n        if(itemIndex === nextPageStartIndex) {\r\n            pageIndex++;\r\n            nextPageStartIndex += perPage;\r\n\r\n            //we can use availableWidth and availableHeight here without\r\n            //checking if they're NaN because we will never reach a\r\n            //new page without them already being calculated.\r\n            if (_rows) {\r\n                if(this._paging === TiledLayout.PAGING_HORIZONTAL)\r\n                {\r\n                    positionX = pageStart === startX + availableWidth * pageIndex;\r\n                    positionY = startY;\r\n                } else if(this._paging === TiledLayout.PAGING_VERTICAL) {\r\n                    positionY = startY + availableHeight * pageIndex;\r\n                }\r\n            } else { // columns\r\n                if(this._paging === TiledLayout.PAGING_HORIZONTAL) {\r\n                    positionX = startX + availableWidth * pageIndex;\r\n                } else if(this._paging === TiledLayout.PAGING_VERTICAL) {\r\n                    positionX = startX;\r\n                    positionY = pageStart = startY + availableHeight * pageIndex;\r\n                }\r\n            }\r\n        }\r\n        if(item) {\r\n            switch(this._tileHorizontalAlign) {\r\n                case TiledLayout.TILE_HORIZONTAL_ALIGN_JUSTIFY:\r\n                    item.x = positionX;\r\n                    item.width = tileWidth;\r\n                    break;\r\n                case TiledLayout.TILE_HORIZONTAL_ALIGN_LEFT:\r\n                    item.x = positionX;\r\n                    break;\r\n                case TiledLayout.TILE_HORIZONTAL_ALIGN_RIGHT:\r\n                    item.x = positionX + tileWidth - item.width;\r\n                    break;\r\n                default: //center or unknown\r\n                    item.x = positionX + (tileWidth - item.width) / 2;\r\n            }\r\n            switch(this._tileVerticalAlign) {\r\n                case TiledLayout.TILE_VERTICAL_ALIGN_JUSTIFY:\r\n                    item.y = positionY;\r\n                    item.height = tileHeight;\r\n                    break;\r\n                case TiledLayout.TILE_VERTICAL_ALIGN_TOP:\r\n                    item.y = positionY;\r\n                    break;\r\n                case TiledLayout.TILE_VERTICAL_ALIGN_BOTTOM:\r\n                    item.y = positionY + tileHeight - item.height;\r\n                    break;\r\n                default: //middle or unknown\r\n                    item.y = positionY + (tileHeight - item.height) / 2;\r\n            }\r\n\r\n            // if the item has a layout and children, layout the children\r\n            if (this.layoutChildren && item.children &&\r\n                item.layout && item.layout.layout) {\r\n                dimensions = itemDimensions(item);\r\n                item.layout.layout(item.children, dimensions[0], dimensions[1]);\r\n            }\r\n        }\r\n        if (_rows) {\r\n            positionX += tileWidth + this._horizontalGap;\r\n        } else { // columns\r\n            positionY += tileHeight + this._verticalGap;\r\n        }\r\n        itemIndex++;\r\n    }\r\n\r\n    this._needUpdate = false;\r\n    return [width, height];\r\n};\r\n\r\n/**\r\n * Use the same width and height for tiles (calculated by biggest square)\r\n *\r\n * @name GOWN.layout.TiledLayout#useSquareTiles\r\n * @type bool\r\n * @default false\r\n */\r\nObject.defineProperty(TiledLayout.prototype, 'useSquareTiles', {\r\n    set: function(useSquareTiles) {\r\n        this._useSquareTiles = useSquareTiles;\r\n        this._needUpdate = true;\r\n    },\r\n    get: function() {\r\n        return this._useSquareTiles;\r\n    }\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/layout/TiledLayout.js\n// module id = 12\n// module chunks = 0","module.exports = function (item) {\r\n    var itemWidth = 0, itemHeight = 0;\r\n\r\n    // we prefer pixel positions over calculated ones, so we try to\r\n    // access the underscore values first.\r\n    if (!isNaN(item._height)) {\r\n        itemHeight = item._height;\r\n    } else if (!isNaN(item.height)) {\r\n        itemHeight = item.height;\r\n    }\r\n\r\n    if (!isNaN(item._width)) {\r\n        itemWidth = item._width;\r\n    } else if (!isNaN(item.width)) {\r\n        itemWidth = item.width;\r\n    }\r\n\r\n    return [itemWidth, itemHeight];\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/layout/utils/itemDimensions.js\n// module id = 13\n// module chunks = 0","var Control = require('../core/Control');\r\n\r\n/**\r\n * The LayoutGroup allows you to add PIXI.js children that will be positioned\r\n *\r\n * @class LayoutGroup\r\n * @extends GOWN.Control\r\n * @memberof GOWN\r\n * @constructor\r\n * @param layout The layout for the layout group {GOWN.LayoutAlignment}\r\n * @param [maxWidth=Infinity] The maximum width of the layout group {Number}\r\n * @param [maxHeight=Infinity] The maximum height of the layout group {Number}\r\n */\r\nfunction LayoutGroup(layout, maxWidth, maxHeight) {\r\n    /**\r\n     * The layout for the layout group\r\n     *\r\n     * @type GOWN.LayoutAlignment\r\n     */\r\n    this.layout = layout;\r\n\r\n    /**\r\n     * The percentage width of the positioned children\r\n     *\r\n     * @type Number\r\n     */\r\n    this.percentWidth = this.percentWidth ;\r\n\r\n    /**\r\n     * The percentage height of the positioned children\r\n     *\r\n     * @type Number\r\n     */\r\n    this.percentHeight = this.percentHeight;\r\n\r\n    /**\r\n     * The maximum width of the layout group\r\n     *\r\n     * @type Number\r\n     * @default Infinity\r\n     */\r\n    this.maxWidth = maxWidth || Infinity;\r\n\r\n    /**\r\n     * The maximum height of the layout group\r\n     *\r\n     * @type Number\r\n     * @default Infinity\r\n     */\r\n    this.maxHeight = maxHeight || Infinity;\r\n\r\n    Control.call(this);\r\n\r\n    /**\r\n     * Indicates if the layout group has changed\r\n     *\r\n     * @private\r\n     * @type bool\r\n     * @default true\r\n     */\r\n    this._needUpdate = true;\r\n\r\n    /**\r\n     * The layout group is resizable\r\n     *\r\n     * @private\r\n     * @type bool\r\n     * @default true\r\n     */\r\n    this.resizable = true;\r\n\r\n    this.on('resize', this.onResize, this);\r\n}\r\n\r\nLayoutGroup.prototype = Object.create( Control.prototype );\r\nLayoutGroup.prototype.constructor = LayoutGroup;\r\nmodule.exports = LayoutGroup;\r\n\r\n/**\r\n * Update before draw call (position label)\r\n * (called from Control.prototype.updateTransform every frame)\r\n *\r\n * @protected\r\n */\r\nLayoutGroup.prototype.redraw = function() {\r\n    var dimensionChanged = false;\r\n    if (this._width && this.maxWidth !== this._width) {\r\n        this._width = Math.min(this._width, this.maxWidth);\r\n        dimensionChanged = true;\r\n    }\r\n    if (this._height && this.maxHeight !== this._height) {\r\n        this._height = Math.min(this._height, this.maxHeight);\r\n        dimensionChanged = true;\r\n    }\r\n    if (this.layout &&\r\n        (this._needUpdate || dimensionChanged || this.layout.needUpdate)) {\r\n        this.layout.layoutContainer(this);\r\n        this._needUpdate = false;\r\n    }\r\n};\r\n\r\n/**\r\n * onResize callback\r\n *\r\n * @protected\r\n */\r\nLayoutGroup.prototype.onResize = function() {\r\n    this._needUpdate = true;\r\n};\r\n\r\n/* istanbul ignore next */\r\n\r\n/**\r\n * Adds one or more children to the container.\r\n *\r\n * Multiple items can be added like so: `myContainer.addChild(thingOne, thingTwo, thingThree)`\r\n *\r\n * @param {...PIXI.DisplayObject} child - The DisplayObject(s) to add to the container\r\n * @return {PIXI.DisplayObject} The first child that was added.\r\n */\r\nLayoutGroup.prototype.addChild = function(child) {\r\n    var re = Control.prototype.addChild.call(this, child);\r\n    this._needUpdate = true;\r\n    return re;\r\n};\r\n\r\n/* istanbul ignore next */\r\n\r\n/**\r\n * Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown\r\n *\r\n * @param {PIXI.DisplayObject} child - The child to add\r\n * @param {number} index - The index to place the child in\r\n * @return {PIXI.DisplayObject} The child that was added.\r\n */\r\nLayoutGroup.prototype.addChildAt = function(child, pos) {\r\n    var re = Control.prototype.addChildAt.call(this, child, pos);\r\n    this._needUpdate = true;\r\n    return re;\r\n};\r\n\r\n/**\r\n * Add some space between children\r\n *\r\n * @param space Space between children {Number}\r\n */\r\nLayoutGroup.prototype.addSpacer = function(space) {\r\n    var spacer = new Control();\r\n    spacer.width = spacer.height = space;\r\n    this.addChild(spacer);\r\n};\r\n\r\n/**\r\n * Indicates if the given child is inside the viewport (only used for scrolling)\r\n *\r\n * @param child One child with set coordinates and dimensions {PIXI.DisplayObject}\r\n * @param x X-position on the scroll-container {Number}\r\n * @param y Y-position on the scroll-container {Number}\r\n * @param width Width of the viewport {Number}\r\n * @param height Height of the viewport {Number}\r\n * @returns {boolean}\r\n */\r\nLayoutGroup.prototype.childIsRenderAble = function(child, x, y, width, height) {\r\n    return child.x < width + x &&\r\n        child.y < height + y &&\r\n        child.x > x - child.width &&\r\n        child.y > y - child.height;\r\n};\r\n\r\n/**\r\n * Update renderable (culling of non visible objects)\r\n *\r\n * @param x X-position on the scroll-container {Number}\r\n * @param y Y-position on the scroll-container {Number}\r\n * @param width width of the viewport {Number}\r\n * @param height height of the viewport {Number}\r\n */\r\nLayoutGroup.prototype.updateRenderable = function(x, y, width, height) {\r\n    for(var i=0, j=this.children.length; i<j; i++) {\r\n        var child = this.children[i];\r\n        child.renderable = this.childIsRenderAble(child, x, y, width, height);\r\n    }\r\n};\r\n\r\n/**\r\n * The width of the group, will get the position and the width of the right child.\r\n *\r\n * @name GOWN.LayoutGroup#width\r\n * @type Number\r\n */\r\nObject.defineProperty(LayoutGroup.prototype, 'width', {\r\n    set: function(width) {\r\n        this._width = width;\r\n    },\r\n    get: function() {\r\n        if (this._width > 0) {\r\n            return this._width;\r\n        }\r\n        var width = 0;\r\n        if (this.children) {\r\n            for (var i = 0; i < this.children.length; i++) {\r\n                var child = this.getChildAt(i);\r\n                width = Math.max(width, child.x+child.width);\r\n            }\r\n        }\r\n        return width;\r\n    }\r\n});\r\n\r\n/**\r\n * The height of the group, will get the position and the height of the bottom child.\r\n *\r\n * @name GOWN.LayoutGroup#height\r\n * @type Number\r\n */\r\nObject.defineProperty(LayoutGroup.prototype, 'height', {\r\n    set: function(height) {\r\n        this._height = height;\r\n    },\r\n    get: function() {\r\n        if (this._height > 0) {\r\n            return this._height;\r\n        }\r\n        var height = 0;\r\n        if (this.children) {\r\n            for (var i = 0; i < this.children.length; i++) {\r\n                var child = this.getChildAt(i);\r\n                height = Math.max(height, child.y+child.height);\r\n            }\r\n        }\r\n        return height;\r\n    }\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/LayoutGroup.js\n// module id = 14\n// module chunks = 0","var Scroller = require('./Scroller');\r\nvar ListCollection = require('../data/ListCollection');\r\nvar LayoutGroup = require('./LayoutGroup');\r\nvar DefaultListItemRenderer = require('./renderers/DefaultListItemRenderer');\r\n\r\n/**\r\n * The basic list\r\n *\r\n * @class List\r\n * @extends GOWN.Scroller\r\n * @memberof GOWN\r\n * @constructor\r\n * @param [theme] theme for the list {GOWN.Theme}\r\n */\r\nfunction List(theme) {\r\n    Scroller.call(this, theme);\r\n\r\n    /**\r\n     * The skin name\r\n     *\r\n     * @type String\r\n     * @default List.SKIN_NAME\r\n     */\r\n    this.skinName = this.skinName || List.SKIN_NAME;\r\n\r\n    /**\r\n     * Determines if items in the list may be selected. (not implemented yet)\r\n     *\r\n     * @private\r\n     * @type bool\r\n     * @default true\r\n     */\r\n    this._selectable = true;\r\n\r\n    /**\r\n     * The index of the currently selected item.\r\n     *\r\n     * @private\r\n     * @type Number\r\n     * @default -1\r\n     */\r\n    this._selectedIndex = -1;\r\n\r\n    /**\r\n     * If true multiple items may be selected at a time.\r\n     *\r\n     * @private\r\n     * @type bool\r\n     * @default false\r\n     */\r\n    this._allowMultipleSelection = false;\r\n\r\n    /**\r\n     * The indices of the currently selected items.\r\n     *\r\n     * @private\r\n     * @type Number[]\r\n     * @default []\r\n     */\r\n    this._selectedIndices = [];\r\n\r\n    /**\r\n     * The item renderer\r\n     *\r\n     * @private\r\n     * @type Array\r\n     * @default []\r\n     */\r\n    this._itemRenderer = [];\r\n\r\n    /**\r\n     * The item change handler\r\n     *\r\n     * @private\r\n     * @type function\r\n     */\r\n    this._itemChangeHandler = this.itemChangeHandler.bind(this);\r\n\r\n    /**\r\n     * The item renderer change handler\r\n     *\r\n     * @private\r\n     * @type function\r\n     */\r\n    this._itemRendererChangeHandler = this.itemRendererChangeHandler.bind(this);\r\n\r\n    /**\r\n     * The item renderer factory creates a new instance of the item renderer\r\n     *\r\n     * @private\r\n     * @type function\r\n     * @default this._defaultItemRendererFactory\r\n     */\r\n    this._itemRendererFactory = this._itemRendererFactory || this._defaultItemRendererFactory;\r\n\r\n    /**\r\n     * Properties that will be passed down to every item renderer when the list validates.\r\n     *\r\n     * @private\r\n     * @type Object\r\n     * @default {}\r\n     */\r\n    this._itemRendererProperties = {};\r\n\r\n    // TODO: itemRendererStyleName (?)\r\n\r\n    if (!this.viewPort) {\r\n        /**\r\n         * We do not implement ListDataViewPort from feathers\r\n         * (most of what it does is implemented in List directly to\r\n         * manage the viewport)\r\n         * and instead use the normal LayoutGroup (less abstraction, less code)\r\n         *\r\n         * @private\r\n         * @type GOWN.LayoutGroup\r\n         */\r\n        this.viewPort = new LayoutGroup();\r\n    }\r\n    this.layoutChanged = true;\r\n}\r\n\r\nList.prototype = Object.create( Scroller.prototype );\r\nList.prototype.constructor = List;\r\nmodule.exports = List;\r\n\r\n/**\r\n * Default list skin name\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nList.SKIN_NAME = 'list';\r\n\r\n/**\r\n * Dispatched when the selected item changes.\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nList.CHANGE = 'change';\r\n\r\n/**\r\n * A function that is expected to return a new GOWN.DefaultListItemRenderer\r\n *\r\n * @param theme The item theme {GOWN.Theme}\r\n * @returns {DefaultListItemRenderer}\r\n * @private\r\n */\r\nList.prototype._defaultItemRendererFactory = function(theme) {\r\n    return new DefaultListItemRenderer(theme);\r\n};\r\n\r\n/**\r\n * Gets called when new data is added or removed\r\n * to the dataProvider\r\n *\r\n * @protected\r\n */\r\nList.prototype.itemChangeHandler = function() {\r\n    // TODO: test code so it will handle if item is removed\r\n    // deselect removed items\r\n    var index = this._dataProvider.data.length;\r\n    if (this._selectedIndex >= index) {\r\n        this._selectedIndex = -1;\r\n    }\r\n    var indexCount = this._selectedIndices.length;\r\n    for (var i = 0; i < indexCount; i++) {\r\n        var currentIndex = this._selectedIndices[i];\r\n        if (currentIndex >= index) {\r\n            this._selectedIndices.splice(i, 1);\r\n        }\r\n    }\r\n    // force redraw\r\n    this.dataInvalid = true;\r\n};\r\n\r\n/**\r\n * Select one of the items\r\n *\r\n * @param item The item to select {String}\r\n */\r\nList.prototype.selectItem = function(item) {\r\n    this.selectedIndex = this._dataProvider.data.indexOf(item);\r\n};\r\n\r\n\r\n/**\r\n * @private\r\n */\r\n// performance increase to avoid using call.. (10x faster)\r\nList.prototype.scrollerRedraw = Scroller.prototype.redraw;\r\n\r\n/**\r\n * Update before draw call\r\n *\r\n * @protected\r\n */\r\nList.prototype.redraw = function() {\r\n    var basicsInvalid = this.dataInvalid;\r\n    if (basicsInvalid) {\r\n        this.refreshRenderers();\r\n    }\r\n    this.scrollerRedraw();\r\n\r\n    if (!this.layout) {\r\n        var layout = new GOWN.layout.VerticalLayout();\r\n        layout.padding = 0;\r\n        layout.gap = 0;\r\n        layout.horizontalAlign = GOWN.layout.VerticalLayout.HORIZONTAL_ALIGN_JUSTIFY;\r\n        layout.verticalAlign = GOWN.layout.VerticalLayout.VERTICAL_ALIGN_TOP;\r\n        this.layout = layout;\r\n    }\r\n};\r\n\r\n/**\r\n * Refresh the renderers\r\n */\r\nList.prototype.refreshRenderers = function () {\r\n    //TODO: update only new renderer\r\n    //      see ListDataViewPort --> refreshInactieRenderers\r\n    this._itemRenderer.length = 0;\r\n    if (this._dataProvider && this.viewPort) {\r\n        this.viewPort.removeChildren();\r\n        for (var i = 0; i < this._dataProvider.length; i++) {\r\n            var item = this._dataProvider.getItemAt(i);\r\n            var itemRenderer = this._itemRendererFactory(this.theme);\r\n\r\n            if (this._itemRendererProperties) {\r\n                itemRenderer.labelField = this._itemRendererProperties.labelField;\r\n            }\r\n\r\n            itemRenderer.on('change', this._itemRendererChangeHandler);\r\n            itemRenderer.data = item;\r\n            this._itemRenderer.push(itemRenderer);\r\n            this.viewPort.addChild(itemRenderer);\r\n        }\r\n    }\r\n\r\n    this.dataInvalid = false;\r\n};\r\n\r\n/**\r\n * Item catch/forward renderer change event.\r\n * This is thrown when the state of the itemRenderer changes\r\n * (e.g. from unselected to selected), not when the data changes\r\n *\r\n * @protected\r\n */\r\nList.prototype.itemRendererChangeHandler = function(itemRenderer, value) {\r\n    // TODO: update selected item\r\n    var i;\r\n    this._selectedIndices.length = 0;\r\n\r\n    if (!this.allowMultipleSelection) {\r\n        for (i = 0; i < this._itemRenderer.length; i++) {\r\n            if (this._itemRenderer[i] !== itemRenderer && value === true) {\r\n                this._itemRenderer[i].selected = false;\r\n            }\r\n        }\r\n        if (value === true) {\r\n            this._selectedIndices = [this._itemRenderer.indexOf(itemRenderer)];\r\n        }\r\n    } else {\r\n        for (i = 0; i < this._itemRenderer.length; i++) {\r\n            if (this._itemRenderer[i].selected === true) {\r\n                this._selectedIndices.push(i);\r\n            }\r\n        }\r\n    }\r\n\r\n    this.emit(List.CHANGE, itemRenderer, value);\r\n};\r\n\r\n/**\r\n * Set layout and pass event listener to it\r\n *\r\n * @name GOWN.List#layout\r\n * @type LayoutAlignment\r\n */\r\nObject.defineProperty(List.prototype, 'layout', {\r\n    set: function(layout) {\r\n        if (this._layout === layout) {\r\n            return;\r\n        }\r\n        if (this.viewPort) {\r\n            // this is different from feathers - there the viewport does not\r\n            // know the layout (feathers uses ListDataViewPort, not LayoutGroup\r\n            // as viewPort for List)\r\n            this.viewPort.layout = layout;\r\n        }\r\n        // TODO: this.invalidate(INVALIDATION_FLAG_LAYOUT);\r\n    },\r\n    get: function() {\r\n        return this._layout;\r\n    }\r\n});\r\n\r\n/**\r\n * Set item renderer properties (e.g. labelField) and update all itemRenderer\r\n *\r\n * @name GOWN.List#itemRendererProperties\r\n * @type Object\r\n */\r\nObject.defineProperty(List.prototype, 'itemRendererProperties', {\r\n    set: function(itemRendererProperties) {\r\n        this._itemRendererProperties = itemRendererProperties;\r\n        this.dataInvalid = true;\r\n    },\r\n    get: function() {\r\n        return this._itemRendererProperties;\r\n    }\r\n});\r\n\r\n\r\n/**\r\n * Set item renderer factory (for custom item Renderer)\r\n *\r\n * @name GOWN.List#itemRendererFactory\r\n * @type function\r\n */\r\nObject.defineProperty(List.prototype, 'itemRendererFactory', {\r\n    set: function(itemRendererFactory) {\r\n        this._itemRendererFactory = itemRendererFactory;\r\n        this.dataInvalid = true;\r\n    },\r\n    get: function() {\r\n        return this._itemRendererFactory;\r\n    }\r\n});\r\n\r\n/**\r\n * Allow/disallow multiple selection.\r\n * If selection has been disallowed, deselect all but one.\r\n *\r\n * @name GOWN.List#allowMultipleSelection\r\n * @type bool\r\n */\r\n Object.defineProperty(List.prototype, 'allowMultipleSelection', {\r\n     set: function(allowMultipleSelection) {\r\n         if (this._allowMultipleSelection === allowMultipleSelection) {\r\n             return;\r\n         }\r\n         this._allowMultipleSelection = allowMultipleSelection;\r\n\r\n         if (!this._allowMultipleSelection && this._selectedIndices) {\r\n             // only last index is selected\r\n             this._selectedIndices = [this._selectedIndices.pop()];\r\n         }\r\n         //TODO: this.refreshSelection();\r\n     },\r\n     get: function() {\r\n         return this._allowMultipleSelection;\r\n     }\r\n });\r\n\r\n/**\r\n * The index of the selected item\r\n *\r\n * @name GOWN.List#selectedIndex\r\n * @type Number\r\n */\r\nObject.defineProperty(List.prototype, 'selectedIndex', {\r\n    set: function(selectedIndex) {\r\n        this._selectedIndex = selectedIndex;\r\n        // force redraw\r\n        this.dataInvalid = true;\r\n    },\r\n    get: function() {\r\n        return this._selectedIndex;\r\n    }\r\n});\r\n\r\n/**\r\n * dataProvider for list.\r\n * The dataProvider is a structure that provides the data.\r\n * In its simplest form it is an array containing the data\r\n *\r\n * @name GOWN.List#dataProvider\r\n * @type Array\r\n */\r\nObject.defineProperty(List.prototype, 'dataProvider', {\r\n    set: function(dataProvider) {\r\n        if (this._dataProvider === dataProvider) {\r\n            return;\r\n        }\r\n        if (!(dataProvider instanceof ListCollection || dataProvider === null)) {\r\n            throw new Error('the dataProvider has to be a GOWN.ListCollection');\r\n        }\r\n\r\n        if (this._dataProvider) {\r\n            this._dataProvider.off(ListCollection.CHANGED, this._itemChangeHandler);\r\n        }\r\n        this._dataProvider = dataProvider;\r\n\r\n        //reset the scroll position because this is a drastic change and\r\n        //the data is probably completely different\r\n        this.horizontalScrollPosition = 0;\r\n        this.verticalScrollPosition = 0;\r\n\r\n        if (this._dataProvider) {\r\n            this._dataProvider.on(ListCollection.CHANGED, this._itemChangeHandler);\r\n        }\r\n\r\n        this.selectedIndex = -1;\r\n        this.dataInvalid = true;\r\n    },\r\n    get: function() {\r\n        return this._dataProvider;\r\n    }\r\n});\r\n\r\n// TODO: selectedItem\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/List.js\n// module id = 15\n// module chunks = 0","var Scrollable = require('./Scrollable');\r\n\r\n// TODO: decrement/increment Button\r\n// TODO: thumbFactory?\r\n// TODO: this.showButtons\r\n\r\n/**\r\n * Scroll bar with thumb\r\n * hosting some Viewport (e.g. a ScrollContainer or a Texture)\r\n *\r\n * @class ScrollBar\r\n * @extends GOWN.Scrollable\r\n * @memberof GOWN\r\n * @constructor\r\n * @param [direction=Scrollable.HORIZONTAL] Direction of the scroll bar (horizontal/vertical) {String}\r\n * @param [theme] theme for the scrollbar {GOWN.Theme}\r\n */\r\nfunction ScrollBar(direction, theme) {\r\n    /**\r\n     * The skin name\r\n     *\r\n     * @type String\r\n     * @default ScrollBar.SKIN_NAME\r\n     */\r\n    this.skinName = this.skinName || ScrollBar.SKIN_NAME;\r\n\r\n    // this.viewPort = container;\r\n\r\n    this.direction = direction === undefined ?\r\n        Scrollable.HORIZONTAL : direction;\r\n\r\n    // if (container) {\r\n    //     // move thumb when viewPort moves\r\n    //     container[this.direction + '_bar'] = this;\r\n    // }\r\n    Scrollable.call(this, theme);\r\n}\r\n\r\nScrollBar.prototype = Object.create( Scrollable.prototype );\r\nScrollBar.prototype.constructor = ScrollBar;\r\nmodule.exports = ScrollBar;\r\n\r\n/**\r\n * The minimum thumb width\r\n *\r\n * @type Number\r\n * @default 20\r\n */\r\nScrollBar.prototype.minThumbWidth = 20;\r\n\r\n/**\r\n * The minimum thumb height\r\n *\r\n * @type Number\r\n * @default 20\r\n */\r\nScrollBar.prototype.minThumbHeight = 20;\r\n\r\n/**\r\n * Default scroll bar skin name\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nScrollBar.SKIN_NAME = 'scroll_bar';\r\n\r\n/**\r\n * @private\r\n */\r\nScrollBar.prototype.scrollableredraw = Scrollable.prototype.redraw;\r\n\r\n/**\r\n * Recalculate scroll thumb width/height\r\n *\r\n * @private\r\n */\r\nScrollBar.prototype.redraw = function() {\r\n    if (this.invalidTrack) {\r\n        if (this.container && this.container.viewPort && this.thumb) {\r\n            if (this.direction === Scrollable.HORIZONTAL) {\r\n                this.thumb.width = Math.max(this.minThumbWidth,\r\n                    this.container.width /\r\n                    (this.container.viewPort.width / this.container.width));\r\n            } else {\r\n                this.thumb.height = Math.max(this.minThumbHeight,\r\n                    this.container.height /\r\n                    (this.container.viewPort.height / this.container.height));\r\n            }\r\n        }\r\n        this.scrollableredraw(this);\r\n    }\r\n};\r\n\r\n/**\r\n * Thumb has been moved. Scroll content to position\r\n *\r\n * @param x x-position to scroll to (ignored when vertical)\r\n * @param y y-position to scroll to (ignored when horizontal)\r\n */\r\nScrollBar.prototype.thumbMoved = function(x, y) {\r\n    if (this.container && this.container.viewPort) {\r\n        if (this._direction === Scrollable.HORIZONTAL) {\r\n            this.container._scrollContent(\r\n                -(this.container.viewPort.width - this.container.width) *\r\n                    (x / (this.container.width - this.thumb.width)),\r\n                0);\r\n        } else if (this._direction === Scrollable.VERTICAL) {\r\n            this.container._scrollContent(\r\n                0,\r\n                -(this.container.viewPort.height - this.container.height) *\r\n                    (y / (this.container.height - this.thumb.height)));\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Determines if the scroll bar's thumb can be dragged horizontally or\r\n * vertically.\r\n *\r\n * @name GOWN.ScrollBar#direction\r\n * @type String\r\n */\r\nObject.defineProperty(ScrollBar.prototype, 'direction', {\r\n    get: function() {\r\n        return this._direction;\r\n    },\r\n    set: function(direction) {\r\n        this._direction = direction;\r\n        this.invalid = true;\r\n    }\r\n});\r\n\r\n/**\r\n * Value of the scrollbar\r\n *\r\n * @name GOWN.ScrollBar#value\r\n * @type Number\r\n */\r\n//TODO: put in Scrollable\r\nObject.defineProperty(ScrollBar.prototype, 'value', {\r\n    get: function() {\r\n        return this._value;\r\n    },\r\n    set: function(value) {\r\n        this._value = value;\r\n    }\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/ScrollBar.js\n// module id = 16\n// module chunks = 0","var Button = require('./Button');\r\n\r\n/**\r\n * Thumb button that can be moved on the scrollbar\r\n *\r\n * @class ScrollThumb\r\n * @extends GOWN.Button\r\n * @memberof GOWN\r\n * @constructor\r\n * @param scrollable The scrollable that the scroll thumb belongs to {GOWN.Scrollable}\r\n * @param [theme] theme for the scroll thumb {GOWN.Theme}\r\n * @param [skinName=ScrollThumb.SKIN_NAME] name of the scroll thumb skin {String}\r\n */\r\nfunction ScrollThumb(scrollable, theme, skinName) {\r\n    /**\r\n     * The scrollable that the scroll thumb belongs to\r\n     *\r\n     * @type GOWN.Scrollable\r\n     */\r\n    this.scrollable = scrollable;\r\n\r\n    var defaultSkin = ScrollThumb.SKIN_NAME;\r\n    if (!theme.thumbSkin) {\r\n        defaultSkin = Button.SKIN_NAME;\r\n    }\r\n\r\n    /**\r\n     * The skin name\r\n     *\r\n     * @type String\r\n     * @default ScrollThumb.SKIN_NAME\r\n     */\r\n    this.skinName = skinName || defaultSkin;\r\n\r\n    if (theme.thumbSkin) {\r\n        /**\r\n         * The valid scroll thumb states\r\n         *\r\n         * @private\r\n         * @type String[]\r\n         * @default ScrollThumb.THUMB_STATES\r\n         */\r\n        this._validStates = ScrollThumb.THUMB_STATES;\r\n    }\r\n    if (theme.thumbWidth) {\r\n        /**\r\n         * The width of the scroll thumb\r\n         *\r\n         * @type Number\r\n         */\r\n        this.width = theme.thumbWidth;\r\n    }\r\n    if (theme.thumbHeight) {\r\n        /**\r\n         * The height of the scroll thumb\r\n         *\r\n         * @type Number\r\n         */\r\n        this.height = theme.thumbHeight;\r\n    }\r\n\r\n    Button.call(this, theme, this.skinName);\r\n\r\n    /**\r\n     * Invalidate track so that it will be redrawn next time\r\n     *\r\n     * @private\r\n     * @type bool\r\n     * @default true\r\n     */\r\n    this.invalidTrack = true;\r\n\r\n    this.on('touchmove', this.handleMove, this);\r\n    this.on('mousemove', this.handleMove, this);\r\n\r\n    /* jshint unused: false */\r\n    this.on('touchdown', this.handleDown, this);\r\n    this.on('mousedown', this.handleDown, this);\r\n    /* jshint unused: false */\r\n\r\n    this.on('mouseup', this.handleUp, this);\r\n    this.on('touchend', this.handleUp, this);\r\n    this.on('touchendoutside', this.handleUp, this);\r\n}\r\n\r\nScrollThumb.prototype = Object.create( Button.prototype );\r\nScrollThumb.prototype.constructor = ScrollThumb;\r\nmodule.exports = ScrollThumb;\r\n\r\n/**\r\n * Default scroll thumb skin name\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nScrollThumb.SKIN_NAME = 'scroll_thumb';\r\n\r\n/**\r\n * Names of possible states for a scroll thumb\r\n *\r\n * @static\r\n * @final\r\n * @type String[]\r\n * @private\r\n */\r\nScrollThumb.THUMB_STATES = [\r\n    'horizontal_up', 'vertical_up',\r\n    'horizontal_down', 'vertical_down',\r\n    'horizontal_hover', 'vertical_hover'\r\n];\r\n\r\nvar originalCurrentState = Object.getOwnPropertyDescriptor(Button.prototype, 'currentState');\r\n\r\n/**\r\n * The current state (one of _validStates)\r\n *\r\n * @name GOWN.ScrollThumb#currentState\r\n * @type String\r\n */\r\nObject.defineProperty(ScrollThumb.prototype, 'currentState',{\r\n    set: function(value) {\r\n        if (this.theme.thumbSkin) {\r\n            // use skin including direction instead of default skin\r\n            value = this.scrollable.direction + '_' + value;\r\n        }\r\n        originalCurrentState.set.call(this, value);\r\n    }\r\n});\r\n\r\nScrollThumb.prototype.handleDown = function(mouseData) {\r\n    var local = mouseData.data.getLocalPosition(this.scrollable);\r\n    this.scrollable._start = [local.x, local.y];\r\n    //this.scrollable.handleDown(mouseData);\r\n    mouseData.stopPropagation();\r\n};\r\n\r\n/**\r\n * onMove callback\r\n *\r\n * @protected\r\n */\r\nScrollThumb.prototype.handleMove = function (mouseData) {\r\n    this.scrollable.handleMove(mouseData);\r\n};\r\n\r\n/**\r\n * onUp callback\r\n *\r\n * @protected\r\n */\r\nScrollThumb.prototype.handleUp = function (mouseData) {\r\n    this.scrollable.handleUp(mouseData);\r\n};\r\n\r\n/**\r\n * Show track icon on thumb\r\n *\r\n * @param skin The new scroll thumb skin name {String}\r\n */\r\nScrollThumb.prototype.showTrack = function(skin) {\r\n    if (this.skin !== skin) {\r\n        if(this.skin) {\r\n            this.removeChild(this.skin);\r\n        }\r\n\r\n        this.addChild(skin);\r\n        this.skin = skin;\r\n    }\r\n    skin.x = Math.floor((this.width - skin.getBounds().width )/ 2);\r\n    skin.y = Math.floor((this.height - skin.getBounds().height )/ 2);\r\n    this.invalidTrack = false;\r\n};\r\n\r\n/**\r\n * Redraw the skin\r\n *\r\n * @private\r\n */\r\nScrollThumb.prototype.redraw = function() {\r\n    if (this.invalidTrack && this.theme.thumbSkin) {\r\n        this.fromSkin(this.scrollable.direction+'_thumb', this.showTrack);\r\n    }\r\n};\r\n\r\n/**\r\n * Move the thumb on the scroll bar within its bounds\r\n *\r\n * @param x New calculated x position of the thumb {Number}\r\n * @param y New calculated y position of the thumb {Number}\r\n * @returns {boolean} returns true if the position of the thumb has been\r\n * moved\r\n */\r\nScrollThumb.prototype.move = function(x, y) {\r\n    if (this.scrollable.direction === GOWN.Scrollable.HORIZONTAL) {\r\n        if (isNaN(x)) {\r\n            return false;\r\n        }\r\n        x = Math.min(x, this.scrollable.maxWidth());\r\n        x = Math.max(x, 0);\r\n        if (x !== this.x) {\r\n            this.x = x;\r\n            return true;\r\n        }\r\n    } else {\r\n        if (isNaN(y)) {\r\n            return false;\r\n        }\r\n        y = Math.min(y, this.scrollable.maxHeight());\r\n        y = Math.max(y, 0);\r\n        if (y !== this.y) {\r\n            this.y = y;\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/ScrollThumb.js\n// module id = 17\n// module chunks = 0","var InputControl = require('./InputControl'),\r\n    InputWrapper = require('../utils/InputWrapper'),\r\n    position = require('../utils/position');\r\n\r\n/**\r\n * The basic Text Input - based on PIXI.Input.\r\n * Input by Sebastian Nette, see https://github.com/SebastianNette/PIXI.Input\r\n *\r\n * @class TextInput\r\n * @extends GOWN.InputControl\r\n * @memberof GOWN\r\n * @constructor\r\n * @param [theme] theme for the text input {GOWN.Theme}\r\n * @param [skinName=TextInput.SKIN_NAME] name of the text input skin {String}\r\n */\r\nfunction TextInput(theme, skinName) {\r\n    // show and load background image as skin (exploiting skin states)\r\n    /**\r\n     * The skin name\r\n     *\r\n     * @type String\r\n     * @default TextInput.SKIN_NAME\r\n     */\r\n    this.skinName = skinName || TextInput.SKIN_NAME;\r\n\r\n    /**\r\n     * The valid text input states\r\n     *\r\n     * @private\r\n     * @type String[]\r\n     * @default InputControl.stateNames\r\n     */\r\n    this._validStates = this._validStates || InputControl.stateNames;\r\n\r\n    InputControl.call(this, theme);\r\n}\r\n\r\nTextInput.prototype = Object.create(InputControl.prototype);\r\nTextInput.prototype.constructor = TextInput;\r\nmodule.exports = TextInput;\r\n\r\n/**\r\n * Default text area skin name\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nTextInput.SKIN_NAME = 'text_input';\r\n\r\n/**\r\n * Set display as password (show text with \"*\")\r\n *\r\n * @name GOWN.TextInput#displayAsPassword\r\n * @type bool\r\n */\r\nObject.defineProperty(TextInput.prototype, 'displayAsPassword', {\r\n    get: function () {\r\n        return this._displayAsPassword;\r\n    },\r\n    set: function (displayAsPassword) {\r\n        this._displayAsPassword = displayAsPassword;\r\n        this.setText(this._origText);\r\n    }\r\n});\r\n\r\n/**\r\n * Get the text lines as an array\r\n *\r\n * @returns {Array|*} Returns an array with one text line per array element\r\n */\r\nTextInput.prototype.getLines = function() {\r\n    return [this.text];\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nTextInput.prototype.inputControlSetText = InputControl.prototype.setText;\r\n\r\n/**\r\n * Set the text\r\n *\r\n * @param text The text to display {String}\r\n */\r\nTextInput.prototype.setText = function(text) {\r\n    if (this._displayAsPassword) {\r\n        text = text.replace(/./gi, '*');\r\n    }\r\n    var hasText = this.pixiText !== undefined;\r\n    this.inputControlSetText(text);\r\n    if (!hasText && this.height > 0) {\r\n        position.centerVertical(this.pixiText);\r\n        // set cursor to start position\r\n        if (this.cursor) {\r\n            this.cursor.y = this.pixiText.y;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Update the selection\r\n *\r\n * @private\r\n */\r\nTextInput.prototype.updateSelectionBg = function() {\r\n    var start = this.selection[0],\r\n        end = this.selection[1];\r\n\r\n    this.selectionBg.clear();\r\n    if (start !== end) {\r\n        start = this.textWidth(this.text.substring(0, start));\r\n        end = this.textWidth(this.text.substring(0, end));\r\n        this.selectionBg.beginFill(0x0080ff);\r\n        this.selectionBg.drawRect(start, 0, end - start, this.pixiText.height);\r\n        this.selectionBg.x = this.pixiText.x;\r\n        this.selectionBg.y = this.pixiText.y;\r\n    }\r\n};\r\n\r\n\r\n// TODO: autoSizeIfNeeded\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/TextInput.js\n// module id = 18\n// module chunks = 0","var ToggleButton = require('../ToggleButton');\r\nvar Button = require('../Button');\r\n\r\n/**\r\n * The default list item renderer.\r\n *\r\n * @class DefaultListItemRenderer\r\n * @extends GOWN.ToggleButton\r\n * @memberof GOWN\r\n * @constructor\r\n * @param [theme] theme for the DefaultListItemRenderer {GOWN.Theme}\r\n */\r\nfunction DefaultListItemRenderer(theme) {\r\n    ToggleButton.call(this, theme);\r\n\r\n    /**\r\n     * A key in the item data that will be shown as label for the item.\r\n     * e.g. 'text' for item.text.\r\n     * will be ignored if labelFunction is set.\r\n     *\r\n     * the item will be shown directly (using toString) if\r\n     * labelField and labelFunction are not set.\r\n     *\r\n     * @type String\r\n     * @default 'text'\r\n     */\r\n    this.labelField = 'text';\r\n\r\n    /**\r\n\t * A function used to generate label text for a specific item. If this\r\n\t * function is not null, then the <code>labelField</code> will be\r\n\t * ignored.\r\n\t *\r\n\t * <p>In the following example, the label function is customized:</p>\r\n\t * renderer.labelFunction = function( item ) {\r\n\t *    return item.firstName + \" \" + item.lastName;\r\n\t * };</listing>\r\n\t *\r\n     * @type function\r\n\t * @default null\r\n\t *\r\n\t * @see #labelField\r\n\t */\r\n    this.labelFunction = null;\r\n\r\n    /**\r\n     * The list item data\r\n     *\r\n     * @private\r\n     * @default null\r\n     */\r\n    this._data = null;\r\n\r\n    /**\r\n     * Overwrite data values before next draw call.\r\n     *\r\n     * @private\r\n     * @type bool\r\n     * @default false\r\n     */\r\n    this.dataInvalid = false;\r\n\r\n\r\n    // TODO: use min/max and/or default values instead, because percentages\r\n    // have higher priority, so this forces the user to remove the percentage\r\n    // before he can set pixel values.\r\n    /**\r\n     * Percent width\r\n     *\r\n     * @private\r\n     * @type Number\r\n     * @default 100\r\n     */\r\n    this.percentWidth = 100;\r\n\r\n    /**\r\n     * Percent height\r\n     *\r\n     * @private\r\n     * @type Number\r\n     * @default 100\r\n     */\r\n    this.percentHeight = 100;\r\n}\r\n\r\nDefaultListItemRenderer.prototype = Object.create( ToggleButton.prototype );\r\nDefaultListItemRenderer.prototype.constructor = DefaultListItemRenderer;\r\nmodule.exports = DefaultListItemRenderer;\r\n\r\n// performance increase to avoid using call.. (10x faster)\r\nDefaultListItemRenderer.prototype.redrawButton = Button.prototype.redraw;\r\n\r\n/**\r\n * Update button text before draw call\r\n */\r\nDefaultListItemRenderer.prototype.redraw = function() {\r\n    if (this.dataInvalid) {\r\n        this.commitData();\r\n    }\r\n    this.redrawButton();\r\n};\r\n\r\n/**\r\n * Updates the renderer to display the item's data. Override this\r\n * function to pass data to sub-components and react to data changes.\r\n *\r\n * <p>Don't forget to handle the case where the data is <code>null</code>.</p>\r\n */\r\nDefaultListItemRenderer.prototype.commitData = function() {\r\n    if(this._data) {\r\n        this.label = this.itemToLabel(this._data);\r\n    }\r\n    this.dataInvalid = false;\r\n};\r\n\r\n/**\r\n * Using <code>labelField</code> and <code>labelFunction</code>,\r\n * generates a label from the item.\r\n *\r\n * <p>All of the label fields and functions, ordered by priority:</p>\r\n * <ol>\r\n *     <li><code>labelFunction</code></li>\r\n *     <li><code>labelField</code></li>\r\n * </ol>\r\n *\r\n * @param item the item that gets converted to a label\r\n */\r\nDefaultListItemRenderer.prototype.itemToLabel = function(item) {\r\n\tif (this.labelFunction) {\r\n\t\treturn this.labelFunction(item).toString();\r\n\t}\r\n\telse if (this.labelField && item && item.hasOwnProperty(this.labelField)) {\r\n\t\treturn item[this.labelField].toString();\r\n\t}\r\n\telse if(item) {\r\n\t\treturn item.toString();\r\n\t}\r\n\treturn '';\r\n};\r\n\r\n/**\r\n * Data\r\n *\r\n * @name GOWN.DefaultListItemRenderer#data\r\n */\r\nObject.defineProperty(DefaultListItemRenderer.prototype, 'data', {\r\n    set: function(data) {\r\n        this._data = data;\r\n        this.dataInvalid = true;\r\n    },\r\n    get: function() {\r\n        return this._data;\r\n    }\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/renderers/DefaultListItemRenderer.js\n// module id = 19\n// module chunks = 0","var EventEmitter = require('eventemitter3');\r\n\r\n/**\r\n * Used to handle data manipulation (emit events when data changes, so for\r\n *  example a List showing it can be updated and the user does not need to\r\n *  call a special update function every time he adds/removes data from the\r\n *  ListCollection.\r\n * Use the ListCollection functions to manipulate the data-array OR modify it\r\n * using the default array-functions and dispatch the CHANGED-Event yourself.\r\n *\r\n * @class ListCollection\r\n * @extends EventEmitter\r\n * @memberof GOWN\r\n * @constructor\r\n * @param [data] The data source {Array}\r\n */\r\nfunction ListCollection(data) {\r\n    EventEmitter.call(this);\r\n\r\n    if (!data) {\r\n        data = [];\r\n    }\r\n    this.data = data;\r\n}\r\n\r\nListCollection.prototype = Object.create( EventEmitter.prototype );\r\nListCollection.prototype.constructor = ListCollection;\r\nmodule.exports = ListCollection;\r\n\r\n/**\r\n * Dispatched when the list data gets changed.\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nListCollection.CHANGED = 'changed';\r\n\r\n/**\r\n * Dispatched when the list gets cleared.\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nListCollection.RESET = 'reset';\r\n\r\n/**\r\n * Dispatched when a list item gets removed from the list.\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nListCollection.REMOVE_ITEM = 'removeItem';\r\n\r\n/**\r\n * Dispatched when a list item gets replaced.\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nListCollection.REPLACE_ITEM = 'replaceItem';\r\n\r\n/**\r\n * Dispatched when an item gets added to the list.\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nListCollection.ADD_ITEM = 'addItem';\r\n\r\n/**\r\n * The data source for this collection. Has to be an array.\r\n *\r\n * @name GOWN.ListCollection#data\r\n * @type Array\r\n */\r\nObject.defineProperty(ListCollection.prototype, 'data', {\r\n    set: function(data) {\r\n        this._data = data;\r\n        this.emit(ListCollection.CHANGED);\r\n    },\r\n    get: function() {\r\n        return this._data;\r\n    }\r\n});\r\n\r\n/**\r\n * The length of the list\r\n *\r\n * @name GOWN.ListCollection#length\r\n * @type Number\r\n * @readonly\r\n */\r\nObject.defineProperty(ListCollection.prototype, 'length', {\r\n    get: function() {\r\n        if (!this.data) {\r\n            return 0;\r\n        }\r\n        return this._data.length;\r\n    }\r\n});\r\n\r\n/**\r\n * Get an item at a specific index\r\n *\r\n * @param index The index to get the item from {Number}\r\n * @returns {Object} The item at the specific index\r\n */\r\nListCollection.prototype.getItemAt = function(index) {\r\n    return this._data[index];\r\n};\r\n\r\n/**\r\n * Get the index of a list item\r\n *\r\n * @param item The list item {Object}\r\n * @returns {Number} The item index\r\n */\r\nListCollection.prototype.getItemIndex = function(item) {\r\n    return this._data.indexOf(item);\r\n};\r\n\r\n/**\r\n * Add a new item between index and index+1\r\n *\r\n * @param item The new item {Object}\r\n * @param index The index where the item gets inserted {Number}\r\n */\r\nListCollection.prototype.addItemAt = function(item, index) {\r\n    this._data.splice(index, 0, item);\r\n    this.emit(ListCollection.CHANGE, item);\r\n    this.emit(ListCollection.ADD_ITEM, item, index);\r\n};\r\n\r\n/**\r\n * Removes the item at the specific index from the collection and\r\n * returns it.\r\n *\r\n * @param index The item index {Number}\r\n * @returns {Object}\r\n */\r\nListCollection.prototype.removeItemAt = function (index) {\r\n    var item = this._data.splice(index, 1);\r\n    this.emit(ListCollection.CHANGE, item);\r\n    this.emit(ListCollection.REMOVE_ITEM, item, index);\r\n    return item;\r\n};\r\n\r\n/**\r\n * Removes an item from the list\r\n *\r\n * @param item The item to remove {Object}\r\n */\r\nListCollection.prototype.removeItem = function (item) {\r\n    var index = this.getItemIndex(item);\r\n    if (index >= 0) {\r\n\t\tthis.removeItemAt(index);\r\n\t}\r\n};\r\n\r\n/**\r\n * Removes all items from the list\r\n *\r\n * @param item\r\n */\r\nListCollection.prototype.removeAll = function (item) {\r\n    if (this._data.length === 0) {\r\n        return;\r\n    }\r\n    this._data.length = 0;\r\n    this.emit(ListCollection.CHANGE, item);\r\n    this.emit(ListCollection.RESET);\r\n};\r\n\r\n/**\r\n * Set an item at a specific index\r\n *\r\n * @param item The item that gets added {Object}\r\n * @param index The index where the item gets set {Number}\r\n */\r\nListCollection.prototype.setItemAt = function (item, index) {\r\n    this._data[index] = item;\r\n    this.emit(ListCollection.CHANGE, item);\r\n    this.emit(ListCollection.REPLACE_ITEM, index, item);\r\n};\r\n\r\n/**\r\n * Push an item on the list at the last position\r\n *\r\n * @param item The item to push {Object}\r\n */\r\nListCollection.prototype.push = function (item) {\r\n    this._data.push(item);\r\n    this.emit(ListCollection.CHANGE, item);\r\n    this.emit(ListCollection.ADD_ITEM, item, this._data.length-1);\r\n};\r\n\r\n/**\r\n * Pop the last item from the last\r\n */\r\nListCollection.prototype.pop = function () {\r\n    var item = this._data.pop();\r\n    this.emit(ListCollection.CHANGE, item);\r\n    this.emit(ListCollection.REMOVE_ITEM, item, this._data.length);\r\n};\r\n\r\n/**\r\n * Add an item to the front of the list\r\n *\r\n * @param item The item to add {Object}\r\n */\r\nListCollection.prototype.unshift = function (item) {\r\n    this.addItemAt(item, 0);\r\n};\r\n\r\n/**\r\n * Remove the item at the front of the list\r\n */\r\nListCollection.prototype.shift = function () {\r\n    this.removeItemAt(0);\r\n};\r\n\r\n/**\r\n * Checks if an item is in the list\r\n *\r\n * @param item The item to check {Object}\r\n * @returns {boolean} True if the item is in the list, otherwise false\r\n */\r\nListCollection.prototype.contains = function (item) {\r\n    return this.getItemIndex(item) >= 0;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/data/ListCollection.js\n// module id = 20\n// module chunks = 0","var ScaleContainer = require('../utils/ScaleContainer');\r\nvar ThemeFont = require('./ThemeFont');\r\nvar EventEmitter = require('eventemitter3');\r\n\r\n/**\r\n * Basic theming/skinning.\r\n *\r\n * @class Theme\r\n * @memberof GOWN\r\n * @constructor\r\n * @param [global=true] Set theme as the global GOWN.theme\r\n */\r\nfunction Theme(global) {\r\n    EventEmitter.call(this);\r\n\r\n    /**\r\n     * At its core a theme is just a dict that holds a collection of skins.\r\n     * Every skin is a function that returns a renderable item (e.g. a texture)\r\n     *\r\n     * @private\r\n     * @type Object\r\n     */\r\n    this._skins = {};\r\n\r\n    if (this.textStyle) {\r\n        this.textStyle.clone();\r\n    } else {\r\n        /**\r\n         * The default font for all labels (e.g. button label)\r\n         *\r\n         * @type GOWN.ThemeFont\r\n         */\r\n        this.textStyle = new ThemeFont();\r\n    }\r\n\r\n    if (global === true || global === undefined) {\r\n        GOWN.theme = this;\r\n    }\r\n\r\n    /**\r\n     * The cache for the theme textures\r\n     *\r\n     * @type PIXI.Texture[]\r\n     */\r\n    this.textureCache = null;\r\n\r\n    /**\r\n     * Use an own skin for scroll/slider track (uses the default button skin otherwise)\r\n     *\r\n     * @type bool\r\n     * @default true\r\n     */\r\n    this.thumbSkin = true;\r\n\r\n    /**\r\n     * Desktop themes have a hover skin if the mouse moves over the button\r\n     *\r\n     * @type bool\r\n     * @default true\r\n     */\r\n    this.hoverSkin = true;\r\n}\r\n\r\nTheme.prototype = Object.create( EventEmitter.prototype );\r\nTheme.prototype.constructor = Theme;\r\nmodule.exports = Theme;\r\n\r\n/**\r\n * Dispatched when a skin has changed\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nTheme.SKIN_CHANGED = 'skin_changed';\r\n\r\n/**\r\n * Dispatched when a theme texture has loaded\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nTheme.LOADED = 'loaded';\r\n\r\n/**\r\n * Dispatched when a theme texture has been loaded and all controls have an assigned skin\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nTheme.COMPLETE = 'complete';\r\n\r\n/**\r\n * Set the skin for a UI component\r\n *\r\n * @param comp UI component that we want to skin, e.g. \"button\" {String}\r\n * @param id Id for the skin (e.g. state when the skinning function will be applied {String}\r\n * @param skin skin-function that will executed once the component gets updated {function}\r\n */\r\nTheme.prototype.setSkin = function(comp, id, skin) {\r\n    this._skins[comp] = this._skins[comp] || {};\r\n    this._skins[comp][id] = skin;\r\n    this.emit(Theme.SKIN_CHANGED, comp, this);\r\n};\r\n\r\n/**\r\n * Set up the asset loader and load files\r\n *\r\n * @param jsonPath The path to the json file {String}\r\n */\r\nTheme.prototype.addImage = function(jsonPath) {\r\n    this._jsonPath = jsonPath;\r\n    GOWN.loader.add(jsonPath)\r\n        .once('complete', this.loadComplete.bind(this));\r\n};\r\n\r\n/**\r\n * Executed when the image has been loaded.\r\n * Sets cache and emits events.\r\n *\r\n * @see addImage\r\n * @see resource-loader https://github.com/englercj/resource-loader\r\n *\r\n * @param loader The loader {Loader}\r\n * @param resources The loaded resources {Object}\r\n */\r\nTheme.prototype.loadComplete = function(loader, resources) {\r\n    this.setCache(resources);\r\n    this.emit(Theme.LOADED, this);\r\n    this.applyTheme();\r\n};\r\n\r\n/**\r\n * Set the texture cache (normally called when loading is complete)\r\n *\r\n * @param resources The loaded resources {Object}\r\n */\r\nTheme.prototype.setCache = function(resources) {\r\n    this.textureCache = resources[this._jsonPath].textures;\r\n};\r\n\r\n/**\r\n * Apply the theme to the controls\r\n * (normally executed only once after the texture has been loaded)\r\n */\r\nTheme.prototype.applyTheme = function() {\r\n    this.emit(Theme.COMPLETE, this);\r\n};\r\n\r\n/**\r\n * Create a new Scalable Container\r\n *\r\n * @param name Id defined in the asset loader {String}\r\n * @param grid Grid defining the inner square of the scalable container {PIXI.Rectangle}\r\n * @param [middleWidth] The alternative width to crop the center piece\r\n * (only needed if we want to scale the image smaller than the original) {Number}\r\n * @param [centerHeight] The alternative height to crop the center piece\r\n * (only needed if we want to scale the image smaller than the original) {Number}\r\n * @return {Function}\r\n */\r\nTheme.prototype.getScaleContainer = function(name, grid, middleWidth, centerHeight) {\r\n    var scope = this;\r\n    return function() {\r\n        var texture = scope.textureCache[name];\r\n        if(!texture) {\r\n            throw new Error('The frameId \"' + name + '\" does not exist ' +\r\n            'in the texture cache');\r\n        }\r\n        return new ScaleContainer(texture, grid, middleWidth, centerHeight);\r\n    };\r\n};\r\n\r\n/**\r\n * Create a new Sprite from an image name\r\n *\r\n * @param name Id defined in the asset loader {String}\r\n * @returns {function}\r\n */\r\nTheme.prototype.getImage = function(name) {\r\n    var scope = this;\r\n    return function() {\r\n        if (scope.textureCache && name in scope.textureCache) {\r\n            return new PIXI.Sprite(scope.textureCache[name]);\r\n        } else {\r\n            // not found - try to load the image.\r\n            return new PIXI.Sprite(PIXI.Texture.fromImage(name));\r\n        }\r\n    };\r\n};\r\n\r\n/**\r\n * Get a skin by a component name and state (or type)\r\n *\r\n * @param comp Name of the component (e.g. button) {String}\r\n * @param state State or type of the skin (e.g. \"up\") {String}\r\n * @returns {PIXI.DisplayObject}\r\n */\r\nTheme.prototype.getSkin = function(comp, state) {\r\n    if (this._skins[comp] && this._skins[comp][state]) {\r\n        return this._skins[comp][state]();\r\n    }\r\n    return null;\r\n};\r\n\r\n/**\r\n * Shortcut to remove the theme from the global context\r\n */\r\nTheme.removeTheme = function() {\r\n    GOWN.theme = undefined;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/skin/Theme.js\n// module id = 21\n// module chunks = 0","var OPTIONS = ['fontSize', 'fontFamily', '_fontSize', '_fontFamily',\r\n               'wordWrap', 'wordWrapWidth', 'lineHeight',\r\n               'fill', 'align', 'stroke', 'strokeThickness',\r\n               'dropShadow', 'dropShadowColor', 'dropShadowAngle',\r\n               'dropShadowDistance', 'padding', 'textBaseline',\r\n               'lineJoin', 'miterLimit'];\r\n\r\n/**\r\n * Font theme\r\n *\r\n * @class ThemeFont\r\n * @memberof GOWN\r\n * @constructor\r\n * @param data The font style object {Object}\r\n */\r\nfunction ThemeFont(data) {\r\n    for(var key in data) {\r\n        if(OPTIONS.indexOf(key) !== -1) {\r\n            this[key] = data[key];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The font fill color\r\n     *\r\n     * @type String\r\n     * @default '#000'\r\n     */\r\n    this.fill = this.fill || '#000';\r\n\r\n    /**\r\n     * The font family\r\n     *\r\n     * @private\r\n     * @type String\r\n     * @default 'Arial'\r\n     */\r\n    this._fontFamily = this._fontFamily || 'Arial';\r\n\r\n    /**\r\n     * The font size\r\n     *\r\n     * @private\r\n     * @type Number\r\n     * @default 12\r\n     */\r\n    this._fontSize = this._fontSize || 12;\r\n\r\n    /**\r\n     * @member GOWN.ThemeFont#wordWrap\r\n     */\r\n\r\n    /**\r\n     * @member GOWN.ThemeFont#wordWrapWidth\r\n     */\r\n\r\n    /**\r\n     * @member GOWN.ThemeFont#lineHeight\r\n     */\r\n\r\n    /**\r\n     * @member GOWN.ThemeFont#align\r\n     */\r\n\r\n    /**\r\n     * @member GOWN.ThemeFont#stroke\r\n     */\r\n\r\n    /**\r\n     * @member GOWN.ThemeFont#strokeThickness\r\n     */\r\n\r\n    /**\r\n     * @member GOWN.ThemeFont#dropShadow\r\n     */\r\n\r\n    /**\r\n     * @member GOWN.ThemeFont#dropShadowColor\r\n     */\r\n\r\n    /**\r\n     * @member GOWN.ThemeFont#dropShadowAngle\r\n     */\r\n\r\n    /**\r\n     * @member GOWN.ThemeFont#dropShadowDistance\r\n     */\r\n\r\n    /**\r\n     * @member GOWN.ThemeFont#textBaseline\r\n     */\r\n\r\n    /**\r\n     * @member GOWN.ThemeFont#lineJoin\r\n     */\r\n\r\n    /**\r\n     * @member GOWN.ThemeFont#miterLimit\r\n     */\r\n}\r\n\r\nmodule.exports = ThemeFont;\r\n\r\n/**\r\n * Clone the ThemeFont instance\r\n *\r\n * @return {GOWN.ThemeFont} The cloned font theme\r\n */\r\nThemeFont.prototype.clone = function() {\r\n    var re = new ThemeFont();\r\n    for(var key in this) {\r\n        if(OPTIONS.indexOf(key) !== -1) {\r\n            re[key] = this[key];\r\n        }\r\n    }\r\n    re._updateFont();\r\n    return re;\r\n};\r\n\r\n/**\r\n * Update the font string\r\n *\r\n * @private\r\n */\r\nThemeFont.prototype._updateFont = function() {\r\n    this._font = this._fontSize + 'px ' + this._fontFamily;\r\n};\r\n\r\n/**\r\n * Instead of setting font using fontFamily and fontSize is encouraged\r\n *\r\n * @name GOWN.ThemeFont#font\r\n * @type String\r\n * @deprecated\r\n */\r\nObject.defineProperty(ThemeFont.prototype, 'font', {\r\n    get: function() {\r\n        return this._font;\r\n    }\r\n});\r\n\r\n/**\r\n * The font size\r\n *\r\n * @name GOWN.ThemeFont#fontSize\r\n * @type Number\r\n * @default 12\r\n */\r\nObject.defineProperty(ThemeFont.prototype, 'fontSize', {\r\n    get: function() {\r\n        return this._fontSize;\r\n    },\r\n    set: function(value) {\r\n        this._fontSize = value;\r\n        this._updateFont();\r\n    }\r\n});\r\n\r\n/**\r\n * The font family\r\n *\r\n * @name GOWN.ThemeFont#fontFamily\r\n * @type String\r\n * @default 'Arial'\r\n */\r\nObject.defineProperty(ThemeFont.prototype, 'fontFamily', {\r\n    get: function() {\r\n        return this._fontFamily;\r\n    },\r\n    set: function(value) {\r\n        this._fontFamily = value;\r\n        this._updateFont();\r\n    }\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/skin/ThemeFont.js\n// module id = 22\n// module chunks = 0","/**\r\n * Wrapper for DOM Text Input.\r\n *\r\n * Based on PIXI.Input InputObject by Sebastian Nette,\r\n * see https://github.com/SebastianNette/PIXI.Input\r\n *\r\n * @class InputWrapper\r\n * @memberof GOWN\r\n * @static\r\n */\r\nfunction InputWrapper() {\r\n}\r\n\r\nmodule.exports = InputWrapper;\r\n\r\n/**\r\n * DOM input field.\r\n * We use one input field for all InputControls\r\n *\r\n * @name GOWN.InputWrapper.hiddenInput\r\n * @type HTMLInputElement\r\n * @static\r\n */\r\nInputWrapper.hiddenInput = null;\r\n\r\n/**\r\n * Create a unique input field.\r\n *\r\n * @returns {HTMLInputElement} The input field\r\n */\r\nInputWrapper.createInput = function() {\r\n    if (!InputWrapper.hiddenInput) {\r\n        var input = document.createElement('input');\r\n        input.type = 'text';\r\n        input.tabindex = -1;\r\n        input.style.position = 'fixed';\r\n        input.style.opacity = 0;\r\n        input.style.pointerEvents = 'none';\r\n        input.style.left = '0px';\r\n        input.style.bottom = '0px';\r\n        input.style.left = '-100px';\r\n        input.style.top = '-100px';\r\n        input.style.zIndex = 10;\r\n\r\n        // add blur handler\r\n        input.addEventListener('blur', function() {\r\n            if (GOWN.InputControl.currentInput) {\r\n                GOWN.InputControl.currentInput.onMouseUpOutside();\r\n            }\r\n        }, false);\r\n\r\n        // on key up\r\n        input.addEventListener('keyup', function() {\r\n            if (GOWN.InputControl.currentInput) {\r\n                if (GOWN.InputControl.currentInput.hasFocus) {\r\n                    GOWN.InputControl.currentInput.onInputChanged();\r\n                }\r\n            }\r\n        });\r\n\r\n        document.body.appendChild(input);\r\n\r\n        InputWrapper.hiddenInput = input;\r\n    }\r\n    return InputWrapper.hiddenInput;\r\n};\r\n\r\n/**\r\n * The key to get the text ('value' for default input field)\r\n *\r\n * @static\r\n * @type {String}\r\n * @private\r\n */\r\nInputWrapper.textProp = 'value';\r\n\r\n/**\r\n * Focus the text input\r\n *\r\n * @function GOWN.InputWrapper.focus\r\n */\r\nInputWrapper.focus = function() {\r\n    if (InputWrapper.hiddenInput) {\r\n        InputWrapper.hiddenInput.focus();\r\n    }\r\n};\r\n\r\n/**\r\n * Blur the text input\r\n *\r\n * @function GOWN.InputWrapper.blur\r\n */\r\nInputWrapper.blur = function() {\r\n    if (InputWrapper.hiddenInput) {\r\n        InputWrapper.hiddenInput.blur();\r\n    }\r\n};\r\n\r\n/**\r\n * Set the new selection\r\n *\r\n * @function GOWN.InputWrapper.setSelection\r\n * @param start First position {Number}\r\n * @param end Last position {Number}\r\n */\r\nInputWrapper.setSelection = function(start, end) {\r\n    if (InputWrapper.hiddenInput) {\r\n        if(start < end) {\r\n            InputWrapper.hiddenInput.selectionStart = start;\r\n            InputWrapper.hiddenInput.selectionEnd = end;\r\n        } else {\r\n            InputWrapper.hiddenInput.selectionStart = end;\r\n            InputWrapper.hiddenInput.selectionEnd = start;\r\n        }\r\n    } else {\r\n        InputWrapper._selection = [start, end];\r\n    }\r\n};\r\n\r\n/**\r\n * Get the start and end of the current selection\r\n *\r\n * @function GOWN.InputWrapper.getSelection\r\n * @returns {Number[]} The start and end of the current selection\r\n */\r\nInputWrapper.getSelection = function() {\r\n    if (InputWrapper.hiddenInput) {\r\n        return [\r\n            InputWrapper.hiddenInput.selectionStart,\r\n            InputWrapper.hiddenInput.selectionEnd\r\n        ];\r\n    } else {\r\n        return InputWrapper._selection;\r\n    }\r\n};\r\n\r\n/**\r\n * Set the cursor position of the hidden input\r\n *\r\n * @function GOWN.InputWrapper.setCursorPos\r\n */\r\nInputWrapper.setCursorPos = function (pos) {\r\n    if (InputWrapper.hiddenInput) {\r\n        var elem = InputWrapper.hiddenInput;\r\n        if(elem.createTextRange) {\r\n            var range = elem.createTextRange();\r\n            range.move('character', pos);\r\n            range.select();\r\n        }\r\n        else {\r\n            if(elem.selectionStart) {\r\n                elem.focus();\r\n                elem.setSelectionRange(pos, pos);\r\n            }\r\n            else\r\n                elem.focus();\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Get the text value from the hidden input\r\n *\r\n * @function GOWN.InputWrapper.getText\r\n * @returns {String} The text value\r\n */\r\nInputWrapper.getText = function() {\r\n    if (InputWrapper.hiddenInput) {\r\n        var textProp = InputWrapper.textProp;\r\n        var txt = InputWrapper.hiddenInput[textProp];\r\n        return txt.replace(/\\r/g, '');\r\n    } else {\r\n        return InputWrapper._text;\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * Set the text value of the hidden input\r\n *\r\n * @function GOWN.InputWrapper.setText\r\n * @param {String} text The text to set {String}\r\n */\r\nInputWrapper.setText = function(text) {\r\n    if (InputWrapper.hiddenInput) {\r\n        var textProp = InputWrapper.textProp;\r\n        InputWrapper.hiddenInput[textProp] = text;\r\n    } else {\r\n        InputWrapper._text = text;\r\n    }\r\n};\r\n\r\n/**\r\n * Set the maximum length.\r\n * Setting it to 0 will allow unlimited text input\r\n *\r\n * @function GOWN.InputWrapper.setMaxLength\r\n * @param length The maximum length {Number}\r\n */\r\nInputWrapper.setMaxLength = function(length) {\r\n    if (InputWrapper.hiddenInput) {\r\n        if (!length || length < 0) {\r\n            InputWrapper.hiddenInput.removeAttribute('maxlength');\r\n        } else {\r\n            InputWrapper.hiddenInput.setAttribute('maxlength', length);\r\n        }\r\n    } else {\r\n        InputWrapper._maxLength = length;\r\n    }\r\n};\r\n\r\n/**\r\n * Set the input type of the hidden input\r\n *\r\n * @function GOWN.InputWrapper.setType\r\n * @param type The new type for the hidden input {String}\r\n */\r\nInputWrapper.setType = function(type) {\r\n    if (InputWrapper.hiddenInput) {\r\n        InputWrapper.hiddenInput.type = type;\r\n    } else {\r\n        InputWrapper._type = type;\r\n    }\r\n};\r\n\r\n/**\r\n * Get the input type of the hidden input\r\n *\r\n * @function GOWN.InputWrapper.getType\r\n * @returns {String} The input type\r\n */\r\nInputWrapper.getType = function() {\r\n    if (InputWrapper.hiddenInput) {\r\n        return InputWrapper.hiddenInput.type;\r\n    } else {\r\n        return InputWrapper._type;\r\n    }\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/InputWrapper.js\n// module id = 23\n// module chunks = 0","/**\r\n * Scale 9 Container.\r\n * e.g. useful for scalable buttons.\r\n *\r\n * @class ScaleContainer\r\n * @extends PIXI.Container\r\n * @memberof GOWN\r\n * @constructor\r\n * @param texture The PIXI texture {PIXI.Texture}\r\n * @param rect The rectangle with position and dimensions of the center piece.\r\n * Will be used to calculate positions of all other pieces {PIXI.Rectangle}\r\n * @param [middleWidth] The alternative width to crop the center piece\r\n * (only needed if we want to scale the image smaller than the original) {Number}\r\n * @param [centerHeight] The alternative height to crop the center piece\r\n * (only needed if we want to scale the image smaller than the original) {Number}\r\n */\r\nfunction ScaleContainer(texture, rect, middleWidth, centerHeight) {\r\n    PIXI.Container.call( this );\r\n\r\n    /**\r\n     * The rectangle with position and dimensions of the center piece.\r\n     * Will be used to calculate positions of all other pieces.\r\n     *\r\n     * @type PIXI.Rectangle\r\n     */\r\n    this.rect = rect;\r\n\r\n    /**\r\n     * The base texture of the scale container\r\n     *\r\n     * @type PIXI.BaseTexture\r\n     */\r\n    this.baseTexture = texture.baseTexture;\r\n\r\n    /**\r\n     * The frame of the scale container\r\n     *\r\n     * @type PIXI.Rectangle\r\n     */\r\n    this.frame = texture.frame;\r\n\r\n    /**\r\n     * The width of the scale container\r\n     *\r\n     * @private\r\n     * @type Number\r\n     */\r\n    this._width = this.frame.width;\r\n\r\n    /**\r\n     * The height of the scale container\r\n     *\r\n     * @private\r\n     * @type Number\r\n     */\r\n    this._height = this.frame.height;\r\n\r\n    // left / middle / right width\r\n    var lw = rect.x;\r\n    var mw = rect.width;\r\n    var rw = this.frame.width - (mw + lw);\r\n\r\n    // top / center / bottom height\r\n    var th = rect.y;\r\n    var ch = rect.height;\r\n    var bh = this.frame.height - (ch + th);\r\n\r\n    middleWidth = middleWidth || mw;\r\n    centerHeight = centerHeight || ch;\r\n\r\n    /**\r\n     * Calculated min. width based on tile sizes in pixel without scaling\r\n     *\r\n     * @type Number\r\n     */\r\n    this.minWidth = lw + rw;\r\n\r\n    /**\r\n     * Calculated min. height based on tile sizes in pixel without scaling\r\n     *\r\n     * @type Number\r\n     */\r\n    this.minHeight = th + bh;\r\n\r\n    if (lw > 0 && th > 0) {\r\n        /**\r\n         * The top left sprite\r\n         *\r\n         * @type {PIXI.Sprite}\r\n         */\r\n        this.tl = this._getTexture(0, 0, lw, th);\r\n        this.addChild(this.tl);\r\n    }\r\n\r\n    if (mw > 0 && th > 0) {\r\n        /**\r\n         * The top middle sprite\r\n         *\r\n         * @type {PIXI.Sprite}\r\n         */\r\n        this.tm = this._getTexture(lw, 0, middleWidth, th);\r\n        this.addChild(this.tm);\r\n        this.tm.x = lw;\r\n    }\r\n\r\n    if (rw > 0 && th > 0) {\r\n        /**\r\n         * The top right sprite\r\n         *\r\n         * @type {PIXI.Sprite}\r\n         */\r\n        this.tr = this._getTexture(lw + mw, 0, rw, th);\r\n        this.addChild(this.tr);\r\n    }\r\n\r\n    if (lw > 0 && ch > 0) {\r\n        /**\r\n         * The center left sprite\r\n         *\r\n         * @type {PIXI.Sprite}\r\n         */\r\n        this.cl = this._getTexture(0, th, lw, centerHeight);\r\n        this.addChild(this.cl);\r\n        this.cl.y = th;\r\n    }\r\n\r\n    if (mw > 0 && ch > 0) {\r\n        /**\r\n         * The center middle sprite\r\n         *\r\n         * @type {PIXI.Sprite}\r\n         */\r\n        this.cm = this._getTexture(lw, th, middleWidth, centerHeight);\r\n        this.addChild(this.cm);\r\n        this.cm.y = th;\r\n        this.cm.x = lw;\r\n    }\r\n\r\n    if (rw > 0 && ch > 0) {\r\n        /**\r\n         * The center right sprite\r\n         *\r\n         * @type {PIXI.Sprite}\r\n         */\r\n        this.cr = this._getTexture(lw + mw, th, rw, centerHeight);\r\n        this.addChild(this.cr);\r\n        this.cr.y = th;\r\n    }\r\n\r\n    if (lw > 0 && bh > 0) {\r\n        /**\r\n         * The bottom left sprite\r\n         *\r\n         * @type {PIXI.Sprite}\r\n         */\r\n        this.bl = this._getTexture(0, th + ch, lw, bh);\r\n        this.addChild(this.bl);\r\n    }\r\n\r\n    if (mw > 0 && bh > 0) {\r\n        /**\r\n         * The bottom middle sprite\r\n         *\r\n         * @type {PIXI.Sprite}\r\n         */\r\n        this.bm = this._getTexture(lw, th + ch, middleWidth, bh);\r\n        this.addChild(this.bm);\r\n        this.bm.x = lw;\r\n    }\r\n\r\n    if (rw > 0 && bh > 0) {\r\n        /**\r\n         * The bottom right sprite\r\n         *\r\n         * @type {PIXI.Sprite}\r\n         */\r\n        this.br = this._getTexture(lw + mw, th + ch, rw, bh);\r\n        this.addChild(this.br);\r\n    }\r\n}\r\n\r\nScaleContainer.prototype = Object.create( PIXI.Container.prototype );\r\nScaleContainer.prototype.constructor = ScaleContainer;\r\nmodule.exports = ScaleContainer;\r\n\r\n/**\r\n * Set the scaling width and height\r\n *\r\n * @private\r\n */\r\nScaleContainer.prototype._updateScales = function() {\r\n    this._positionTilable();\r\n\r\n    var scaleOriginals = this.scaleOriginals = {};\r\n\r\n    var scaleOriginal = function(name, elem) {\r\n        if (elem && elem.width && elem.height) {\r\n            scaleOriginals[name] = {\r\n                width: elem.width,\r\n                height: elem.height\r\n            };\r\n        }\r\n    };\r\n\r\n    scaleOriginal('tl', this.tl);\r\n    scaleOriginal('tm', this.tm);\r\n    scaleOriginal('tr', this.tr);\r\n\r\n    scaleOriginal('cl', this.cl);\r\n    scaleOriginal('cm', this.cm);\r\n    scaleOriginal('cr', this.cr);\r\n\r\n    scaleOriginal('bl', this.bl);\r\n    scaleOriginal('bm', this.bm);\r\n    scaleOriginal('br', this.br);\r\n};\r\n\r\n/**\r\n * Create a new texture from a base-texture by a given dimensions\r\n *\r\n * @param x The x-position {Number}\r\n * @param y The y-position {Number}\r\n * @param w The width {Number}\r\n * @param h The height {Number}\r\n * @return {PIXI.Sprite} The sprite with the created texture\r\n * @private\r\n */\r\nScaleContainer.prototype._getTexture = function(x, y, w, h) {\r\n    var frame = new PIXI.Rectangle(this.frame.x+x, this.frame.y+y, w, h);\r\n    var t = new PIXI.Texture(this.baseTexture, frame, frame.clone(), null);\r\n    return new PIXI.Sprite(t);\r\n};\r\n\r\n/**\r\n * The width of the container. Setting this will redraw the component.\r\n *\r\n * @name GOWN.ScaleContainer#width\r\n * @type Number\r\n */\r\nObject.defineProperty(ScaleContainer.prototype, 'width', {\r\n    get: function() {\r\n        return this._width;\r\n    },\r\n    set: function(value) {\r\n        if (this._width !== value) {\r\n            if (this.minWidth && this.minWidth > 0 &&\r\n                value < this.minWidth) {\r\n                value = this.minWidth;\r\n            }\r\n            this._width = value;\r\n            this.invalid = true;\r\n            this._updateScales();\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * The height of the container. Setting this will redraw the component.\r\n *\r\n * @name GOWN.ScaleContainer#height\r\n * @type Number\r\n */\r\nObject.defineProperty(ScaleContainer.prototype, 'height', {\r\n    get: function() {\r\n        return this._height;\r\n    },\r\n    set: function(value) {\r\n        if (this._height !== value) {\r\n            if (this.minHeight && this.minHeight > 0 &&\r\n                value < this.minHeight) {\r\n                value = this.minHeight;\r\n            }\r\n            this._height = value;\r\n            this.invalid = true;\r\n            this._updateScales();\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Update before draw call (reposition textures)\r\n *\r\n * @private\r\n */\r\nScaleContainer.prototype.redraw = function() {\r\n    if (this.invalid) {\r\n        this._positionTilable();\r\n        this.invalid = false;\r\n    }\r\n};\r\n\r\n/**\r\n * Recalculate the position of the tiles (every time the width/height changes)\r\n *\r\n * @private\r\n */\r\nScaleContainer.prototype._positionTilable = function() {\r\n    // left / middle / right width\r\n    var lw = this.rect.x;\r\n    var mw = this.rect.width;\r\n    var rw = this.frame.width - (mw + lw);\r\n\r\n    // top / center / bottom height\r\n    var th = this.rect.y;\r\n    var ch = this.rect.height;\r\n    var bh = this.frame.height - (ch + th);\r\n\r\n    var rightX = this._width - rw;\r\n    var bottomY = this._height - bh;\r\n    if (this.cr) {\r\n        this.cr.x = rightX;\r\n    }\r\n    if (this.br) {\r\n        this.br.x = rightX;\r\n        this.br.y = bottomY;\r\n    }\r\n    if (this.tr) {\r\n        this.tr.x = rightX;\r\n    }\r\n\r\n    var middleWidth = this._width - (lw + rw);\r\n    var centerHeight = this._height - (th + bh);\r\n    if (this.cm) {\r\n        this.cm.width = middleWidth;\r\n        this.cm.height = centerHeight;\r\n    }\r\n    if (this.bm) {\r\n        this.bm.width = middleWidth;\r\n        this.bm.y = bottomY;\r\n    }\r\n    if (this.tm) {\r\n        this.tm.width = middleWidth;\r\n    }\r\n    if (this.cl) {\r\n        this.cl.height = centerHeight;\r\n    }\r\n    if (this.cr) {\r\n        this.cr.height = centerHeight;\r\n    }\r\n\r\n    if (this.bl) {\r\n        this.bl.y = bottomY;\r\n    }\r\n};\r\n\r\n/**\r\n * Helper function that creates a sprite that will contain a texture from\r\n * the TextureCache based on the frameId.\r\n * The frame ids are created when a Texture packer file has been loaded\r\n *\r\n * @param frameId The frame id of the texture in the cache {String}\r\n * @param rect Defines the tilable area {Rectangle}\r\n * @return {GOWN.ScaleContainer} A new scalable container (e.g. a button)\r\n * using a texture from the texture cache matching the frameId\r\n */\r\nScaleContainer.fromFrame = function(frameId, rect) {\r\n    var texture = PIXI.utils.TextureCache[frameId];\r\n    if(!texture) {\r\n        throw new Error('The frameId \"' + frameId + '\" does not exist ' +\r\n                        'in the texture cache');\r\n    }\r\n    return new ScaleContainer(texture, rect);\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/ScaleContainer.js\n// module id = 24\n// module chunks = 0","/**\r\n * Holds all information related to a Slider change event\r\n *\r\n * @class SliderData\r\n * @memberof GOWN\r\n * @constructor\r\n */\r\nfunction SliderData() {\r\n    /**\r\n     * The value of the slider data\r\n     *\r\n     * @type Number\r\n     * @default 0\r\n     */\r\n    this.value = 0;\r\n\r\n    /**\r\n     * The target Sprite that was interacted with\r\n     *\r\n     * @type PIXI.Sprite\r\n     */\r\n    this.target = null;\r\n}\r\n\r\nmodule.exports = SliderData;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/SliderData.js\n// module id = 25\n// module chunks = 0","/**\r\n * A wrapper around PIXI.tween OR CreateJS/TweenJS to do animations/tweening,\r\n * for example for a List or a Scroller.\r\n *\r\n * @see GOWN.Scroller#throwTo\r\n *\r\n * @constructor\r\n * @memberof GOWN\r\n * @param target The tween target {Object}\r\n * @param duration The tween duration {Number}\r\n * @param [easing='linear'] The easing function name {String}\r\n * @param [type] The tween library {String}\r\n */\r\n//TODO: support greensock?\r\nfunction Tween(target, duration, easing, type) {\r\n    /**\r\n     * The tween duration\r\n     *\r\n     * @type Number\r\n     */\r\n    this.duration = duration;\r\n\r\n    /**\r\n     * The easing function name\r\n     *\r\n     * @type String\r\n     * @default 'linear'\r\n     */\r\n    this.easing = easing || 'linear';\r\n\r\n    /**\r\n     * The tween library\r\n     *\r\n     * @type String\r\n     */\r\n    this.type = type || this.checkLibrary();\r\n    if (this.type === Tween.NONE) {\r\n        /**\r\n         * The tween target\r\n         *\r\n         * @private\r\n         * @type Object\r\n         */\r\n        this._target = target;\r\n    }\r\n    this.createTween(target, duration, easing);\r\n}\r\n\r\nTween.prototype = Object.create({});\r\nTween.prototype.constructor = Tween;\r\nmodule.exports = Tween;\r\n\r\n/**\r\n * The PIXI tween type\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nTween.PIXI_TWEEN = 'PIXI_TWEEN';\r\n\r\n/**\r\n * The CreateJS tween type\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nTween.CREATEJS_TWEEN = 'CREATEJS_TWEEN';\r\n\r\n/**\r\n * No tween type\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nTween.NONE = 'NONE';\r\n\r\n/**\r\n * Uppercase the first letter. Does NOT work like capitalize in python.\r\n * It just capitalizes the first letter and let the other characters untouched.\r\n *\r\n * @param string The string to capitalize {String}\r\n * @return {String} The capitalized string\r\n */\r\nfunction capitalize(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\n// TODO: possible alternative: create own easing data type\r\n// e.g. (in, out, inout and type)\r\n\r\n/**\r\n * Get the specific CreateJS easing function (e.g. 'linear' or 'quadIn')\r\n *\r\n * @param ease The name of the CreateJS easing function {String}\r\n * @return {function}\r\n */\r\nTween.CREATEJS_EASING = function(ease) {\r\n    // inQutQuad to quadInOut\r\n    if (ease.substring(0, 5) === 'inOut') {\r\n        ease = ease.slice(5).toLowerCase() + 'InOut';\r\n    }\r\n    // inQuad to quadIn\r\n    if (ease.substring(0, 2) === 'in') {\r\n        ease = ease.slice(2).toLowerCase() + 'In';\r\n    }\r\n    if (ease.substring(0, 3) === 'out') {\r\n        ease = ease.slice(3).toLowerCase() + 'Out';\r\n    }\r\n    return createjs.Ease[ease];\r\n};\r\n\r\n/**\r\n * Get the specific PIXI easing function\r\n *\r\n * @param ease The name of the PIXI easing function {String}\r\n * @return {function}\r\n */\r\nTween.PIXI_EASING = function(ease) {\r\n    if (ease.substring(ease.length-5) === 'InOut') {\r\n        ease = 'inOut' + capitalize(ease.slice(0, -5));\r\n    }\r\n    if (ease.substring(ease.length-3) === 'Out') {\r\n        ease = 'out' + capitalize(ease.slice(0, -3));\r\n    }\r\n    if (ease.substring(ease.length-2) === 'In') {\r\n        ease = 'in' + capitalize(ease.slice(0, -2));\r\n    }\r\n    return PIXI.tween.Easing[ease]();\r\n};\r\n\r\n/**\r\n * A helper function to check if a tweening-library is present\r\n *\r\n * @return {String} Name of the tweening-library\r\n */\r\nTween.prototype.checkLibrary = function() {\r\n    if (window.PIXI && PIXI.tween) {\r\n        return Tween.PIXI_TWEEN;\r\n    } else if (window.createjs && window.createjs.Tween) {\r\n        return Tween.CREATEJS_TWEEN;\r\n    } else {\r\n        return Tween.NONE;\r\n    }\r\n};\r\n\r\n/**\r\n * Create a tween\r\n *\r\n * @param target The tween target {Object}\r\n * @param duration The tween duration {Number}\r\n * @param easing The easing function name {String}\r\n */\r\nTween.prototype.createTween = function(target, duration, easing) {\r\n    if (this.type === Tween.PIXI_TWEEN) {\r\n        this._tween = PIXI.tweenManager.createTween(target);\r\n        // tweenjs stores time in ms\r\n        this._tween.time = duration;\r\n        // Easing is a function in PIXI.tween.Easing\r\n        this._tween.easing = Tween.PIXI_EASING(easing);\r\n    } else if (this.type === Tween.CREATEJS_TWEEN) {\r\n        createjs.Ticker.timingMode = createjs.Ticker.RAF_SYNCHED;\r\n        createjs.Ticker.setFPS(60);\r\n        this._tween = createjs.Tween.get(target, {loop: false});\r\n    } else {\r\n        this._tween = null;\r\n    }\r\n};\r\n\r\n/**\r\n * Start the tween\r\n *\r\n * @param data The tween data {Object}\r\n */\r\nTween.prototype.to = function(data) {\r\n    if (this.type === Tween.PIXI_TWEEN && this._tween) {\r\n        this._tween.stop();\r\n        this._tween.to(data);\r\n        this._tween.start();\r\n    } else if (this.type === Tween.CREATEJS_TWEEN && this._tween) {\r\n        this._tween.to(data, this.duration, Tween.CREATEJS_EASING(this.easing));\r\n        this._tween.play();\r\n    } else if (this.type === Tween.NONE) {\r\n        // no tween, set values directly and without wait\r\n        // maybe we'd like to do some basic linear transitioning\r\n        // in the future even if there is nothing set?\r\n        for (var key in data) {\r\n            this._target[key] = data[key];\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Stop the tween\r\n */\r\nTween.prototype.remove = function() {\r\n    if (this.type === Tween.PIXI_TWEEN && this._tween) {\r\n        PIXI.tween.TweenManager.removeTween(this._tween);\r\n    }\r\n    this._tween = null;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/Tween.js\n// module id = 26\n// module chunks = 0","/**\r\n * Utility functions\r\n *\r\n * @namespace GOWN.utils\r\n */\r\n\r\n/**\r\n * Mixin utility\r\n *\r\n * @function GOWN.utils.mixin\r\n * @param destination Destination object {Object}\r\n * @param source Source object{Object}\r\n * @return {Object}\r\n */\r\nmodule.exports = function(destination, source) {\r\n    for (var key in source) {\r\n        if (source.hasOwnProperty(key)) {\r\n            if(key === 'defineProperty') {\r\n                for (var name in source[key]) {\r\n                    var data = source[key][name];\r\n                    if (data.configurable === undefined) {\r\n                         // We change our default case, so that we can\r\n                         // overwrite properties later on\r\n                        data.configurable = true;\r\n                    }\r\n                    Object.defineProperty(destination, name, data);\r\n                }\r\n            } else {\r\n                destination[key] = source[key];\r\n            }\r\n        }\r\n    }\r\n    return destination;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/mixin.js\n// module id = 27\n// module chunks = 0","/**\r\n * Utility functions to position an element relative to its parent\r\n *\r\n * @namespace GOWN.utils.position\r\n */\r\n\r\n/**\r\n * Center an element on the parent vertically\r\n *\r\n * @memberOf GOWN.utils.position\r\n * @param elem The element {PIXI.Container}\r\n * @param [parent] The parent {PIXI.Container}\r\n */\r\nfunction centerVertical(elem, parent) {\r\n    parent = parent || elem.parent;\r\n    elem.y = Math.floor((parent.height - elem.height ) / 2);\r\n}\r\n\r\n/**\r\n * Center an element on the parent horizontally\r\n *\r\n * @memberOf GOWN.utils.position\r\n * @param elem The element {PIXI.Container}\r\n * @param [parent] The parent {PIXI.Container}\r\n */\r\nfunction centerHorizontal(elem, parent) {\r\n    parent = parent || elem.parent;\r\n    elem.x = Math.floor((parent.width - elem.width ) / 2);\r\n}\r\n\r\n/**\r\n * Center an element on the parent\r\n *\r\n * @memberOf GOWN.utils.position\r\n * @param elem The element {PIXI.Container}\r\n * @param [parent] The parent {PIXI.Container}\r\n */\r\nfunction center(elem, parent) {\r\n    centerVertical(elem, parent);\r\n    centerHorizontal(elem, parent);\r\n}\r\n\r\n/**\r\n * Put an element to the bottom of its parent\r\n *\r\n * @memberOf GOWN.utils.position\r\n * @param elem The element {PIXI.Container}\r\n * @param [parent] The parent {PIXI.Container}\r\n */\r\nfunction bottom(elem, parent) {\r\n    parent = parent || elem.parent;\r\n    elem.y = parent.height - elem.height;\r\n}\r\n\r\n/**\r\n * Put an element to the right of its parent.\r\n *\r\n * @memberOf GOWN.utils.position\r\n * @param elem The element {PIXI.Container}\r\n * @param [parent] The parent {PIXI.Container}\r\n */\r\nfunction right(elem, parent) {\r\n    parent = parent || elem.parent;\r\n    elem.x = parent.width - elem.width;\r\n}\r\n\r\nmodule.exports = {\r\n    centerHorizontal: centerHorizontal,\r\n    centerVertical: centerVertical,\r\n    center: center,\r\n    bottom: bottom,\r\n    right: right\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/position.js\n// module id = 28\n// module chunks = 0","/**\r\n *\r\n *\r\n * @namespace GOWN.utils.resizeScaling\r\n */\r\nmodule.exports = {\r\n    /**\r\n     * This should be called from inside the constructor\r\n     *\r\n     * @function GOWN.utils.resizeScaling.initResizeScaling\r\n     */\r\n    initResizeScaling: function() {\r\n        this.resizeScaling = true; // resize instead of scale\r\n\r\n        this.minWidth = 1;\r\n        this.minHeight = 1;\r\n\r\n        // update dimension flag\r\n        this._lastWidth = NaN;\r\n        this._lastHeight = NaN;\r\n    },\r\n\r\n    /**\r\n     * Update before draw call.\r\n     * Redraw control for current state from theme\r\n     *\r\n     * @function GOWN.utils.resizeScaling.redraw\r\n     */\r\n    redraw: function() {\r\n        // remove last skin after new one has been added\r\n        // (just before rendering, otherwise we would see nothing for a frame)\r\n        if (this._lastSkin) {\r\n            //this.removeChild(this._lastSkin);\r\n            this._lastSkin.alpha = 0;\r\n            this._lastSkin = null;\r\n        }\r\n        if (this.invalidState) {\r\n            this.fromSkin(this._currentState, this.changeSkin);\r\n        }\r\n        var width = this.worldWidth;\r\n        var height = this.worldHeight;\r\n        if (this._currentSkin &&\r\n            (this._lastWidth !== width || this._lastHeight !== height) &&\r\n            width > 0 && height > 0) {\r\n\r\n            this._currentSkin.width = this._lastWidth = width;\r\n            this._currentSkin.height = this._lastHeight = height;\r\n            this.updateDimensions();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * @function GOWN.utils.resizeScaling.updateDimensions\r\n     */\r\n    updateDimensions: function() {\r\n    },\r\n\r\n    /**\r\n     * @function GOWN.utils.resizeScaling.updateTransform\r\n     */\r\n    updateTransform: function() {\r\n        var wt = this.worldTransform;\r\n        var scaleX = 1;\r\n        var scaleY = 1;\r\n\r\n        if(this.redraw) {\r\n\r\n            if(this.resizeScaling) {\r\n                var pt = this.parent.worldTransform;\r\n\r\n                scaleX = Math.sqrt(Math.pow(pt.a, 2) + Math.pow(pt.b, 2));\r\n                scaleY = Math.sqrt(Math.pow(pt.c, 2) + Math.pow(pt.d, 2));\r\n            }\r\n\r\n            this.worldWidth = Math.round(Math.max(this._width * scaleX, this.minWidth));\r\n            this.worldHeight = Math.round(Math.max(this._height * scaleY, this.minHeight));\r\n            this.redraw();\r\n        }\r\n\r\n        // obmit Control.updateTransform as it calls redraw as well\r\n        if(!this.resizeScaling) {\r\n            PIXI.Container.prototype.updateTransform.call(this);\r\n        } else {\r\n            var updateTransformID = this.transform._worldID;\r\n            PIXI.DisplayObject.prototype.updateTransform.call(this);\r\n            \r\n            // Only revert scaling if something changed\r\n            if(updateTransformID != this.transform._worldID){\r\n                // revert scaling\r\n                var tx = wt.tx;\r\n                var ty = wt.ty;\r\n                scaleX = scaleX !== 0 ? 1/scaleX : 0;\r\n                scaleY = scaleY !== 0 ? 1/scaleY : 0;\r\n                wt.scale(scaleX, scaleY);\r\n                wt.tx = tx;\r\n                wt.ty = ty;\r\n            }\r\n\r\n            for (var i = 0, j = this.children.length; i < j; ++i) {\r\n                this.children[i].updateTransform();\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * @member GOWN.utils.resizeScaling.defineProperty\r\n     */\r\n    defineProperty: {\r\n        'height': {\r\n            get: function () {\r\n                return this._height\r\n            },\r\n            set: function (value) {\r\n                this._height = value\r\n                this.minHeight = Math.min(value, this.minHeight)\r\n            }\r\n        },\r\n        'width': {\r\n            get: function () {\r\n                return this._width\r\n            },\r\n            set: function (value) {\r\n                this._width = value\r\n                this.minWidth = Math.min(value, this.minWidth)\r\n            }\r\n        }\r\n    }\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/resizeScaling.js\n// module id = 29\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 30\n// module chunks = 0","var Control = require('../core/Control');\r\n\r\n/**\r\n * Entry point for your application, makes some assumptions, (e.g. that you\r\n * always want fullscreen) and shortcuts some fancy stuff like a gradient\r\n * background.\r\n *\r\n * @class Application\r\n * @extends GOWN.Control\r\n * @memberof GOWN\r\n * @constructor\r\n * @param [config] {Object} Equals the renderer config for pixi with an\r\n *  exception: the backgroundColor is an Array a of colors it will drawn as\r\n *  vertical gradient\r\n * @param [config.backgroundColor=0xffffff] {Number} Background color of the canvas\r\n * @param [screenMode=Application.SCREEN_MODE_RESIZE] {String} Screen mode of the canvas\r\n * @param [parentId] {String} DOM id of the canvas element\r\n * @param [width=800] {Number} Width of the canvas\r\n * @param [height=600] {Number} Height of the canvas\r\n * @param [renderer=PIXI.autoDetectRenderer()] {PIXI.WebGLRenderer|PIXI.CanvasRenderer} Renderer of the canvas\r\n * @param [stage=new PIXI.Container()] {PIXI.Container} Root container\r\n */\r\nfunction Application(config, screenMode, parentId, width, height, renderer, stage) {\r\n    screenMode = screenMode || Application.SCREEN_MODE_RESIZE;\r\n    var fullscreen = false;\r\n    var element = document.getElementById(parentId);\r\n    if (screenMode === Application.SCREEN_MODE_RESIZE) {\r\n        width = element.clientWidth;\r\n        height = element.clientHeight;\r\n    } else if (screenMode === Application.SCREEN_MODE_FULLSCREEN) {\r\n        width = window.innerWidth;\r\n        height = window.innerHeight;\r\n        fullscreen = true;\r\n    } else {\r\n        width = width || 800;\r\n        height = height || 600;\r\n    }\r\n\r\n    this.resizable = true;\r\n\r\n    if (!config) {\r\n        config = {\r\n            backgroundColor: 0xffffff\r\n        };\r\n    }\r\n\r\n    var _background; // to store background if it is an array because we want\r\n                     // to set the backgroundColor in config to a hex value\r\n    if (!stage || !renderer) {\r\n        stage = new PIXI.Container();\r\n        if (config.backgroundColor && config.backgroundColor instanceof Array) {\r\n            _background = config.backgroundColor;\r\n            config.backgroundColor = 0xffffff;\r\n        }\r\n        this._background = config.backgroundColor;\r\n        renderer = PIXI.autoDetectRenderer(width, height, config);\r\n        renderer.plugins.resize.element = element;\r\n        renderer.plugins.resize.fullscreen = fullscreen;\r\n        if (element && !fullscreen) {\r\n            element.appendChild(renderer.view);\r\n        } else {\r\n            document.body.appendChild(renderer.view);\r\n        }\r\n    }\r\n    /* jshint ignore:start */\r\n\r\n    /**\r\n     * Root container\r\n     *\r\n     * @private\r\n     * @type PIXI.Container\r\n     * @default new PIXI.Container()\r\n     */\r\n    this._stage = stage;\r\n\r\n    /**\r\n     * Canvas renderer\r\n     *\r\n     * @private\r\n     * @type PIXI.WebGLRenderer|PIXI.CanvasRenderer\r\n     */\r\n    this._renderer = renderer;\r\n\r\n    /* jshint ignore:end */\r\n\r\n    /**\r\n     * Width of the canvas\r\n     *\r\n     * @private\r\n     * @type Number\r\n     */\r\n    this._width = renderer.width;\r\n\r\n    /**\r\n     * Height of the canvas\r\n     *\r\n     * @private\r\n     * @type Number\r\n     */\r\n    this._height = renderer.height;\r\n\r\n    /**\r\n     * Screen mode of the canvas\r\n     *\r\n     * @private\r\n     * @type Number\r\n     */\r\n    this.screenMode = screenMode;\r\n\r\n    Control.call(this);\r\n\r\n    this.on('resize', this.onResize, this);\r\n\r\n    stage.addChild(this);\r\n\r\n    /**\r\n     * Overwrite layout before next draw call.\r\n     *\r\n     * @private\r\n     * @type bool\r\n     * @default true\r\n     */\r\n    this.layoutInvalid = true;\r\n\r\n    /**\r\n     * Set a layout to apply percentages on redraw etc.\r\n     *\r\n     * @private\r\n     * @default null\r\n     * @type GOWN.layout.Layout\r\n     */\r\n    this.layout = this.layout || null;\r\n\r\n    if (_background) {\r\n        this.background = _background;\r\n    }\r\n\r\n    this.animate();\r\n}\r\n\r\nApplication.prototype = Object.create( Control.prototype );\r\nApplication.prototype.constructor = Application;\r\nmodule.exports = Application;\r\n\r\n/**\r\n * Use fixed width/height in pixel.\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nApplication.SCREEN_MODE_FIXED = 'screenModeFixed';\r\n\r\n/**\r\n * Use window.innerWidth/innerHeight to get the whole browser page width\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nApplication.SCREEN_MODE_FULLSCREEN = 'screenModeFullscreen';\r\n\r\n/**\r\n * Use resize to parent div width/height\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nApplication.SCREEN_MODE_RESIZE = 'screenModeResize';\r\n\r\n/* jshint ignore:start */\r\n\r\n/**\r\n * Call requestAnimationFrame to render the application at max. FPS\r\n */\r\nApplication.prototype.animate = function() {\r\n    var scope = this;\r\n    var animate = function() {\r\n        if (scope._stage) {\r\n            scope._renderer.render(scope._stage);\r\n            requestAnimationFrame(animate);\r\n        }\r\n    };\r\n    requestAnimationFrame(animate);\r\n};\r\n\r\n/* jshint ignore:end */\r\n\r\n/**\r\n * Creates a gradient rect that can for example be used as a background\r\n * (uses a separate canvas to create a new Texture)\r\n * TODO: check if this works outside the browser/in cordova or cocoon\r\n *\r\n * @private\r\n */\r\nApplication.prototype._createGradientRect = function(gradient, width, height) {\r\n    var bgCanvas = document.createElement('canvas');\r\n    bgCanvas.width = width || 256;\r\n    bgCanvas.height = height || 256;\r\n    var ctx = bgCanvas.getContext('2d');\r\n    var linearGradient = ctx.createLinearGradient(0, 0, 0, bgCanvas.height);\r\n    for (var i = 0; i < gradient.length; i++) {\r\n        var color = gradient[i];\r\n        if (typeof(color) === 'number') {\r\n            color = '#' +  gradient[i].toString(16);\r\n        }\r\n        linearGradient.addColorStop(i, color);\r\n    }\r\n    ctx.fillStyle = linearGradient;\r\n    ctx.fillRect(0, 0, bgCanvas.width, bgCanvas.height);\r\n    return PIXI.Texture.fromCanvas(bgCanvas);\r\n};\r\n\r\n/**\r\n * Clean application: remove event listener, free memory\r\n * (can also remove the canvas from the DOM tree if wanted)\r\n *\r\n * @param [destroyChildren=false] {boolean} if set to true, all the children will have their destroy method called as well\r\n * @param [removeCanvas=true] {boolean} destroys the canvas and remove it from the dom tree\r\n */\r\nApplication.prototype.destroy = function(destroyChildren, removeCanvas) {\r\n    removeCanvas = removeCanvas === undefined || removeCanvas;\r\n    this._removeBackground();\r\n    PIXI.Container.prototype.destroy.call(this, destroyChildren);\r\n    if (removeCanvas) {\r\n        document.body.removeChild(this._renderer.view);\r\n    }\r\n    this._stage = null;\r\n    this._renderer = null;\r\n};\r\n\r\n/**\r\n * Redraw scene, apply layout if required\r\n */\r\nApplication.prototype.redraw = function() {\r\n    if (this.layoutInvalid && this.layout) {\r\n        this.layout.layoutContainer(this);\r\n    }\r\n    this.layoutInvalid = false;\r\n};\r\n\r\n/**\r\n * called when the browser window / the application is resized\r\n * will set the dimensions of the canvas and layout children\r\n * (if it has a layout)\r\n */\r\nApplication.prototype.onResize = function(eventData) {\r\n    this._width = eventData.data.width;\r\n    this._height = eventData.data.height;\r\n    this._renderer.resize(this._width, this._height);\r\n    if (this.bg) {\r\n        // TODO: add special layout for this and use percentWidth/Height of 100\r\n        this.bg.width = this._width;\r\n        this.bg.height = this._height;\r\n    }\r\n    this.layoutInvalid = true;\r\n};\r\n\r\n/**\r\n * Allow layouting of children\r\n *\r\n * @name GOWN.Application#layout\r\n * @type GOWN.layout.Layout\r\n */\r\nObject.defineProperty(Application.prototype, 'layout', {\r\n    get: function() {\r\n        return this._layout;\r\n    },\r\n    set: function(value) {\r\n        if (value === this._layout) {\r\n            return;\r\n        }\r\n        this._layout = value;\r\n        this.layoutInvalid = true;\r\n    }\r\n});\r\n\r\n/**\r\n * Remove background\r\n *\r\n * @private\r\n */\r\nApplication.prototype._removeBackground = function() {\r\n    if (this.bg) {\r\n        this.removeChild(this.bg);\r\n        this.bg = null;\r\n    }\r\n};\r\n\r\n/**\r\n * Set the screen mode\r\n *\r\n * @name GOWN.Application#screenMode\r\n * @type String\r\n */\r\nObject.defineProperty(Application.prototype, 'screenMode', {\r\n    get: function() {\r\n        return this._screenMode;\r\n    },\r\n    set: function(value) {\r\n        if (value === Application.SCREEN_MODE_FULLSCREEN) {\r\n            this._renderer.view.style.top = 0;\r\n            this._renderer.view.style.left = 0;\r\n            this._renderer.view.style.right = 0;\r\n            this._renderer.view.style.bottom = 0;\r\n            this._renderer.view.style.position = 'absolute';\r\n        }\r\n        this._screenMode = value;\r\n    }\r\n});\r\n\r\n/**\r\n * Set and draw background. Create a gradient by passing an array of hex color numbers.\r\n *\r\n * @name GOWN.Application#background\r\n * @type Number|Number[]\r\n */\r\nObject.defineProperty(Application.prototype, 'background', {\r\n    get: function() {\r\n        return this._background;\r\n    },\r\n    set: function(value) {\r\n        if (value === this._background) {\r\n            return;\r\n        }\r\n        this._removeBackground();\r\n        if (value instanceof Array) {\r\n            this.bg = new PIXI.Sprite(this._createGradientRect(value));\r\n            this.bg.width = this._width;\r\n            this.bg.height = this._height;\r\n            this.addChildAt(this.bg, 0);\r\n        } else {\r\n            this._renderer.backgroundColor = value;\r\n        }\r\n        this._background = value;\r\n    }\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/Application.js\n// module id = 31\n// module chunks = 0","var InputControl = require('./InputControl'),\r\n    TextInput = require('./TextInput');\r\n\r\n/**\r\n * The basic AutoComplete. Needed for input with suggestions\r\n *\r\n * @class AutoComplete\r\n * @extends GOWN.TextInput\r\n * @memberof GOWN\r\n * @constructor\r\n * @param text Default display text {String}\r\n * @param [theme] theme for auto complete {GOWN.Theme}\r\n * @param [skinName=AutoComplete.SKIN_NAME] name of the auto complete skin {String}\r\n */\r\nfunction AutoComplete(text, theme, skinName) {\r\n    this.skinName = skinName || AutoComplete.SKIN_NAME;\r\n\r\n    /**\r\n     * The valid auto complete states\r\n     *\r\n     * @private\r\n     * @type String[]\r\n     * @default AutoComplete.stateNames\r\n     */\r\n    this._validStates = this._validStates || AutoComplete.stateNames;\r\n\r\n    /**\r\n     * Display the text as an password field\r\n     *\r\n     * @private\r\n     * @type bool\r\n     * @default false\r\n     */\r\n    this._displayAsPassword = false;\r\n\r\n    /**\r\n     * Result elements (source elements filtered by the text attribute)\r\n     *\r\n     * @private\r\n     * @type String[]\r\n     * @default []\r\n     */\r\n    this.results = [];\r\n\r\n    /**\r\n     * Source elements from which the auto complete filters the elements corresponding to the current text\r\n     *\r\n     * @private\r\n     * @type String[]\r\n     * @default []\r\n     */\r\n    this.source = [];\r\n\r\n    /**\r\n     * Hovered element text\r\n     *\r\n     * @type String\r\n     * @default null\r\n     * @private\r\n     */\r\n    this.hoveredElementText = null;\r\n\r\n    TextInput.call(this, theme, skinName);\r\n\r\n    /**\r\n     * The displayed text\r\n     *\r\n     * @type String\r\n     */\r\n    this.text = text;\r\n\r\n    /**\r\n     * The minimum number of entered characters required to request\r\n     * suggestions from the AutoCompleteList.\r\n     *\r\n     * @private\r\n     * @type Number\r\n     * @default 2\r\n     */\r\n    this._minAutoCompleteLength = 2;\r\n\r\n    /**\r\n     * The maximum number of suggestions that show at one time from the AutoCompleteList.\r\n     * If 0, all suggestions will be shown.\r\n     *\r\n     * @private\r\n     * @type Number\r\n     * @default 5\r\n     */\r\n    this._limitTo = 5;\r\n}\r\n\r\nAutoComplete.prototype = Object.create(TextInput.prototype);\r\nAutoComplete.prototype.constructor = AutoComplete;\r\nmodule.exports = AutoComplete;\r\n\r\n/**\r\n * Hover state\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nAutoComplete.HOVER_CONTAINER = 'hoverContainer';\r\n\r\n/**\r\n * Click state\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nAutoComplete.CLICKED = 'clicked';\r\n\r\n/**\r\n * Names of possible states for an auto complete element\r\n *\r\n * @static\r\n * @final\r\n * @type String[]\r\n * @private\r\n */\r\nAutoComplete.stateNames = InputControl.stateNames.concat([\r\n    AutoComplete.HOVER_CONTAINER, AutoComplete.CLICKED\r\n]);\r\n\r\n/**\r\n * Create a new suggestion item\r\n *\r\n * @param text Text of the suggestion item {String}\r\n * @param width Width of the suggestion item {Number}\r\n * @param height Height of the suggestion item {Number}\r\n * @returns {PIXI.Container}\r\n * @private\r\n */\r\nAutoComplete.prototype.createSuggestionItem = function (text, width, height) {\r\n    var itemText = new PIXI.Text(text, this.theme.textStyle ? this.theme.textStyle.clone() : {\r\n            font: '20px Arial',\r\n            fill: 0x4E5769\r\n        }); // use own styles\r\n    var container = new PIXI.Container();\r\n    if (this.hoveredElementText && this.hoveredElementText === itemText.text) {\r\n        var background = new PIXI.Graphics()\r\n            .beginFill(this.theme.hover ? this.theme.hover.color : 0xDDDDDD)\r\n            .drawRect(0, 0, width, height)\r\n            .endFill();\r\n        container.addChild(background);\r\n    }\r\n\r\n    itemText.x = this.textOffset.x;\r\n    itemText.y = this.textOffset.y;\r\n\r\n    container.hitArea = new PIXI.Rectangle(0, 0, width, height);\r\n\r\n    container.interactive = true;\r\n    container.click = this.selectResultElement.bind(this, itemText.text);\r\n    container.tap = this.selectResultElement.bind(this, itemText.text);\r\n    container.mouseover = this.hoverResultElement.bind(this, itemText.text);\r\n    container.mouseout = this.removeHoverResultElement.bind(this);\r\n\r\n    container.addChild(itemText);\r\n\r\n    return container;\r\n};\r\n\r\n/**\r\n * Draw the results\r\n *\r\n * @param text Text to filter the source elements {String}\r\n */\r\nAutoComplete.prototype.drawResults = function (text) {\r\n    if (text.length < this._minAutoCompleteLength) {\r\n        this.results = [];\r\n    } else {\r\n        var lowerCaseText = text.toString().toLowerCase();\r\n        var results = this.source.filter(function (el) {\r\n            var elementText = el.text.toString().toLowerCase();\r\n            return elementText.indexOf(lowerCaseText) >= 0;\r\n        });\r\n        if (results.length === 1 && results[0].text.toString() === text.toString()) {\r\n            results = [];\r\n        }\r\n        if (this.limitTo) {\r\n            results = results.slice(0, this.limitTo);\r\n        }\r\n        this.results = results;\r\n    }\r\n\r\n    var wrapper = new PIXI.Graphics();\r\n    wrapper.beginFill(this.theme.background ? this.theme.background.color : 0xFFFFFF, 1);\r\n    wrapper.lineStyle(1, this.theme.border ? this.theme.border.color : 0xDDDDDD);\r\n    wrapper.y = 20;\r\n    wrapper.moveTo(0, 0);\r\n    wrapper.lineTo(0, this.results.length * 20);\r\n    wrapper.lineTo(260, this.results.length * 20);\r\n    wrapper.lineTo(260, 0);\r\n    wrapper.lineTo(0, 0);\r\n    wrapper.endFill();\r\n\r\n    var inner = new PIXI.Container();\r\n\r\n    for (var i = 0; i < this.results.length; i++) {\r\n        var container = this.createSuggestionItem(this.results[i].text, 260, 20);\r\n        container.y = i * 20;\r\n        inner.addChild(container);\r\n    }\r\n    wrapper.addChild(inner);\r\n\r\n    this.wrapper = wrapper;\r\n    this.addChild(this.wrapper);\r\n};\r\n\r\n/**\r\n * Close results and set the text\r\n *\r\n * @param text Display text {String}\r\n */\r\nAutoComplete.prototype.selectResultElement = function (text) {\r\n    this.toggleResults();\r\n    this.text = text;\r\n};\r\n\r\n/**\r\n * Close the results\r\n */\r\nAutoComplete.prototype.toggleResults = function () {\r\n    this.results = [];\r\n    this.removeChild(this.wrapper);\r\n};\r\n\r\n/**\r\n * Update the hover result element\r\n * @param elementText\r\n */\r\nAutoComplete.prototype.hoverResultElement = function (elementText) {\r\n    if (elementText !== this.hoveredElementText) {\r\n        //this.currentState = AutoComplete.HOVER_CONTAINER;\r\n        this.hoveredElementText = elementText;\r\n        this.redrawResult();\r\n    }\r\n};\r\n\r\n/**\r\n * Remove the hover result element\r\n */\r\nAutoComplete.prototype.removeHoverResultElement = function () {\r\n    //this.currentState = AutoComplete.CLICKED;\r\n    this.hoveredElementText = null;\r\n    this.redrawResult();\r\n};\r\n\r\n/**\r\n * Redraw the results\r\n */\r\nAutoComplete.prototype.redrawResult = function () {\r\n    this.removeChild(this.wrapper);\r\n    this.drawResults(this.text);\r\n};\r\n\r\n/**\r\n * Closes the results when the mouse is released outside\r\n *\r\n * @protected\r\n */\r\nAutoComplete.prototype.onMouseUpOutside = function () {\r\n    if (this.hasFocus && !this._mouseDown) {\r\n        this.blur();\r\n    }\r\n    this._mouseDown = false;\r\n    this.toggleResults();\r\n};\r\n\r\n/**\r\n * Set the auto complete text. Draws the auto complete results afterwards.\r\n *\r\n * @param text The text to set {String}\r\n */\r\nAutoComplete.prototype.setText = function(text) {\r\n    TextInput.prototype.setText.call(this,text);\r\n    if (this._source) {\r\n        this.toggleResults();\r\n        this.drawResults(text);\r\n    }\r\n};\r\n\r\n/**\r\n * Source elements from which the auto complete filters the elements corresponding to the current text\r\n *\r\n * @name GOWN.AutoComplete#source\r\n * @type String[]\r\n * @default []\r\n */\r\nObject.defineProperty(AutoComplete.prototype, 'source', {\r\n    get: function () {\r\n        return this._source;\r\n    },\r\n    set: function (source) {\r\n        if (this._source === source) {\r\n            return;\r\n        }\r\n        this._source = source;\r\n    }\r\n});\r\n\r\n\r\n/**\r\n * Result elements (source elements filtered by the text attribute)\r\n *\r\n * @name GOWN.AutoComplete#results\r\n * @type String[]\r\n * @default []\r\n */\r\nObject.defineProperty(AutoComplete.prototype, 'results', {\r\n    get: function () {\r\n        return this._results;\r\n    },\r\n    set: function (results) {\r\n        if (this._results === results) {\r\n            return;\r\n        }\r\n        this._results = results;\r\n    }\r\n});\r\n\r\n/**\r\n * The minimum number of entered characters required to draw suggestions.\r\n *\r\n * @name GOWN.AutoComplete#minAutoCompleteLength\r\n * @type Number\r\n * @default 2\r\n */\r\nObject.defineProperty(AutoComplete.prototype, 'minAutoCompleteLength', {\r\n    get: function () {\r\n        return this._minAutoCompleteLength;\r\n    },\r\n    set: function (minAutoCompleteLength) {\r\n        if (this._minAutoCompleteLength === minAutoCompleteLength) {\r\n            return;\r\n        }\r\n        this._minAutoCompleteLength = minAutoCompleteLength;\r\n    }\r\n});\r\n\r\n/**\r\n * The maximum number of suggestions that show at one time.\r\n * If 0, all suggestions will be shown.\r\n *\r\n * @name GOWN.AutoComplete#limitTo\r\n * @type Number\r\n * @default 5\r\n */\r\nObject.defineProperty(AutoComplete.prototype, 'limitTo', {\r\n    get: function () {\r\n        return this._limitTo;\r\n    },\r\n    set: function (limitTo) {\r\n        if (this._limitTo === limitTo) {\r\n            return;\r\n        }\r\n        this._limitTo = limitTo;\r\n    }\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/AutoComplete.js\n// module id = 32\n// module chunks = 0","var ToggleButton = require('./ToggleButton');\r\n\r\n/**\r\n * A toggle control that contains a label and a box that may be checked\r\n * or not to indicate selection.\r\n *\r\n * @class Check\r\n * @extends GOWN.ToggleButton\r\n * @memberof GOWN\r\n * @constructor\r\n * @param [theme] theme for the button {GOWN.Theme}\r\n * @param [skinName=Check.SKIN_NAME] name of the check skin {String}\r\n */\r\nfunction Check(theme, skinName) {\r\n    // TODO: use and place Label from ToggleButton\r\n    skinName = skinName || Check.SKIN_NAME;\r\n    ToggleButton.call(this, theme, skinName);\r\n}\r\n\r\nCheck.prototype = Object.create( ToggleButton.prototype );\r\nCheck.prototype.constructor = Check;\r\nmodule.exports = Check;\r\n\r\n/**\r\n * Default check skin name\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nCheck.SKIN_NAME = 'check';\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/Check.js\n// module id = 33\n// module chunks = 0","var Control = require('../core/Control');\r\nvar ToggleButton = require('./ToggleButton');\r\nvar List = require('./List');\r\nvar Point = PIXI.Point;\r\n\r\n/**\r\n * PickerList allows the user to select an option from a list\r\n *\r\n * @class PickerList\r\n * @extends GOWN.Control\r\n * @memberof GOWN\r\n * @constructor\r\n * @param [theme] theme for the picker list {GOWN.Theme}\r\n */\r\nfunction PickerList(theme) {\r\n    this.theme = theme;\r\n\r\n    Control.call(this);\r\n\r\n    // TODO: Icons for Button\r\n\r\n    /**\r\n     * A function that is expected to return a new GOWN.List\r\n     *\r\n     * @private\r\n     * @type function\r\n     * @default this._defaultListFactory\r\n     */\r\n    this._listFactory = this._listFactory || this._defaultListFactory;\r\n\r\n    /**\r\n     * A function that is expected to return a new GOWN.ToggleButton\r\n     *\r\n     * @private\r\n     * @type function\r\n     * @default this._defaultButtonFactory\r\n     */\r\n    this._buttonFactory = this._buttonFactory || this._defaultButtonFactory;\r\n\r\n    // TODO: implement PopUpManager!\r\n    /**\r\n     * TODO\r\n     *\r\n     * @type GOWN.PickerList\r\n     * @default this\r\n     */\r\n    this.popUpParent = this;\r\n\r\n    /**\r\n     * Invalidate list so that it will be redrawn next time\r\n     *\r\n     * @private\r\n     * @type bool\r\n     * @default true\r\n     */\r\n    this.invalidList = true;\r\n\r\n    /**\r\n     * Invalidate button so that it will be redrawn next time\r\n     *\r\n     * @private\r\n     * @type bool\r\n     * @default true\r\n     */\r\n    this.invalidButton = true;\r\n}\r\n\r\nPickerList.prototype = Object.create( Control.prototype );\r\nPickerList.prototype.constructor = PickerList;\r\nmodule.exports = PickerList;\r\n\r\n/**\r\n * Default picker list skin name\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nPickerList.SKIN_NAME = 'picker_list';\r\n\r\n/**\r\n * Toggle the list\r\n *\r\n * @private\r\n */\r\nPickerList.prototype._clickList = function() {\r\n    if (!this.open) {\r\n        this.openList();\r\n    } else {\r\n        this.closeList();\r\n    }\r\n};\r\n\r\n/**\r\n * Creates and adds the list sub-component and removes the old instance, if one exists.\r\n * Meant for internal use, and subclasses may override this function with a custom implementation.\r\n *\r\n * @param [theme] theme for the list {GOWN.Theme}\r\n * @private\r\n */\r\nPickerList.prototype._defaultListFactory = function(theme) {\r\n    return new List(theme);\r\n};\r\n\r\n/**\r\n * Creates and adds the button sub-component and removes the old instance, if one exists.\r\n * Meant for internal use, and subclasses may override this function with a custom implementation.\r\n *\r\n * @param [theme] theme for the list {GOWN.Theme}\r\n * @private\r\n */\r\nPickerList.prototype._defaultButtonFactory = function(theme) {\r\n    return new ToggleButton(theme);\r\n};\r\n\r\n/**\r\n * Opens the pop-up list, if it isn't already open.\r\n */\r\nPickerList.prototype.openList = function() {\r\n    if (this.popUpParent === this) {\r\n        this.list.y = this.height;\r\n    } else {\r\n        var pos = new Point(0, this.height);\r\n        pos = this.toGlobal(pos);\r\n        pos = this.popUpParent.toLocal(pos);\r\n        this.list.position = pos;\r\n    }\r\n    this.list.clippingInvalid = true;\r\n    this.popUpParent.addChild(this.list);\r\n    this.open = true;\r\n};\r\n\r\n/**\r\n * Closes the pop-up list, if it is open.\r\n */\r\nPickerList.prototype.closeList = function() {\r\n    this.popUpParent.removeChild(this.list);\r\n    this.open = false;\r\n};\r\n\r\n/**\r\n * Set item renderer factory for the GOWN.List\r\n *\r\n * @name GOWN.PickerList#itemRendererFactory\r\n * @type function\r\n */\r\nObject.defineProperty(PickerList.prototype, 'itemRendererFactory', {\r\n    set: function(itemRendererFactory) {\r\n        if (this.list) {\r\n            this.list.itemRendererFactory = itemRendererFactory;\r\n        }\r\n        this._itemRendererFactory = itemRendererFactory;\r\n    },\r\n    get: function() {\r\n        return this._itemRendererFactory;\r\n    }\r\n});\r\n\r\n/**\r\n * Set the data provider for the GOWN.List\r\n *\r\n * @name GOWN.PickerList#dataProvider\r\n * @type Array\r\n */\r\nObject.defineProperty(PickerList.prototype, 'dataProvider', {\r\n    set: function(dataProvider) {\r\n        if (this.list) {\r\n            this.list.dataProvider = dataProvider;\r\n        }\r\n        this._dataProvider = dataProvider;\r\n    },\r\n    get: function() {\r\n        return this._dataProvider;\r\n    }\r\n});\r\n\r\n/**\r\n * Set item renderer properties for the GOWN.List\r\n *\r\n * @name GOWN.List#itemRendererProperties\r\n * @type Object\r\n */\r\nObject.defineProperty(PickerList.prototype, 'itemRendererProperties', {\r\n    set: function(itemRendererProperties) {\r\n        if (this.list) {\r\n            this.list.itemRendererProperties = itemRendererProperties;\r\n        }\r\n        this._itemRendererProperties = itemRendererProperties;\r\n    },\r\n    get: function() {\r\n        return this._itemRendererProperties;\r\n    }\r\n});\r\n\r\n/**\r\n * Create the picker list button\r\n *\r\n * @private\r\n */\r\nPickerList.prototype.createButton = function() {\r\n    this.button = this._buttonFactory(this.theme);\r\n\r\n    this.button.width = this.width;\r\n    this.button.height = this.height;\r\n\r\n    this.button.on('mouseup', this._clickList, this);\r\n    this.button.on('touchend', this._clickList, this);\r\n\r\n    this.addChild(this.button);\r\n};\r\n\r\n/**\r\n * Create the picker list internal GOWN.List\r\n *\r\n * @private\r\n */\r\nPickerList.prototype.createList = function() {\r\n    this.list = this._listFactory(this.theme);\r\n    if (this.dataProvider) {\r\n        this.list._dataProvider = this.dataProvider;\r\n    }\r\n    if (this.itemRendererFactory) {\r\n        this.list.itemRendererFactory = this.itemRendererFactory;\r\n    }\r\n    if (this.itemRendererProperties) {\r\n        this.list.itemRendererProperties = this.itemRendererProperties;\r\n    }\r\n    // forward list events\r\n    this.list.on(List.CHANGE, this._listChange, this);\r\n};\r\n\r\n/**\r\n * Forward list events\r\n *\r\n * @param itemRenderer The item renderer {Array}\r\n * @param value {String}\r\n * @private\r\n */\r\nPickerList.prototype._listChange = function(itemRenderer, value) {\r\n    this.emit(List.CHANGE, itemRenderer, value);\r\n    if (this.button && value) {\r\n        this.button.label = itemRenderer.label;\r\n    }\r\n    this.closeList();\r\n};\r\n\r\n/**\r\n * Update before draw call\r\n *\r\n * @protected\r\n */\r\nPickerList.prototype.redraw = function() {\r\n    if (this.invalidButton) {\r\n        if (this.button) {\r\n            this.button.off('click', this._clickList, this);\r\n            this.button.off('tap', this._clickList, this);\r\n        }\r\n        this.createButton();\r\n        this.invalidButton = false;\r\n    }\r\n    if (this.invalidList) {\r\n        this.createList();\r\n        this.invalidList = false;\r\n    }\r\n};\r\n\r\n/**\r\n * Destroy button and list and remove button listeners\r\n */\r\nPickerList.prototype.destroy = function() {\r\n    if (this.button) {\r\n        this.button.off('click', this._clickList, this);\r\n        this.button.off('tap', this._clickList, this);\r\n    }\r\n    this.button.destroy();\r\n    if (this.list) {\r\n        this.list.destroy();\r\n    }\r\n};\r\n// TODO: setter/getter for List to get selectedItem\r\n// TODO: prompt\r\n// TODO: PopupManager (!)\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/PickerList.js\n// module id = 34\n// module chunks = 0","var ToggleButton = require('./ToggleButton');\r\n\r\n/**\r\n * A toggleable control that exists in a set that requires a single, exclusive toggled item.\r\n *\r\n * @class Radio\r\n * @extends GOWN.ToggleButton\r\n * @memberof GOWN\r\n * @constructor\r\n * @param [theme] theme for the radio button {GOWN.Theme}\r\n * @param [skinName=Radio.SKIN_NAME] name of the radio button skin {String}\r\n */\r\nfunction Radio(theme, skinName) {\r\n    skinName = skinName || Radio.SKIN_NAME;\r\n    ToggleButton.call(this, theme, skinName);\r\n}\r\n\r\nRadio.prototype = Object.create( ToggleButton.prototype );\r\nRadio.prototype.constructor = Radio;\r\nmodule.exports = Radio;\r\n\r\n/**\r\n * Default radio button skin name\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nRadio.SKIN_NAME = 'radio';\r\n\r\n/**\r\n * Set the toggle group and add this radio button to it\r\n *\r\n * @name GOWN.Radio#label\r\n * @type String\r\n */\r\nObject.defineProperty(Radio.prototype, 'toggleGroup', {\r\n    get: function() {\r\n        return this._toggleGroup;\r\n    },\r\n    set: function(toggleGroup) {\r\n        if(this._toggleGroup === toggleGroup) {\r\n            return;\r\n        }\r\n        this._toggleGroup = toggleGroup;\r\n        toggleGroup.addItem(this);\r\n    }\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/Radio.js\n// module id = 35\n// module chunks = 0","var Scroller = require('./Scroller');\r\n//var ScrollBar = require('./ScrollBar');\r\n\r\n/**\r\n * ScrollContainer (not implemented yet)\r\n *\r\n * @class ScrollContainer\r\n * @extends GOWN.Scroller\r\n * @memberof GOWN\r\n * @constructor\r\n * @param [theme] theme for the scroll container {GOWN.Theme}\r\n */\r\nfunction ScrollContainer(theme) {\r\n    Scroller.call(this, theme);\r\n}\r\n\r\nScrollContainer.prototype = Object.create( Scroller.prototype );\r\nScrollContainer.prototype.constructor = ScrollContainer;\r\nmodule.exports = ScrollContainer;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/ScrollContainer.js\n// module id = 36\n// module chunks = 0","var Scrollable = require('./Scrollable');\r\n\r\n/**\r\n * Simple slider with min. and max. value\r\n *\r\n * @class Slider\r\n * @extends GOWN.Scrollable\r\n * @memberof GOWN\r\n * @constructor\r\n * @param [theme] theme for the slider {GOWN.Theme}\r\n */\r\n// TODO: move stuff from Scrollable back here?\r\nfunction Slider(theme) {\r\n    /**\r\n     * The skin name\r\n     *\r\n     * @private\r\n     * @type String\r\n     * @default Slider.SKIN_NAME\r\n     */\r\n    this._skinName = this._skinName || Slider.SKIN_NAME;\r\n\r\n    Scrollable.call(this, theme);\r\n}\r\n\r\nSlider.prototype = Object.create( Scrollable.prototype );\r\nSlider.prototype.constructor = Slider;\r\nmodule.exports = Slider;\r\n\r\n/**\r\n * Default slider skin name\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nSlider.SKIN_NAME = 'scroll_bar';\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/Slider.js\n// module id = 38\n// module chunks = 0","var InputControl = require('./InputControl');\r\n\r\n/**\r\n * A text entry control that allows users to enter and edit multiple lines of\r\n * uniformly-formatted text with the ability to scroll.\r\n *\r\n * @class TextInput\r\n * @extends GOWN.InputControl\r\n * @memberof GOWN\r\n * @constructor\r\n * @param [theme] theme for the text area {GOWN.Theme}\r\n * @param [skinName=TextArea.SKIN_NAME] name of the text area skin {String}\r\n */\r\nfunction TextArea(theme, skinName) {\r\n    // show and load background image as skin (exploiting skin states)\r\n    /**\r\n     * The skin name\r\n     *\r\n     * @type String\r\n     * @default TextArea.SKIN_NAME\r\n     */\r\n    this.skinName = skinName || TextArea.SKIN_NAME;\r\n\r\n    /**\r\n     * The valid text area states\r\n     *\r\n     * @private\r\n     * @type String[]\r\n     * @default InputControl.stateNames\r\n     */\r\n    this._validStates = this._validStates || InputControl.stateNames;\r\n\r\n    InputControl.call(this, theme);\r\n\r\n    /**\r\n     * @private\r\n     * @type PIXI.Point\r\n     */\r\n    this._fromPos = new PIXI.Point(0, 0);\r\n\r\n    /**\r\n     * @private\r\n     * @type PIXI.Point\r\n     */\r\n    this._toPos = new PIXI.Point(0, 0);\r\n\r\n    /**\r\n     * @private\r\n     * @type PIXI.Point\r\n     */\r\n    this._fromText = new PIXI.Point(0, 0);\r\n\r\n    /**\r\n     * @private\r\n     * @type PIXI.Point\r\n     */\r\n    this._toText = new PIXI.Point(0, 0);\r\n}\r\n\r\nTextArea.prototype = Object.create(InputControl.prototype);\r\nTextArea.prototype.constructor = TextArea;\r\nmodule.exports = TextArea;\r\n\r\n/**\r\n * Default text area skin name\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nTextArea.SKIN_NAME = 'text_input';\r\n\r\n/**\r\n * Update the selection\r\n *\r\n * @private\r\n */\r\nTextArea.prototype.updateSelectionBg = function() {\r\n    var start = this.selection[0],\r\n        end = this.selection[1];\r\n    this.selectionBg.clear();\r\n    if (start === end) {\r\n        return;\r\n    }\r\n    if (start < end) {\r\n        this._drawSelectionBg(start, end);\r\n    } else if (start > end) {\r\n        this._drawSelectionBg(end, start);\r\n    }\r\n    this.selectionBg.x = this.pixiText.x;\r\n    this.selectionBg.y = this.pixiText.y;\r\n};\r\n\r\n/**\r\n * Calculate position in Text\r\n */\r\n\r\n/**\r\n * Calculate position in Text\r\n *\r\n * @param textPos Position in the text {Number}\r\n * @param [position] Position object that gets returned {PIXI.Point}\r\n * @returns {PIXI.Point} returns the Line and Position in line\r\n */\r\nTextArea.prototype.textToLinePos = function(textPos, position) {\r\n    var lines = this.getLines();\r\n    var x = 0;\r\n    for (var y = 0; y < lines.length; y++) {\r\n        var lineLength = lines[y].length;\r\n        if (lineLength < textPos) {\r\n            textPos -= lineLength + 1;\r\n        } else {\r\n            x = textPos;\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (!position) {\r\n        position = new PIXI.Point(x, y);\r\n    } else {\r\n        position.x = x;\r\n        position.y = y;\r\n    }\r\n    return position;\r\n};\r\n\r\n/**\r\n * New selection over multiple lines\r\n *\r\n * @param fromTextPos Start position {Number}\r\n * @param toTextPos End position {Number}\r\n * @private\r\n */\r\nTextArea.prototype._drawSelectionBg = function (fromTextPos, toTextPos) {\r\n    this.textToPixelPos(fromTextPos, this._fromPos);\r\n    this.textToPixelPos(toTextPos, this._toPos);\r\n\r\n    this.selectionBg.beginFill(0x0080ff);\r\n    if (this._toPos.y === this._fromPos.y) {\r\n        this.selectionBg.drawRect(\r\n            this._fromPos.x,\r\n            this._fromPos.y,\r\n            this._toPos.x - this._fromPos.x,\r\n            this.lineHeight());\r\n        return;\r\n    }\r\n\r\n    this.textToLinePos(fromTextPos, this._fromText);\r\n    this.textToLinePos(toTextPos, this._toText);\r\n    var lines = this.getLines();\r\n    // draw till the end of the line\r\n    var startPos = this._fromText.x;\r\n    for (var i = this._fromText.y; i < this._toText.y; i++) {\r\n        var text = lines[i];\r\n        this.selectionBg.drawRect(\r\n            startPos > 0 ? this._fromPos.x : 0,\r\n            i * this.lineHeight(),\r\n            this.textWidth(text.substring(startPos, text.length)),\r\n            this.lineHeight());\r\n        startPos = 0;\r\n    }\r\n    this.selectionBg.drawRect(0,\r\n        this._toPos.y,\r\n        this._toPos.x,\r\n        this.lineHeight());\r\n};\r\n\r\n/**\r\n * Get the text lines as an array\r\n *\r\n * @returns {Array|*} Returns an array with one text line per array element\r\n */\r\nTextArea.prototype.getLines = function() {\r\n    var wrappedText = this.pixiText.wordWrap(this.text);\r\n    return wrappedText.split(/(?:\\r\\n|\\r|\\n)/);\r\n};\r\n\r\n/**\r\n * Width of the text area\r\n *\r\n * @name GOWN.TextArea#label\r\n * @type Number\r\n */\r\nObject.defineProperty(InputControl.prototype, 'width', {\r\n    get: function () {\r\n        return this._width;\r\n    },\r\n    set: function(value) {\r\n        this._width = value;\r\n        this.minWidth = Math.min(value, this.minWidth);\r\n        if (this.pixiText) {\r\n            this.pixiText.style.wordWrapWidth = value - this.textOffset.x * 2;\r\n            this._cursorNeedsUpdate = true;\r\n            this._selectionNeedsUpdate = true;\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Set the text style\r\n *\r\n * @name GOWN.TextArea#style\r\n * @type PIXI.TextStyle\r\n */\r\nObject.defineProperty(TextArea.prototype, 'style', {\r\n    get: function() {\r\n        return this.textStyle;\r\n    },\r\n    set: function(style) {\r\n        this.cursorStyle = style;\r\n        if (this.cursor) {\r\n            this.cursor.style = style;\r\n        }\r\n        style = style.clone();\r\n        style.wordWrap = true;\r\n        if (!style.wordWrapWidth && this.textOffset && this.width) {\r\n            style.wordWrapWidth = this.width - this.textOffset.x * 2;\r\n        }\r\n        this.textStyle = style;\r\n        if (this.pixiText) {\r\n            this.pixiText.style = style;\r\n        }\r\n        this._cursorNeedsUpdate = true;\r\n    }\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/TextArea.js\n// module id = 39\n// module chunks = 0","var EventEmitter = require('eventemitter3');\r\nvar ToggleButton = require('./ToggleButton');\r\n\r\n/**\r\n * Controls the selection of two or more toggles\r\n * (RadioButtons/ToggleButton/Check instances)\r\n * where only one may be selected at a time\r\n *\r\n * @class ToggleGroup\r\n * @extends EventEmitter\r\n * @memberof GOWN\r\n * @constructor\r\n */\r\nfunction ToggleGroup() {\r\n    /**\r\n     * List of toggles (RadioButtons/ToggleButton/Check) in the group\r\n     *\r\n     * @private\r\n     * @type GOWN.ToggleButton[]\r\n     * @default Button.stateNames\r\n     */\r\n\tthis._items = [];\r\n\r\n    /**\r\n     * The currently selected toggle.\r\n     *\r\n     * @private\r\n     * @type GOWN.Radio|GOWN.ToggleButton|GOWN.Check\r\n     */\r\n\tthis._selectedItem = null;\r\n\r\n    /**\r\n     * Determines if the user can deselect the currently selected item or not.\r\n     *\r\n     * @private\r\n     * @type bool\r\n     * @default true\r\n     */\r\n    this._isSelectionRequired = true;\r\n\r\n\tEventEmitter.call(this);\r\n}\r\n\r\nToggleGroup.prototype = Object.create( EventEmitter.prototype );\r\nToggleGroup.prototype.constructor = ToggleGroup;\r\nmodule.exports = ToggleGroup;\r\n\r\n/**\r\n * Dispatched when the toggle group selection changes.\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nToggleGroup.CHANGE = 'change';\r\n\r\n/**\r\n * Add an toggle to the toggle group\r\n *\r\n * @param item The toggle to add to the toggle group {GOWN.ToggleButton}\r\n */\r\nToggleGroup.prototype.addItem = function(item) {\r\n    if (this._items.indexOf(item) === -1) {\r\n    \tthis._items.push(item);\r\n\t\titem.on(ToggleButton.CHANGE, this._toggleChanged, this);\r\n        // new radio button is selected, unselect the old one\r\n    \tif (item.selected) {\r\n    \t\tif (this.selectedItem) {\r\n    \t\t\tthis.selectedItem.setSelected(false);\r\n    \t\t}\r\n    \t\tthis.selectedItem = item;\r\n    \t}\r\n    }\r\n};\r\n\r\n/**\r\n * Change callback that updates the selection for the specific item\r\n *\r\n * @param item The item that emitted a change event {GOWN.ToggleButton}\r\n * @private\r\n */\r\nToggleGroup.prototype._toggleChanged = function(item) {\r\n\tif (item === this.selectedItem && this._isSelectionRequired && !item.selected) {\r\n\t\titem.setSelected(true);\r\n\t} else if (item.selected) {\r\n\t\tthis.selectedItem = item;\r\n\t}\r\n};\r\n\r\n/**\r\n * Remove an toggle from the toggle group\r\n *\r\n * @param item The toggle to add to the toggle group {GOWN.ToggleButton}\r\n */\r\nToggleGroup.prototype.removeItem = function(item) {\r\n\tvar index = this._items.indexOf(item);\r\n\tif (index !== -1) {\r\n\t\titem.off(ToggleButton.CHANGE, this._toggleChanged, this);\r\n\t\tthis._items.remove(index);\r\n        // removed item was selected!\r\n\t\tif (this.selectedItem === item) {\r\n\t\t\tthis.selectedItem = null;\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * Remove all event listener, clear items-list and set selectedItem to null.\r\n */\r\nToggleGroup.prototype.destroy = function() {\r\n\twhile (this._items.length > 0) {\r\n\t\tvar item = this._items.pop();\r\n\t\titem.off(ToggleButton.CHANGE, this._toggleChanged, this);\r\n\t}\r\n\tthis.selectedItem = null;\r\n};\r\n\r\n/**\r\n * The currently selected toggle\r\n *\r\n * @name GOWN.ToggleGroup#selectedItem\r\n * @type GOWN.ToggleButton\r\n */\r\nObject.defineProperty(ToggleGroup.prototype, 'selectedItem', {\r\n    get: function() {\r\n        return this._selectedItem;\r\n    },\r\n    set: function(item) {\r\n        if (item === null && this._isSelectionRequired) {\r\n            // item is null, but we need to select something, so we assume\r\n            // the user wants to set the first item as selected instead\r\n            item = this._items[0];\r\n        } else if (this._items.indexOf(item) === -1) {\r\n            return;\r\n        }\r\n        if (item) {\r\n            item.setSelected(true);\r\n        }\r\n        // unselect any previously selected item\r\n        if (this.selectedItem) {\r\n\t        this._selectedItem.setSelected(false);\r\n        }\r\n\t\tthis._selectedItem = item;\r\n\t\tthis.emit(ToggleGroup.CHANGE, item);\r\n    }\r\n});\r\n\r\n/**\r\n * The index of the currently selected toggle.\r\n *\r\n * @name GOWN.ToggleGroup#selectedIndex\r\n * @type Number\r\n */\r\nObject.defineProperty(ToggleGroup.prototype, 'selectedIndex', {\r\n    get: function() {\r\n        return this._items.indexOf(this._selectedItem);\r\n    },\r\n    set: function(index) {\r\n        if (index >= 0 && index < this._items.length &&\r\n            this.selectedIndex !== index) {\r\n            this.selectedItem = this._items[index];\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Determines if the user can deselect the currently selected item or not.\r\n *\r\n * @name GOWN.ToggleGroup#isSelectionRequired\r\n * @type bool\r\n * @default true\r\n */\r\nObject.defineProperty(ToggleGroup.prototype, 'isSelectionRequired', {\r\n    get: function () {\r\n        return this._isSelectionRequired;\r\n    },\r\n    set: function(isSelectionRequired) {\r\n        if (isSelectionRequired && !this._selectedItem && this._items.length > 0) {\r\n            this.selectedItem = this._items[0];\r\n        }\r\n        this._isSelectionRequired = isSelectionRequired;\r\n    }\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controls/ToggleGroup.js\n// module id = 40\n// module chunks = 0","/**\r\n * @file        Main export of the gown.js core library\r\n * @author      Andreas Bresser <andreasbresser@gmail.com>\r\n * @copyright   2017 Andreas Bresser\r\n * @license     {@link https://github.com/GreyRook/gown.js/blob/master/LICENSE|Apache License}\r\n */\r\n\r\n/**\r\n * @namespace GOWN.core\r\n */\r\nmodule.exports = {\r\n    Control:        require('./Control'),\r\n    Skinable:       require('./Skinable'),\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/core/index.js\n// module id = 41\n// module chunks = 0","var EventEmitter = require('eventemitter3');\r\n\r\n/**\r\n * The keyboard manager deals with key events. Any DisplayObject can be interactive\r\n * if its interactive parameter is set to true (similar to the InteractionManager\r\n * in PIXI)\r\n *\r\n * @class\r\n * @extends EventEmitter\r\n * @memberof GOWN.interaction\r\n * @param renderer A reference to the current renderer {PIXI.CanvasRenderer|PIXI.WebGLRenderer}\r\n * @param [options] {object}\r\n * @param [options.autoPreventDefault=false] {boolean} Should the manager automatically prevent default browser actions.\r\n */\r\n// TODO (maybe): move this to an own external lib for PIXI-Keyboard interaction\r\n// TODO: show keyboard in Cocoon.io - see Cocoon.Dialog.showKeyboard\r\nfunction KeyboardManager(renderer, options) {\r\n    EventEmitter.call(this);\r\n\r\n    options = options || {};\r\n\r\n    /**\r\n     * The renderer this interaction manager works for.\r\n     *\r\n     * @type PIXI.SystemRenderer\r\n     */\r\n    this.renderer = renderer;\r\n\r\n    /**\r\n     * Should default browser actions automatically be prevented.\r\n     *\r\n     * @type bool\r\n     * @default false\r\n     */\r\n    this.autoPreventDefault = options.autoPreventDefault !== undefined ? options.autoPreventDefault : false;\r\n\r\n    /**\r\n     * An event data object to handle all the event tracking/dispatching\r\n     *\r\n     * @type Object\r\n     */\r\n    this.eventData = {\r\n        stopped: false,\r\n        target: null,\r\n        type: null,\r\n        data: {},\r\n        stopPropagation:function(){\r\n            this.stopped = true;\r\n        }\r\n    };\r\n\r\n    this.onKeyUp = this.onKeyUp.bind(this);\r\n    this.keyUpProcess = this.keyUpProcess.bind(this);\r\n\r\n    this.onKeyDown = this.onKeyDown.bind(this);\r\n    this.keyDownProcess = this.keyDownProcess.bind(this);\r\n\r\n    this.addEvents();\r\n}\r\n\r\nKeyboardManager.prototype = Object.create(EventEmitter.prototype);\r\nKeyboardManager.prototype.constructor = KeyboardManager;\r\nmodule.exports = KeyboardManager;\r\n\r\n /**\r\n * Registers all the DOM events\r\n *\r\n * @private\r\n */\r\nKeyboardManager.prototype.addEvents = function () {\r\n    if (window.document.body) {\r\n        // Ineternet Explorer only listens to key-events on a dom-object,\r\n        // it ignores them when we listen on document\r\n        window.document.body.addEventListener('keydown', this.onKeyDown, true);\r\n        window.document.body.addEventListener('keyup', this.onKeyUp, true);\r\n    } else {\r\n        window.document.addEventListener('keydown', this.onKeyDown, true);\r\n        window.document.addEventListener('keyup', this.onKeyUp, true);\r\n    }\r\n\r\n    this.eventsAdded = true;\r\n};\r\n\r\n/**\r\n * Removes all the DOM events that were previously registered\r\n *\r\n * @private\r\n */\r\nKeyboardManager.prototype.removeEvents = function () {\r\n    if (window.document.body) {\r\n\r\n        window.document.body.removeEventListener('keydown', this.onKeyDown, true);\r\n        window.document.body.removeEventListener('keyup', this.onKeyUp, true);\r\n    } else {\r\n        window.document.removeEventListener('keydown', this.onKeyDown, true);\r\n        window.document.removeEventListener('keyup', this.onKeyUp, true);\r\n    }\r\n    this.eventsAdded = false;\r\n};\r\n\r\n/**\r\n * Is called when the key is pressed down\r\n *\r\n * @param event The DOM event of a key being pressed down {Event}\r\n * @private\r\n */\r\nKeyboardManager.prototype.onKeyDown = function (event) {\r\n    if (this.autoPreventDefault) {\r\n        event.preventDefault();\r\n    }\r\n    this._keyEvent(event);\r\n    this.processInteractive(this.renderer._lastObjectRendered, this.keyDownProcess);\r\n    this.emit('keydown', this.eventData);\r\n};\r\n\r\n/**\r\n * Is called when the key is released\r\n *\r\n * @param event The DOM event of a key being released {Event}\r\n * @private\r\n */\r\nKeyboardManager.prototype.onKeyUp = function (event) {\r\n    if (this.autoPreventDefault) {\r\n        event.preventDefault();\r\n    }\r\n    this._keyEvent(event);\r\n    this.processInteractive(this.renderer._lastObjectRendered, this.keyUpProcess);\r\n    this.emit('keyup', this.eventData);\r\n};\r\n\r\n/**\r\n * Handle original key event and forward it to gown\r\n *\r\n * @param event The DOM event of a key being released {Event}\r\n * @private\r\n */\r\nKeyboardManager.prototype._keyEvent = function(event) {\r\n\r\n    this.eventData.stopped = false;\r\n    this.eventData.originalEvent = event;\r\n    this.eventData.data = this.getKeyData(event);\r\n\r\n    if (this.autoPreventDefault) {\r\n        event.preventDefault();\r\n    }\r\n};\r\n\r\n/**\r\n * Grabs the data from the keystroke\r\n *\r\n * @param event The event to get the key data from {Event}\r\n * @return {Object}\r\n * @private\r\n */\r\nKeyboardManager.prototype.getKeyData = function (event) {\r\n    return {\r\n        altKey: event.altKey,\r\n        ctrlKey: event.ctrlKey,\r\n        shiftKey: event.shiftKey,\r\n        key: event.key,\r\n        originalEvent: event\r\n    };\r\n};\r\n\r\n/**\r\n * Dispatches a key up event\r\n *\r\n * @param displayObject The object to dispatch the key event for {PIXI.DisplayObject}\r\n * @private\r\n */\r\nKeyboardManager.prototype.keyUpProcess = function(displayObject) {\r\n    this.dispatchEvent( displayObject, 'keyup', this.eventData );\r\n};\r\n\r\n/**\r\n * Dispatches a key down event\r\n *\r\n * @param displayObject The object to dispatch the key event for {PIXI.DisplayObject}\r\n * @private\r\n */\r\nKeyboardManager.prototype.keyDownProcess = function(displayObject) {\r\n    this.dispatchEvent( displayObject, 'keydown', this.eventData );\r\n};\r\n\r\n/**\r\n * Traverse through the scene graph to call the given function on all displayObjects\r\n * that can receive keys\r\n *\r\n * @param displayObject The displayObject that will be resized (recurcsivly crawls its children)\r\n * {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite}\r\n * @param [func] The function that will be called on each resizable object.\r\n * The displayObject will be passed to the function {Function}\r\n */\r\nKeyboardManager.prototype.processInteractive = function (displayObject, func) {\r\n    if(!displayObject || !displayObject.visible || displayObject.enabled === false)\r\n    {\r\n        return false;\r\n    }\r\n\r\n    var children = displayObject.children;\r\n\r\n    for (var i = children.length-1; i >= 0; i--) {\r\n        // unlike the InteractionManager we iterate over ALL children\r\n        // and check every one if it is resizable, because\r\n        // we assume that resize is something that could affect every component\r\n        // not only the one that has focus.\r\n        var child = children[i];\r\n        this.processInteractive(child, func);\r\n    }\r\n\r\n    // only the ones who can receive keys (e.g. InputControl) will listen to\r\n    if (displayObject.receiveKeys) {\r\n        func(displayObject);\r\n    }\r\n};\r\n\r\n/**\r\n * Dispatches an event on the display object that has resizable set to true\r\n *\r\n * @param displayObject The display object in question {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite}\r\n * @param eventString The name of the event (e.g, resize or orientation) {String}\r\n * @param eventData The event data object {Object}\r\n * @private\r\n */\r\nKeyboardManager.prototype.dispatchEvent = function ( displayObject, eventString, eventData )\r\n{\r\n    if(!eventData.stopped)\r\n    {\r\n        eventData.target = displayObject;\r\n        eventData.type = eventString;\r\n\r\n        displayObject.emit( eventString, eventData );\r\n\r\n        if( displayObject[eventString] )\r\n        {\r\n            displayObject[eventString]( eventData );\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Remove events and listener etc.\r\n */\r\nKeyboardManager.prototype.destroy = function(){\r\n    this.removeEvents();\r\n    this.removeAllListeners();\r\n    this.renderer = null;\r\n    this.eventData = null;\r\n    this.onKeyUp = null;\r\n    this.keyUpProcess = null;\r\n    this.onKeyDown = null;\r\n    this.keyDownProcess = null;\r\n};\r\n\r\nPIXI.WebGLRenderer.registerPlugin('keyboard', KeyboardManager);\r\nPIXI.CanvasRenderer.registerPlugin('keyboard', KeyboardManager);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/interaction/KeyboardManager.js\n// module id = 42\n// module chunks = 0","var EventEmitter = require('eventemitter3');\r\n\r\n/**\r\n * The resize manager deals with changes in the Application size\r\n * e.g. if the browser window has been resized because the keyboard is shown\r\n * or the device has been rotated on mobile or the user resized it on the\r\n * desktop with his mouse.\r\n *\r\n * @class\r\n * @extends EventEmitter\r\n * @memberof GOWN.interaction\r\n * @param renderer A reference to the current renderer {PIXI.CanvasRenderer|PIXI.WebGLRenderer}\r\n * @param [options] {object}\r\n * @param [options.autoPreventDefault=true] Should the manager automatically prevent default browser actions. {boolean}\r\n * @param [options.fullscreen=false] Should we use the whole browser width/height (window.innerHeight/Width). {boolean}\r\n */\r\n // TODO: orientation change for cordova and cocoon ('orientationchange' and Cocoon.Device.getOrientation())\r\n // TODO: take a look at phaser ScaleManager - see https://github.com/photonstorm/phaser/blob/v2.4.2/src/core/ScaleManager.js\r\n // TODO: check single Canvas-DOM-Element, not only whole window (see https://github.com/marcj/css-element-queries )\r\nfunction ResizeManager(renderer, options) {\r\n    EventEmitter.call(this);\r\n\r\n    options = options || {};\r\n\r\n    /**\r\n     * The renderer this interaction manager works for.\r\n     *\r\n     * @type PIXI.SystemRenderer\r\n     */\r\n    this.renderer = renderer;\r\n\r\n    /**\r\n     * Should default browser actions automatically be prevented.\r\n     *\r\n     * @type bool\r\n     * @default true\r\n     */\r\n    this.autoPreventDefault = options.autoPreventDefault !== undefined ? options.autoPreventDefault : true;\r\n\r\n    /**\r\n     * Should we use the whole browser width/height (window.innerHeight/Width)\r\n     *\r\n     * @type bool\r\n     * @default false\r\n     */\r\n    this.fullscreen = options.fullscreen || false;\r\n\r\n    /**\r\n     * TODO\r\n     */\r\n    this.element = null;\r\n\r\n    /**\r\n     * Time to wait after every resize event to prevent flickering\r\n     *\r\n     * @type Number\r\n     * @default 0\r\n     */\r\n    this.resizeTimeout = 0;\r\n\r\n    /**\r\n     * Should the resize manager wait after every resize event\r\n     *\r\n     * @type bool\r\n     * @default true\r\n     */\r\n    this.useResizeDoneTimeout = options.useResizeDoneTimeout !== undefined ? options.useResizeDoneTimeout : true;\r\n\r\n    /**\r\n     * An event data object to handle all the event tracking/dispatching\r\n     *\r\n     * @type Object\r\n     */\r\n    this.eventData = {\r\n        stopped: false,\r\n        target: null,\r\n        type: null,\r\n        data: {},\r\n        stopPropagation:function(){\r\n            this.stopped = true;\r\n        }\r\n    };\r\n\r\n     this.onResize = this.onResize.bind(this);\r\n     this.processResize = this.processResize.bind(this);\r\n\r\n     this.addEvents();\r\n}\r\n\r\nResizeManager.prototype = Object.create(EventEmitter.prototype);\r\nResizeManager.prototype.constructor = ResizeManager;\r\nmodule.exports = ResizeManager;\r\n\r\n/**\r\n * The waiting time after the resize event before updating\r\n * (prevent the canvas from flickering when resizing)\r\n *\r\n * @static\r\n * @final\r\n * @type String\r\n */\r\nResizeManager.RESIZE_DONE_TIMEOUT = 100;\r\n\r\n /**\r\n * Registers all the DOM events\r\n *\r\n * @private\r\n */\r\nResizeManager.prototype.addEvents = function () {\r\n    window.addEventListener('resize', this.onResize, true);\r\n    this.eventsAdded = true;\r\n};\r\n\r\n/**\r\n * Removes all the DOM events that were previously registered\r\n *\r\n * @private\r\n */\r\nResizeManager.prototype.removeEvents = function () {\r\n    window.removeEventListener('resize', this.onResize, true);\r\n    this.eventsAdded = false;\r\n};\r\n\r\n/**\r\n * Is called when the application/browser window gets resized\r\n *\r\n * @param _event The DOM event {Event}\r\n * @private\r\n */\r\nResizeManager.prototype.onResize = function (_event) {\r\n    if (!this.element && this.fullscreen === false) {\r\n        // we assume you have a fixed size?!\r\n        // TODO: do not add resizeManager in the first place?\r\n        return;\r\n    }\r\n    if (this.autoPreventDefault) {\r\n        _event.preventDefault();\r\n    }\r\n\r\n    if (this.useResizeDoneTimeout) {\r\n        var scope = this;\r\n        if (this.resizeTimeout) {\r\n            clearInterval(this.resizeTimeout);\r\n        }\r\n        this.resizeTimeout = setInterval(function () {\r\n            clearInterval(scope.resizeTimeout);\r\n            scope._resizeEvent(_event);\r\n        }, ResizeManager.RESIZE_DONE_TIMEOUT);\r\n    } else {\r\n        this._resizeEvent(_event);\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * Handle the original resize event and forward it\r\n *\r\n * @param event The DOM event {Event}\r\n * @private\r\n */\r\nResizeManager.prototype._resizeEvent = function(event) {\r\n    this.eventData.stopped = false;\r\n\r\n    this.eventData.data = this.getSizeData(event);\r\n\r\n    if (this.autoPreventDefault) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    this.processInteractive(this.renderer._lastObjectRendered, this.processResize);\r\n    this.emit('resize', this.eventData);\r\n};\r\n\r\n/**\r\n * Grabs the size from the browser window\r\n *\r\n * @private\r\n */\r\nResizeManager.prototype.getSizeData = function (event) {\r\n    var eventData = {\r\n        originalEvent: event\r\n    };\r\n    if (this.fullscreen) {\r\n        eventData.width = window.innerWidth;\r\n        eventData.height = window.innerHeight;\r\n    } else {\r\n        eventData.width = this.element.clientWidth;\r\n        eventData.height = this.element.clientHeight;\r\n    }\r\n    return eventData;\r\n};\r\n\r\n/**\r\n * Dispatch a resize event for a given display object\r\n *\r\n * @param displayObject {PIXI.DisplayObject}\r\n * @private\r\n */\r\nResizeManager.prototype.processResize = function(displayObject) {\r\n    this.dispatchEvent( displayObject, 'resize', this.eventData );\r\n};\r\n\r\n/**\r\n * Dispatches an event on the display object that has resizable set to true\r\n *\r\n * @param displayObject The display object in question {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite}\r\n * @param eventString The name of the event (e.g, resize or orientation) {string}\r\n * @param eventData The event data object {object}\r\n * @private\r\n */\r\nResizeManager.prototype.dispatchEvent = function (displayObject, eventString, eventData) {\r\n    if (!eventData.stopped) {\r\n        eventData.target = displayObject;\r\n        eventData.type = eventString;\r\n\r\n        displayObject.emit(eventString, eventData);\r\n\r\n        if (displayObject[eventString]) {\r\n            displayObject[eventString](eventData);\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Traverse through the scene graph to call given function on all displayObjects\r\n * that are resizable\r\n *\r\n * @param displayObject the displayObject that will be resized (recursivly crawls its children)\r\n * {PIXI.Container|PIXI.Sprite|PIXI.extras.TilingSprite}\r\n * @param [func] the function that will be called on each resizable object. The displayObject will be passed to the function {Function}\r\n */\r\nResizeManager.prototype.processInteractive = function (displayObject, func)\r\n{\r\n    if(!displayObject || !displayObject.visible)\r\n    {\r\n        return false;\r\n    }\r\n\r\n    // resize parent first\r\n    if (displayObject.resizable) {\r\n        func(displayObject);\r\n    }\r\n\r\n    var children = displayObject.children;\r\n\r\n    for (var i = children.length-1; i >= 0; i--) {\r\n        // unlike the InteractionManager we iterate over ALL children\r\n        // and check every one if it is resizable, because\r\n        // we assume that resize is something that could affect every component\r\n        // not only the one that has focus.\r\n        var child = children[i];\r\n        this.processInteractive(child, func);\r\n    }\r\n};\r\n\r\n/**\r\n * Remove events and listener etc.\r\n */\r\nResizeManager.prototype.destroy = function(){\r\n    this.removeEvents();\r\n    this.removeAllListeners();\r\n    this.renderer = null;\r\n    this.eventData = null;\r\n    this.onResize = null;\r\n};\r\n\r\nPIXI.WebGLRenderer.registerPlugin('resize', ResizeManager);\r\nPIXI.CanvasRenderer.registerPlugin('resize', ResizeManager);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/interaction/ResizeManager.js\n// module id = 43\n// module chunks = 0","var LayoutAlignment = require('./LayoutAlignment');\r\n\r\n/**\r\n * HorizontalLayout - just sets the alignment to\r\n * LayoutAlignment.HORIZONTAL_ALIGNMENT\r\n *\r\n * @class HorizontalLayout\r\n * @extends GOWN.layout.LayoutAlignment\r\n * @memberof GOWN.layout\r\n * @constructor\r\n */\r\nfunction HorizontalLayout() {\r\n    LayoutAlignment.call(this);\r\n\r\n    /**\r\n     * The alignment of the layout\r\n     *\r\n     * @type String\r\n     * @default LayoutAlignment.HORIZONTAL_ALIGNMENT\r\n     */\r\n    this.alignment = LayoutAlignment.HORIZONTAL_ALIGNMENT;\r\n}\r\n\r\nHorizontalLayout.prototype = Object.create( LayoutAlignment.prototype );\r\nHorizontalLayout.prototype.constructor = HorizontalLayout;\r\nmodule.exports = HorizontalLayout;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/layout/HorizontalLayout.js\n// module id = 44\n// module chunks = 0","var TiledLayout = require('./TiledLayout');\r\n\r\n/**\r\n * Tiled columns Layout\r\n * (roughly based on starling TiledColumnsLayout)\r\n *\r\n * @class TiledColumnsLayout\r\n * @extends GOWN.layout.TiledLayout\r\n * @memberof GOWN.layout\r\n * @constructor\r\n */\r\nfunction TiledColumnsLayout() {\r\n    TiledLayout.call(this);\r\n\r\n    this._paging = TiledLayout.PAGING_VERTICAL;\r\n    this._orientation = TiledLayout.ORIENTATION_COLUMNS;\r\n}\r\n\r\nTiledColumnsLayout.prototype = Object.create( TiledLayout.prototype );\r\nTiledColumnsLayout.prototype.constructor = TiledColumnsLayout;\r\nmodule.exports = TiledColumnsLayout;\r\n\r\n/**\r\n * Quickly sets both <code>horizontalGap</code> and <code>verticalGap</code>\r\n * to the same value. The <code>gap</code> getter always returns the\r\n * value of <code>verticalGap</code>, but the value of\r\n * <code>horizontalGap</code> may be different.\r\n *\r\n * @see #_horizontalGap\r\n * @see #_verticalGap\r\n *\r\n * @name GOWN.layout.TiledColumnsLayout#gap\r\n * @type Number\r\n * @default 0\r\n */\r\nObject.defineProperty(TiledColumnsLayout.prototype, 'gap', {\r\n    set: function(value) {\r\n        this._verticalGap = value;\r\n        this._horizontalGap = value;\r\n        this._needUpdate = true;\r\n    },\r\n    get: function() {\r\n        return this._verticalGap;\r\n    }\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/layout/TiledColumnsLayout.js\n// module id = 45\n// module chunks = 0","var TiledLayout = require('./TiledLayout');\r\n\r\n/**\r\n * Tiled rows Layout\r\n * (roughly based on starling TiledRowsLayout)\r\n *\r\n * @class TiledRowsLayout\r\n * @extends GOWN.layout.TiledLayout\r\n * @memberof GOWN.layout\r\n * @constructor\r\n */\r\nfunction TiledRowsLayout() {\r\n    TiledLayout.call(this);\r\n\r\n    this._paging = TiledLayout.PAGING_HORIZONTAL;\r\n    this._orientation = TiledLayout.ORIENTATION_ROWS;\r\n}\r\n\r\nTiledRowsLayout.prototype = Object.create( TiledLayout.prototype );\r\nTiledRowsLayout.prototype.constructor = TiledRowsLayout;\r\nmodule.exports = TiledRowsLayout;\r\n\r\n/**\r\n * Quickly sets both <code>horizontalGap</code> and <code>verticalGap</code>\r\n * to the same value. The <code>gap</code> getter always returns the\r\n * value of <code>horizontalGap</code>, but the value of\r\n * <code>verticalGap</code> may be different.\r\n *\r\n * @see #_horizontalGap\r\n * @see #_verticalGap\r\n *\r\n * @name GOWN.layout.TiledRowsLayout#gap\r\n * @type Number\r\n * @default 0\r\n */\r\nObject.defineProperty(TiledRowsLayout.prototype, 'gap', {\r\n    get: function() {\r\n        return this._horizontalGap;\r\n    },\r\n    set: function(value) {\r\n        this._verticalGap = value;\r\n        this._horizontalGap = value;\r\n        this._needUpdate = true;\r\n    }\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/layout/TiledRowsLayout.js\n// module id = 46\n// module chunks = 0","var LayoutAlignment = require('./LayoutAlignment');\r\n\r\n/**\r\n * VerticalLayout - just sets the alignment to\r\n * LayoutAlignment.VERTICAL_ALIGNMENT\r\n *\r\n * @class VerticalLayout\r\n * @extends GOWN.layout.LayoutAlignment\r\n * @memberof GOWN.layout\r\n * @constructor\r\n */\r\nfunction VerticalLayout() {\r\n    LayoutAlignment.call(this);\r\n\r\n    /**\r\n     * The alignment of the layout\r\n     *\r\n     * @type String\r\n     * @default LayoutAlignment.VERTICAL_ALIGNMENT\r\n     */\r\n    this.alignment = LayoutAlignment.VERTICAL_ALIGNMENT;\r\n}\r\n\r\nVerticalLayout.prototype = Object.create( LayoutAlignment.prototype );\r\nVerticalLayout.prototype.constructor = VerticalLayout;\r\nmodule.exports = VerticalLayout;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/layout/VerticalLayout.js\n// module id = 47\n// module chunks = 0","var Shape = require('./Shape');\r\n\r\n/**\r\n * Basic arrow shape\r\n *\r\n * @class Arrow\r\n * @extends GOWN.shapes.Shape\r\n * @memberof GOWN.shapes\r\n * @constructor\r\n * @param color Color of the arrow {Number}\r\n * @param alpha Alpha value of the arrow {Number}\r\n * @param tailWidth Tail width of the arrow {Number}\r\n * @param tailHeight Tail height of the arrow {Number}\r\n * @param width Width of the arrow {Number}\r\n * @param height Height of the arrow {Number}\r\n */\r\nfunction Arrow(color, alpha, tailWidth, tailHeight, width, height) {\r\n    /**\r\n     * Tail height of the arrow\r\n     *\r\n     * @private\r\n     * @type Number\r\n     */\r\n    this.tailHeight = tailHeight;\r\n\r\n    /**\r\n     * Tail width of the arrow\r\n     *\r\n     * @private\r\n     * @type Number\r\n     */\r\n    this.tailWidth = tailWidth;\r\n\r\n    Shape.call(this, color, alpha, width, height);\r\n}\r\n\r\nArrow.prototype = Object.create( Shape.prototype );\r\nArrow.prototype.constructor = Arrow;\r\nmodule.exports = Arrow;\r\n\r\n/**\r\n * Draw the arrow during redraw.\r\n *\r\n * @private\r\n */\r\nArrow.prototype._drawShape = function() {\r\n    // start y-positon of tail\r\n    var tailY = Math.floor((this._height-this.tailHeight)/2);\r\n    // draw arrow tail\r\n    this.moveTo(0, tailY)\r\n        .lineTo(this.tailWidth, tailY)\r\n        .lineTo(this.tailWidth, 0)\r\n        .lineTo(this._width, Math.floor(this._height/2))\r\n        .lineTo(this.tailWidth, this._height)\r\n        .lineTo(this.tailWidth, tailY+this.tailHeight)\r\n        .lineTo(0, tailY+this.tailHeight);\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/shapes/Arrow.js\n// module id = 48\n// module chunks = 0","var Shape = require('./Shape');\r\n\r\n/**\r\n * Basic diamond shape\r\n *\r\n * @class Diamond\r\n * @extends GOWN.shapes.Shape\r\n * @memberof GOWN.shapes\r\n * @constructor\r\n * @param color Color of the diamond shape {Number}\r\n * @param alpha Alpha value of the diamond shape {Number}\r\n * @param width Width of the diamond shape {Number}\r\n * @param height Height of the diamond shape {Number}\r\n */\r\nfunction Diamond(color, alpha, width, height) {\r\n    Shape.call(this, color, alpha, width, height);\r\n}\r\n\r\nDiamond.prototype = Object.create( Shape.prototype );\r\nDiamond.prototype.constructor = Diamond;\r\nmodule.exports = Diamond;\r\n\r\n/**\r\n * Draw the diamond during redraw.\r\n *\r\n * @private\r\n */\r\nDiamond.prototype._drawShape = function() {\r\n    this.moveTo(this._width/2, 0)\r\n        .lineTo(this._width, this._height/2)\r\n        .lineTo(this._width/2, this._height)\r\n        .lineTo(0, this._height/2)\r\n        .lineTo(this._width/2, 0);\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/shapes/Diamond.js\n// module id = 49\n// module chunks = 0","var Shape = require('./Shape');\r\n\r\n/**\r\n * Basic ellipse shape\r\n *\r\n * @class Ellipse\r\n * @extends PIXI.shape.Shape\r\n * @memberof PIXI.shape\r\n * @constructor\r\n * @param color Color of the ellipse shape {Number}\r\n * @param alpha Alpha value of the ellipse shape {Number}\r\n * @param width Width of the ellipse shape {Number}\r\n * @param height Height of the ellipse shape {Number}\r\n */\r\nfunction Ellipse(color, alpha, width, height) {\r\n    Shape.call(this, color, alpha, width, height);\r\n}\r\n\r\nEllipse.prototype = Object.create( Shape.prototype );\r\nEllipse.prototype.constructor = Ellipse;\r\nmodule.exports = Ellipse;\r\n\r\n/**\r\n * Draw the ellipse during redraw.\r\n *\r\n * @private\r\n */\r\nEllipse.prototype._drawShape = function() {\r\n    this.drawEllipse(this.width/2, this.height/2,\r\n        Math.abs(this.width/2),\r\n        Math.abs(this.height/2));\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/shapes/Ellipse.js\n// module id = 50\n// module chunks = 0","var Shape = require('./Shape');\r\n\r\n/**\r\n * Basic line\r\n *\r\n * @class Line\r\n * @extends PIXI.shape.Shape\r\n * @memberof PIXI.shape\r\n * @constructor\r\n * @param color Color of the line {Number}\r\n * @param alpha Alpha value of the line {Number}\r\n * @param width Width of the line {Number}\r\n * @param height Height of the line {Number}\r\n * @param [lineWidth=1] Width of the line {Number}\r\n * @param reverse\r\n */\r\nfunction Line(color, alpha, width, height, lineWidth, reverse) {\r\n    /**\r\n     * Reverse the line\r\n     *\r\n     * @private\r\n     * @type bool\r\n     */\r\n    this._reverse = reverse;\r\n\r\n    Shape.call(this, color, alpha, width, height);\r\n\r\n    /**\r\n     * The width of the line\r\n     *\r\n     * @type Number\r\n     * @default 1\r\n     */\r\n    this.lineWidth = lineWidth || 1;\r\n}\r\n\r\nLine.prototype = Object.create( Shape.prototype );\r\nLine.prototype.constructor = Line;\r\nmodule.exports = Line;\r\n\r\n/**\r\n * Draw the rect during redraw. Will use drawRoundRect if a radius is provided.\r\n *\r\n * @private\r\n */\r\nLine.prototype._drawShape = function() {\r\n    if (this.reverse) {\r\n        this.moveTo(this._width, 0);\r\n        this.lineTo(0, this._height);\r\n    } else {\r\n        this.moveTo(0, 0);\r\n        this.lineTo(this._width,this._height);\r\n    }\r\n};\r\n\r\n/**\r\n * Reverses the line\r\n *\r\n * @name GOWN.shapes.Line#reverse\r\n * @type bool\r\n */\r\nObject.defineProperty(Line.prototype, 'reverse', {\r\n    get: function() {\r\n        return this._reverse;\r\n    },\r\n    set: function(reverse) {\r\n        this._reverse = reverse;\r\n        this.invalid = true;\r\n    }\r\n});\r\n\r\n\r\n/**\r\n * Update before draw call.\r\n * Line has to be drawn different than other Shapes\r\n *\r\n * @private\r\n */\r\nLine.prototype.redraw = function() {\r\n    if(!this.invalid) {\r\n        return;\r\n    }\r\n\r\n    var lineWidth = this.lineWidth;\r\n    this.clear();\r\n    this.lineStyle(lineWidth, this.color);\r\n    this._drawShape();\r\n\r\n    this.invalid = false;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/shapes/Line.js\n// module id = 51\n// module chunks = 0","var Shape = require('./Shape');\r\n\r\n/**\r\n * Basic rectangular shape\r\n *\r\n * @class Rect\r\n * @extends GOWN.shapes.Shape\r\n * @memberof GOWN.shapes\r\n * @constructor\r\n * @param color Color of the rectangular shape {Number}\r\n * @param alpha Alpha value of the rectangular shape {Number}\r\n * @param width Width of the rectangular shape {Number}\r\n * @param height Height of the rectangular shape {Number}\r\n * @param radius Radius of the rectangular shape {Number}\r\n */\r\nfunction Rect(color, alpha, width, height, radius) {\r\n    Shape.call(this, color, alpha, width, height);\r\n    this._radius = radius;\r\n}\r\n\r\nRect.prototype = Object.create( Shape.prototype );\r\nRect.prototype.constructor = Rect;\r\nmodule.exports = Rect;\r\n\r\n/**\r\n * Draw the rect during redraw. will use drawRoundRect if a radius is provided.\r\n *\r\n * @private\r\n */\r\nRect.prototype._drawShape = function() {\r\n    if (this.radius) {\r\n        this.drawRoundedRect(\r\n            Math.min(this._width, 0),\r\n            Math.min(this._height, 0),\r\n            Math.abs(this._width),\r\n            Math.abs(this._height),\r\n            this.radius);\r\n    } else {\r\n        this.drawRect(\r\n            Math.min(this._width, 0),\r\n            Math.min(this._height, 0),\r\n            Math.abs(this._width),\r\n            Math.abs(this._height));\r\n    }\r\n};\r\n\r\n/**\r\n * The radius of the rectangle border, setting this will redraw the component.\r\n *\r\n * @name GOWN.shapes.Rect#radius\r\n * @type Number\r\n */\r\nObject.defineProperty(Rect.prototype, 'radius', {\r\n    get: function() {\r\n        return this._radius;\r\n    },\r\n    set: function(radius) {\r\n        this._radius = radius;\r\n        this.invalid = true;\r\n    }\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/shapes/Rect.js\n// module id = 52\n// module chunks = 0","var Theme = require('./Theme');\r\n\r\n/**\r\n * Load a theme from a .json file.\r\n *\r\n * @class Theme\r\n * @extends GOWN.Theme\r\n * @memberof GOWN\r\n * @constructor\r\n * @param jsonPath The path to the .json file {String}\r\n * @param [global=true] Set theme as the global GOWN.theme {bool}\r\n */\r\nfunction ThemeParser(jsonPath, global) {\r\n    Theme.call(this, global);\r\n\r\n    /**\r\n     * Components that show something and can be used as skin\r\n     *\r\n     * @see GOWN.shapes\r\n     * @type Object\r\n     */\r\n    this.skinComponents = this.skinComponents || this.getSkinComponents();\r\n\r\n    this.addThemeData(jsonPath);\r\n}\r\n\r\nThemeParser.prototype = Object.create( Theme.prototype );\r\nThemeParser.prototype.constructor = ThemeParser;\r\nmodule.exports = ThemeParser;\r\n\r\n//TODO\r\nThemeParser.DATA_LOADED = 'data_loaded';\r\n\r\n/**\r\n * Get the component classes that can create skins (in general all GOWN.shapes).\r\n * Note that image textures are not components\r\n *\r\n * @return Object\r\n */\r\nThemeParser.prototype.getSkinComponents = function () {\r\n    var cmps = {};\r\n    if (GOWN.shapes) {\r\n        cmps.rect = GOWN.shapes.Rect;\r\n        cmps.diamond = GOWN.shapes.Diamond;\r\n        cmps.ellipse = GOWN.shapes.Ellipse;\r\n        cmps.line = GOWN.shapes.Line;\r\n    }\r\n    return cmps;\r\n};\r\n\r\n/**\r\n * Executed when the image has been loaded.\r\n * Sets cache and and applies the theme.\r\n *\r\n * @see addImage\r\n * @see resource-loader https://github.com/englercj/resource-loader\r\n *\r\n * @param loader The loader {Loader}\r\n * @param resources The loaded resources {Object}\r\n */\r\nThemeParser.prototype.loadComplete = function(loader, resources) {\r\n    this.setCache(resources);\r\n\r\n    if (resources) {\r\n        var res = resources[this._jsonPath];\r\n        if (res) {\r\n            this.themeData = res.data;\r\n        }\r\n\r\n        this.applyTheme();\r\n        Theme.prototype.loadComplete.call(this, loader, resources);\r\n    }\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nThemeParser.prototype.themeApplyTheme = Theme.prototype.applyTheme;\r\n\r\n/**\r\n * Apply the theme to the controls\r\n * (normally executed only once after the texture has been loaded)\r\n */\r\nThemeParser.prototype.applyTheme = function() {\r\n    if (!this.themeData) {\r\n        return;\r\n    }\r\n    this.parseData(this.themeData);\r\n    this.themeApplyTheme();\r\n};\r\n\r\n/**\r\n * Get the scale9 grid data from the theme data\r\n *\r\n * @param scale Rectangle position and size {Number[]}\r\n * @return {PIXI.Rectangle}\r\n */\r\nThemeParser.prototype.getScale9 = function(scale) {\r\n    return new PIXI.Rectangle(\r\n        parseInt(scale[0])*this.themeScale, parseInt(scale[1])*this.themeScale,\r\n        parseInt(scale[2])*this.themeScale, parseInt(scale[3])*this.themeScale);\r\n};\r\n\r\n/**\r\n * Create a new skin from the theme data\r\n *\r\n * @param skinData The skin data {Object}\r\n * @param data The theme data {Object}\r\n * @returns {function} the skin function\r\n */\r\nThemeParser.prototype.skinFromData = function(skinData, data) {\r\n    if (skinData.type === 'texture') {\r\n        var scale9;\r\n        if (skinData.scale9 && skinData.scale9 in data.grids) {\r\n            scale9 = this.getScale9(data.grids[skinData.scale9]);\r\n        } else {\r\n            return this.getImage(skinData.texture);\r\n        }\r\n        if (!(skinData.texture in data.frames) && window.console) {\r\n            window.console.error('texture not found in texture atlas: ' +\r\n                skinData.texture + ' ' +\r\n                'please check ' + this._jsonPath);\r\n            return null;\r\n        }\r\n\r\n        return this.getScaleContainer(skinData.texture, scale9, skinData.middleWidth, skinData.centerHeight);\r\n    } else if (skinData.type in this.skinComponents) {\r\n        // keep component in scope\r\n        var CmpClass = this.skinComponents[skinData.type];\r\n        return function() {\r\n            var cmp = new CmpClass();\r\n            for (var key in skinData) {\r\n                if (key === 'type') {\r\n                    continue;\r\n                }\r\n                cmp[key] = skinData[key];\r\n            }\r\n            return cmp;\r\n        };\r\n    }\r\n};\r\n\r\n/**\r\n * Create a dictionary containing the skin data (including default values)\r\n *\r\n * @param stateName The name of the current state (e.g. GOWN.Button.UP) {String}\r\n * @param skinData The data gathered from previous runs {String}\r\n * @param data The new data that will be copied into skinData {Object}\r\n */\r\nThemeParser.prototype.getSkinData = function(stateName, skinData, data) {\r\n    if (!data) {\r\n        return;\r\n    }\r\n\r\n    var copyInto = function(source, target) {\r\n        if (!source) {\r\n            return;\r\n        }\r\n        for (var key in source) {\r\n            target[key] = source[key];\r\n        }\r\n    };\r\n\r\n    // get default skin for all states...\r\n    copyInto(data.all, skinData);\r\n\r\n    // ... override default values for current state\r\n    copyInto(data[stateName], skinData);\r\n};\r\n\r\n/**\r\n * Parse the theme data\r\n *\r\n * @param data The theme data {Object}\r\n */\r\nThemeParser.prototype.parseData = function(data) {\r\n    this.hoverSkin = data.hoverSkin;\r\n    this.thumbSkin = data.thumbSkin;\r\n    this.themeScale = data.themeScale || 1.0;\r\n\r\n    if (data.textStyle) {\r\n        this.textStyle.fill = data.textStyle.fill;\r\n        this.textStyle.fontFamily = data.textStyle.fontFamily;\r\n    }\r\n    if (!data.skins) {\r\n        return;\r\n    }\r\n\r\n    for (var componentName in data.skins) {\r\n        if (componentName === 'default') {\r\n            continue;\r\n        }\r\n        // create skin for componentName (e.g. button) from data\r\n\r\n        var states = data.skins[componentName];\r\n        //var skins = data.skins[componentName];\r\n        for (var stateName in states) {\r\n            if (stateName === 'all') {\r\n                continue;\r\n            }\r\n\r\n            var skinData = {};\r\n            // set defaults\r\n            this.getSkinData(stateName, skinData, data.skins.default);\r\n\r\n            // override defaults with component data\r\n            if (componentName in data.skins) {\r\n                this.getSkinData(stateName, skinData, data.skins[componentName]);\r\n            }\r\n\r\n            // create skin from skinData for current skin\r\n            var skin = this.skinFromData(skinData, data);\r\n            if (skin) {\r\n                // skin.minWidth\r\n                this.setSkin(componentName, stateName, skin);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Adds the theme data located at the specified path\r\n *\r\n * @param jsonPath The path the .json file\r\n */\r\nThemeParser.prototype.addThemeData = function(jsonPath) {\r\n    this.addImage(jsonPath);\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/skin/ThemeParser.js\n// module id = 53\n// module chunks = 0","/**\r\n * @file        Main export of the gown.js util library\r\n * @author      Andreas Bresser <andreasbresser@gmail.com>\r\n * @copyright   2017 Andreas Bresser\r\n * @license     {@link https://github.com/GreyRook/gown.js/blob/master/LICENSE|Apache License}\r\n */\r\n\r\n/**\r\n * @namespace GOWN.util\r\n */\r\nmodule.exports = {\r\n    position:               require('./position'),\r\n    ScaleContainer:         require('./ScaleContainer'),\r\n    SliderData:             require('./SliderData'),\r\n    Tween:                  require('./Tween'),\r\n    resizeScaling:          require('./resizeScaling'),\r\n    roundToPrecision:       require('./roundToPrecision'),\r\n    roundToNearest:         require('./roundToNearest'),\r\n    roundDownToNearest:     require('./roundDownToNearest'),\r\n    roundUpToNearest:       require('./roundUpToNearest'),\r\n    mixin:                  require('./mixin')\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/index.js\n// module id = 54\n// module chunks = 0","// full version of gown\r\n// (includes pixi-layout and pixi-shape, so you only need to add pixi.js\r\n//  and gown.js into your html file)\r\nif (typeof PIXI === 'undefined') {\r\n    if (window.console) {\r\n        window.console.warn('pixi.js has to be loaded before loading gown.js');\r\n    }\r\n} else {\r\n\r\n    var core = module.exports = require('./core');\r\n    // basic shapes\r\n    core.shapes = {\r\n        Shape:          require('./shapes/Shape'),\r\n        Arrow:          require('./shapes/Arrow'),\r\n        Diamond:        require('./shapes/Diamond'),\r\n        Ellipse:        require('./shapes/Ellipse'),\r\n        Line:           require('./shapes/Line'),\r\n        Rect:           require('./shapes/Rect')\r\n    };\r\n\r\n    // layouting\r\n    core.utils = {\r\n            itemDimensions:       require('./layout/utils/itemDimensions')\r\n    };\r\n\r\n    core.layout = {\r\n        HorizontalLayout:     require('./layout/HorizontalLayout'),\r\n        Layout:               require('./layout/Layout'),\r\n        LayoutAlignment:      require('./layout/LayoutAlignment'),\r\n        TiledColumnsLayout:   require('./layout/TiledColumnsLayout'),\r\n        TiledLayout:          require('./layout/TiledLayout'),\r\n        TiledRowsLayout:      require('./layout/TiledRowsLayout'),\r\n        VerticalLayout:       require('./layout/VerticalLayout')\r\n    };\r\n\r\n    // controls\r\n    core.Application =            require('./controls/Application');\r\n    core.AutoComplete =           require('./controls/AutoComplete');\r\n    core.Button =                 require('./controls/Button');\r\n    core.Check =                  require('./controls/Check');\r\n    core.InputControl =           require('./controls/InputControl');\r\n    core.LayoutGroup =            require('./controls/LayoutGroup');\r\n    core.List =                   require('./controls/List');\r\n    core.PickerList =             require('./controls/PickerList');\r\n    core.Radio =                  require('./controls/Radio');\r\n    core.Scrollable =             require('./controls/Scrollable');\r\n    core.ScrollBar =              require('./controls/ScrollBar');\r\n    core.ScrollContainer =        require('./controls/ScrollContainer');\r\n    core.Scroller =               require('./controls/Scroller');\r\n    core.ScrollText =             require('./controls/ScrollText');\r\n    core.ScrollThumb =            require('./controls/ScrollThumb');\r\n    core.Slider =                 require('./controls/Slider');\r\n    core.TextInput =              require('./controls/TextInput');\r\n    core.TextArea =               require('./controls/TextArea');\r\n    core.ToggleButton =           require('./controls/ToggleButton');\r\n    core.ToggleGroup =            require('./controls/ToggleGroup');\r\n\r\n    // data\r\n    core.ListCollection = require('./data/ListCollection');\r\n\r\n    // control renderer\r\n    core.DefaultListItemRenderer =  require('./controls/renderers/DefaultListItemRenderer');\r\n\r\n    // skin\r\n    core.Theme =           require('./skin/Theme');\r\n    core.ThemeFont =       require('./skin/ThemeFont');\r\n    core.ThemeParser =     require('./skin/ThemeParser');\r\n\r\n    // manager\r\n    core.ResizeManager =     require('./interaction/ResizeManager');\r\n    core.KeyboardManager =   require('./interaction/KeyboardManager');\r\n\r\n    // add core plugins.\r\n    core.utils = require('./utils');\r\n\r\n    // use default pixi loader\r\n    core.loader = PIXI.loader;\r\n\r\n    // export GOWN globally.\r\n    global.GOWN = core;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.js\n// module id = 55\n// module chunks = 0","var roundToPrecision = require('./roundToPrecision');\r\n\r\n/**\r\n * Rounds a Number <em>down</em> to the nearest multiple of an input. For example, by rounding\r\n * 16 down to the nearest 10, you will receive 10. Similar to the built-in function Math.floor().\r\n *\r\n * @see Math#floor\r\n *\r\n * @function GOWN.utils.roundDownToNearest\r\n * @param number The number to round down {Number}\r\n * @param nearest The number whose multiple must be found {Number}\r\n * @return {Number} The rounded number\r\n */\r\nmodule.exports = function(number, nearest) {\r\n    nearest = nearest || 1;\r\n    if(nearest === 0) {\r\n\t\treturn number;\r\n\t}\r\n\treturn Math.floor(roundToPrecision(number / nearest, 10)) * nearest;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/roundDownToNearest.js\n// module id = 56\n// module chunks = 0","var roundToPrecision = require('./roundToPrecision');\r\n\r\n/**\r\n * Rounds a Number to the nearest multiple of an input. For example, by rounding\r\n * 16 to the nearest 10, you will receive 20. Similar to the built-in function Math.round().\r\n *\r\n * @see Math#round\r\n *\r\n * @function GOWN.utils.roundToNearest\r\n * @param number The number to round {Number}\r\n * @param nearest The number whose multiple must be found {Number}\r\n * @return {Number} The rounded number\r\n */\r\nmodule.exports = function(number, nearest) {\r\n    nearest = nearest || 1;\r\n    if(nearest === 0) {\r\n\t\treturn number;\r\n\t}\r\n\tvar roundedNumber = Math.round(roundToPrecision(number / nearest, 10)) * nearest;\r\n    return roundToPrecision(roundedNumber, 10);\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/roundToNearest.js\n// module id = 57\n// module chunks = 0","var roundToPrecision = require('./roundToPrecision');\r\n\r\n/**\r\n * Rounds a Number <em>up</em> to the nearest multiple of an input. For example, by rounding\r\n * 16 up to the nearest 10, you will receive 20. Similar to the built-in function Math.ceil().\r\n *\r\n * @see Math#ceil\r\n *\r\n * @function GOWN.utils.roundUpToNearest\r\n * @param number The number to round up {Number}\r\n * @param nearest The number whose multiple must be found {Number}\r\n * @return {Number} The rounded number\r\n */\r\nmodule.exports = function(number, nearest) {\r\n    nearest = nearest || 1;\r\n    if(nearest === 0) {\r\n\t\treturn number;\r\n\t}\r\n\treturn Math.ceil(roundToPrecision(number / nearest, 10)) * nearest;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils/roundUpToNearest.js\n// module id = 58\n// module chunks = 0"],"sourceRoot":""}